import "math"
import "pe"

rule rc4_init
{
    meta:
        description = "RC4 algorithm's key scheduling and PRGA"
        vti_default_score = 1
        vti_documents_score = 1
        vti_scripts_score = 1
        vti_browser_score = 1
        vti_msi_score = 1
        vti_static_score = 1
        author = "VMRay Labs"

    strings:
        $rc4_init = { 48 89 5C 24 08 48 89 6C 24 10 48 89 74 24 18 57 48 81 EC 00 01 00 00 45 33 C9 48 8D 04 24 48 8B F1 48 8D 1C 24 45 8B D9 48 2B F0 48 8B EA 4C 8B D1 BF 00 01 00 00 41 8B C3 44 88 1C 1E 99 41 FF C3 41 F7 F8 48 63 C2 8A 0C 28 88 0B 48 FF C3 44 3B DF 7C E2 4C 8D 04 24 49 8B D2 4D 2B C2 41 0F B6 04 10 44 0F B6 1A 44 03 C8 45 03 CB 41 81 E1 FF 00 00 80 7D 0D 41 FF C9 41 81 C9 00 FF FF FF 41 FF C1 49 63 C9 42 8A 04 11 88 02 48 FF C2 46 88 1C 11 48 83 EF 01 75 C5 4C 8D 9C 24 00 01 00 00 49 8B 5B 10 49 8B 6B 18 49 8B 73 20 49 8B E3 5F C3 }

    condition:
        (
            vmray_target_class == "memory_dump"
            or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
        )
        and all of them
}

rule rc4_decrypt
{
    meta:
        description = "RC4 algorithm's decryption routine"
        vti_default_score = 1
        vti_documents_score = 1
        vti_scripts_score = 1
        vti_browser_score = 1
        vti_msi_score = 1
        vti_static_score = 1
        author = "VMRay Labs"

    strings:
        $rc4_decrypt = { 48 89 5C 24 08 48 89 7C 24 10 45 33 D2 4D 63 C0 48 8B FA 4C 8B D9 45 8B CA 4D 85 C0 7E 5E 41 8D 42 01 25 FF 00 00 80 7D 09 FF C8 0D 00 FF FF FF FF C0 4C 63 D0 43 0F B6 1C 1A 44 03 CB 41 81 E1 FF 00 00 80 7D 0D 41 FF C9 41 81 C9 00 FF FF FF 41 FF C1 49 63 C9 42 8A 04 19 43 88 04 1A 42 88 1C 19 43 0F B6 0C 1A 48 03 CB 0F B6 C1 42 8A 0C 18 30 0F 48 FF C7 49 83 E8 01 75 A2 48 8B 5C 24 08 48 8B 7C 24 10 C3 }

    condition:
        (
            vmray_target_class == "memory_dump"
            or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
        )
        and all of them
}

rule SandboxProductID
{
    meta:
        description = "Sandbox detection via leaked Windows product IDs"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "VMRay Labs"

    strings:
        $ = "76487-640-1457236-23837" wide ascii
        $ = "76487-337-8429955-22614" wide ascii
        $ = "76487-644-3177037-23510" wide ascii
        $ = "76497-640-6308873-23835" wide ascii
        $ = "55274-640-2673064-23950" wide ascii
        $ = "76487-640-8834005-23195" wide ascii
        $ = "76487-640-0716662-23535" wide ascii
        $ = "76487-644-8648466-23106" wide ascii
        $ = "00426-293-8170032-85146" wide ascii
        $ = "76487-341-5883812-22420" wide ascii
        $ = "76487-OEM-0027453-63796" wide ascii

    condition:
        (
            vmray_target_class == "memory_dump"
            or vmray_target_class == "function_strings"
            or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
        )
        and any of them
}

rule VMDeviceStrings
{
    meta:
        description = "VM detection via known device names"
        vti_default_score = 3
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $s1 = "qemu"
        $s2 = "virtio"
        $s3 = "vmware"
        $s4 = "vbox"
        $s5 = "xen"
        $s6 = "vid_80ee"
        $s7 = "ven_1b36"

    condition:
        vmray_target_class == "function_strings"
        and 5 of them
}

rule VMProcessNames
{
    meta:
        description = "VM detection via known process names"
        vti_default_score = 3
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        // Qemu
        $s1  = "qemu-ga.exe"
        $s2  = "qga.exe"
        // Qemu SPICE
        $s3  = "vdagent.exe"
        $s4  = "vdservice.exe"
        // Any.Run
        $s5  = "windanr.exe"
        // VirtualBox
        $s6  = "vboxservice.exe"
        $s7  = "vboxtray.exe"
        $s8  = "vboxdisp.dll"
        $s9  = "vboxhook.dll"
        $s10 = "vboxmrxnp.dll"
        $s11 = "vboxogl.dll"
        $s12 = "vboxoglarrayspu.dll"
        $s13 = "vboxoglcrutil.dll"
        $s14 = "vboxoglerrorspu.dll"
        $s15 = "vboxoglfeedbackspu.dll"
        $s16 = "vboxoglpackspu.dll"
        $s17 = "vboxoglpassthroughspu.dll"
        $s18 = "vboxservice.exe"
        // VMWare
        $s19 = "vmtoolsd.exe"
        $s20 = "vmwaretray.exe"
        $s21 = "vmwareuser.exe"
        $s22 = "VGAuthService.exe"
        $s23 = "vmacthlp.exe"
        // Parallels
        $s24 = "prl_tools.exe"
        $s25 = "prl_cc.exe"
        // VirtualPC
        $s26 = "vmsrvc.exe"
        $s27 = "vmusrvc.exe"

    condition:
        vmray_target_class == "function_strings"
        and 6 of them
}

rule VMModuleNames
{
    meta:
        description = "VM detection via known module names"
        vti_default_score = 3
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $s1  = "vmci.s"
        $s2  = "vmusbm"
        $s3  = "vmmous"
        $s4  = "vm3dmp"
        $s5  = "vmrawd"
        $s6  = "vmmemc"
        $s7  = "vboxgu"
        $s8  = "vboxsf"
        $s9  = "vboxmo"
        $s10 = "vboxvi"
        $s11 = "vboxdi"
        $s12 = "vioser"

        // KVM
        $s13 = "balloon"
        $s14 = "netkvm"
        $s15 = "pvpanic"
        $s16 = "viofs"
        $s17 = "viogpudo"
        $s18 = "vioinput"
        $s19 = "viorng"
        $s20 = "vioscsi"
        $s21 = "viostor"
        // HyperV
        $s22 = "vmbushid"
        $s23 = "vmbus"
        $s24 = "vmgid"
        $s25 = "indirectkmd"
        $s26 = "hypervideo"
        $s27 = "hyperkbd"
        // VMWare
        $s28 = "vmnet"
        $s29 = "vmmouse"
        $s30 = "vmusb"
        $s31 = "vmhgfs"
        $s32 = "vmmemctl"
        $s33 = "vmx86"
        $s34 = "vmrawdsk"
        $s35 = "vmusbmouse"
        $s36 = "vmkdb"
        $s37 = "vmnetuserif"
        $s38 = "vmnetadapter"
        // VBox
        $s39 = "vboxmouse"
        $s40 = "vboxguest"
        $s41 = "vboxvideo"

    condition:
        vmray_target_class == "function_strings"
        and 8 of them
}

rule Killbot_Protection
{
    meta:
        description = "Killbot bot detection service"
        vti_default_score = 1
        vti_documents_score = 1
        vti_scripts_score = 1
        vti_browser_score = 1
        vti_msi_score = 1
        vti_static_score = 1
        author = "VMRay Labs"

    strings:
        $s1 = "const killbot"
        $s2 = "apiKey"
        $s3 = "botRedirection"
        $s4 = "https://files.killbot.org"

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule Killbot_ApiKeys
{
    meta:
        description = "Known API keys for Killbot bot detection service associated with phishing"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "VMRay Labs"

    strings:
        $apikey1 = "Dg7AqDjKVT4jK6Zb0gz4UKLrUdvUtJRyfAviuotJ87unr"
        $apikey2 = "L7705gv6P6_VCxO2jmpfeS3nYOUy7NpueU_FGta1KOYdI"
        $apikey3 = "R6-jhR55NbbqWE3wQZEt7UVfLD7PQDmuVsQ8CHD5KbKD4"
        $apikey4 = "bMIU64-sFcycv4MRtmkaJVwXzSpoGeDnSGOU_4LpXC91t"
        $apikey5 = "eFVAipb_2tkWqxhJ_yRxhOUQi6DkZ1BBCZv7haCrVwQn5"
        $apikey6 = "etewm7WxokrpqKZ9R9P2e_sl-tTLNsQmhO8PG0c2WYURM"
        $apikey7 = "sxwzHH7cyftPyEL2hUIA_Df68AKGd-1TlHtE0avBjSUox"
        $apikey8 = "hWPE33H2kolW8LZeQHVhkpAu2rbM1BdDVGutZE0AHXPRM"

    condition:
        Killbot_Protection
        and any of them
}


rule PosRegex
{   
    meta:
        description = "Usage of regex used by POS malware"
        vti_default_score = 2
        vti_documents_score = 2
        vti_scripts_score = 2
        vti_browser_score = 2
        vti_msi_score = 2
        author = "VMRay Labs"

    strings:
        $s_alina1 = "1[0-2])[0-9]"
        $s_alina2 = "([0-9]{13,19}=(1[2-9])(0[1-9]|1[0-2])[0-9]{3,50}\\?)"
        $s_alina3 = "((%?[Bb]?)[0-9]{13,19}\\^[A-Za-z\\s]{0,26}/[A-Za-z\\s]{0,26}\\^(1[2-9])(0[1-9]|1[0-2])[0-9\\s]{3,50}\\?)"
        $s_alina4 = "((%?[BbÂ´`]?)[0-9]{13,19}\\^[A-Za-z\\s]{0,26}/[A-Za-z\\s]{0,26}\\^(1[2-9])(0[1-9]|1[0-2])[0-9\\s]{3,50}\\?)"
        $s_decebal1 = "\\d{13,19}-\\d{7}\\w*\\?" wide ascii
        $s_decebal2 = "\\d{13,19}=\\d{7}\\w*\\?" wide ascii
        $s_rdasrv1 = "((b|B)[0-9]{13,19}\\^[A-Za-z\\s]{0,30}\\/[A-Za-z\\s]{0,30}\\^(0[7-9]|1[0-5])((0[1-9])|(1[0-2]))[0-9\\s]{3,50}[0-9]{1})"
        $s_rdasrv2 = "([0-9]{15,16}[D=](0[7-9]|1[0-5])((0[1-9])|(1[0-2]))[0-9]{8,30})"
        $s_vskimmer1 = "[3-9]{1}[0-9]{12,19}[D=\\u0061][0-9]{10,30}"
        $s_glitch1 = ";\\d{13,19}=\\d{7}\\w*\\?" wide ascii
        $s_glitch2 = "(%B)\\d{0,19}\\^[\\w\\s\\/]{2,26}\\^\\d{7}\\w*\\?;\\d{13,19}=\\d{7}\\w*\\?" wide ascii
        $s_generic1 = "(([0-9]{13,19}=)|([a-zA-Z\\s]{3}\\^))(0[7-9]|1[0-5])((0[1-9])|(1[0-2]))"
        $s_generic3 = "((b|B)(([0-9]{13,16})|([0-9]|\\s){13,25})\\^[A-Za-z\\s0-9]{0,30}\\/[A-Za-z\\s0-9]{0,30}\\^(0[7-9]|1[0-5])((0[1-9])|(1[0-2]))([0-9]|\\s){3,50})"
        $s_generic4 = "([0-9]{15,16}(D|=)(0[7-9]|1[0-5])((0[1-9])|(1[0-2]))[0-9]{8,30})"

    condition:
        (
            vmray_target_class == "memory_dump"
            or vmray_target_class == "function_strings"
            or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
        )
        and any of ($s*)
}

rule Phishkit_Anz_uzer
{
    meta:
        description = "Phishing page from Phishkit.Anz_uzer"
        classifications = "Phishing"
        threat_names = "Phishkit.Anz_uzer"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "console.log('uzer empty');"
        $s2 = "console.log('uzer correct');"
        $s3 = "var Username1 = $('#Username1').val();"
        $s4 = "console.log('uzer wrong');"
        $ajax1 = "$.ajax({"
        $ajax2 = "action.php?type=login',"
        $ajax3 = "data : $('#ibLogonForm').serialize(),"
        $ajax4 = "if(parsed_data.status == 'ok'){"
        $ajax5 = "location.href = \"Loading.php\""

    condition:
        vmray_target_class == "web_request"
        and 6 of them
}

rule Phishkit_Baby_Two
{
    meta:
        description = "Phishing page from Phishkit.Baby_Two"
        classifications = "Phishing"
        threat_names = "Phishkit.Baby_Two"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s01 = /<title>(&(#\d{2,3}|period);\.?)+<\/title>/
        $s02 = "<script src=\"./js/MyBabyTwo.js\"></script>"
        $s03 = /<input class=\"\w{2,20}\s\w{2,20} input logon-xs-toggle \" maxlength=\"16\" minlength=\"16\" id=\"cardnutwo\" placeholder=\"\" autocomplete=\"off\" type=\"text\" name=\"cardnutwo\" inputmode=\"numeric\"/
        $s04 = "<form id=\"cardtwo-form\" name=\"cardtwo-form\" method=\"POST\" autocomplete=\"off\" action=\"\">"
        $s05 ="div id=\"fuckyeah\" style=\"display:none;\"" wide ascii
        $s06 = "<input type=\"hidden\" value=\"\" name=\"cardtype\" id=\"cardtype\">"
        $s07 = /<div class=\"\w{2,20}\s\w{2,20} raised segment\" id=\"cardo\" style=\"max-width: \d{2,4}px!important; display:none;\">/
        $s08 = /<input class=\"\w{2,20}\s\w{2,20} input logon-xs-toggle \" id=\"password1\" placeholder=\"\" autocomplete=\"off\" type=\"password\" name=\"password1\" required=\"\" value=\"\"/
        $s09 = /<div class=\"\w{2,20} align-label-input floating-label__container pswd1\">/
        $s10 = "document.write(new Date().getFullYear())"

    condition:
        vmray_target_class == "web_request"
        and 8 of them
}

rule SocialFish_Instagram
{
    meta:
        description = "Instagram phishing page from Phishkit.SocialFish"
        classifications = "Phishing"
        threat_names = "Phishkit.SocialFish"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "this is the file to which the IP address will be written; name it your way."
        $s2 = "check ip from share internet"
        $s3 = "to check if ip is pass from proxy"
        $s4 = "$victim = \"Victim Public IP: \";"
        $s5 = "fwrite($fp, $victim);"
        $s6 = "fwrite($fp, $ipaddress);"
        $s7 = "<!-- saved from url=(0026)https://www.instagram.com/ -->"

    condition:
        vmray_target_class == "web_request"
        and 5 of them
}

rule SocialFish_Cryptocoinsniper
{
    meta:
        description = "Cryptocoinsniper phishing page from Phishkit.SocialFish"
        classifications = "Phishing"
        threat_names = "Phishkit.SocialFish"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "<!-- Mirrored from www.cryptocoinsniper.co/members/members/login by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 25 Jun 2018 15:28:35 GMT -->"
        $s2 = "<!-- Added by HTTrack --><meta http-equiv=\"content-type\" content=\"text/html;charset=UTF-8\" /><!-- /Added by HTTrack -->"
        $s3 = "name=\"site_login\" action=\"login.php\""

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule SocialFish_Gmail
{
    meta:
        description = "Gmail phishing page from Phishkit.SocialFish"
        classifications = "Phishing"
        threat_names = "Phishkit.SocialFish"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "<!-- I AM A FAKE PAGE | DO NOT TRUST ME -->"
        $s2 = "<form novalidate=\"\" id=\"gaia_loginform\" action=\"login.php\" method=\"post\">"
        $s3 = "<title>Gmail: Email from Google</title>"

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule SocialFish_Microsoft
{
    meta:
        description = "Microsoft phishing page from Phishkit.SocialFish"
        classifications = "Phishing"
        threat_names = "Phishkit.SocialFish"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "method=\"post\" target=\"_top\" autocomplete=\"off\" data-bind=\"autoSubmit: forceSubmit, attr: { action: postUrl }\" action=\"login.php\""
        $s2 = "href=\"./index_files/Converged_v21033.css\""
        $s3 = "src=\"./index_files/ellipsis_grey.svg\""
        $s4 = "<title>Sign in to your Microsoft account</title>"

        $orig = "<!-- Copyright (C) Microsoft Corporation. All rights reserved. -->"

    condition:
        vmray_target_class == "web_request"
        and all of ($s*)
        and not $orig
}

rule SocialFish_Netflix
{
    meta:
        description = "Netflix phishing page from Phishkit.SocialFish"
        classifications = "Phishing"
        threat_names = "Phishkit.SocialFish"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "<form class=\"login-form\" action=\"login.php\" method=\"post\""
        $s2 = "src=\"Netflix_files/none_002.js\""
        $s3 = "src=\"Netflix_files/FB-f-Logo__blue_57.png\""
        $s4 = "window.netflix = window.netflix"

        $orig = "<form method=\"post\" class=\"login-form\" action=\"\">"

    condition:
        vmray_target_class == "web_request"
        and all of ($s*)
        and not $orig
}

rule SocialFish_Origin
{
    meta:
        description = "EA Origin phishing page from Phishkit.SocialFish"
        classifications = "Phishing"
        threat_names = "Phishkit.SocialFish"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "src=\"SIGN%20IN_files/www-widgetapi.js\""
        $s2 = "<form id=\"login-with-email-form\" action=\"login.php\" method=\"post\">"
        $s3 = "<p class=\"otkinput-errormsg otkc otkform-group-help\">The phone number you entered does not belong to any account. Try"
        $s4 = "'contextPath' : \"https://signin.ea.com:443/p\","

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule SocialFish_Pinterest
{
    meta:
        description = "Pinterest phishing page from Phishkit.SocialFish"
        classifications = "Phishing"
        threat_names = "Phishkit.SocialFish"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "src=\"login_files/warm.js\""
        $s2 = "<script src=\"login_files/130492214192672\" async=\"\">"
        $s3 = "<form method=\"POST\" action=login.php novalidate=\"\">"
        $s4 = "<title>Pinterest</title>"

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule SocialFish_Protonmail
{
    meta:
        description = "Protonmail phishing page from Phishkit.SocialFish"
        classifications = "Phishing"
        threat_names = "Phishkit.SocialFish"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "<script src=\"index_files/vendorLazy.js\" async=\"\">"
        $s2 = "<form method=\"post\" id=\"pm_login\" name=\"loginForm\""
        $s3 = "autocomplete=\"on\" ng-submit=\"enterLoginPassword($event)\" action=\"login.php\" ng-show=\"twoFactor === 0\">"
        $s4 = "<title>Login | ProtonMail</title>"

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule SocialFish_Wordpress
{
    meta:
        description = "Wordpress phishing page from Phishkit.SocialFish"
        classifications = "Phishing"
        threat_names = "Phishkit.SocialFish"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "<form name=\"loginform\" id=\"loginform\" action=\"login.php\" method=\"post\">"
        $s2 = "<input name=\"redirect_to\" value=\"http://localhost/wp-admin/\" type=\"hidden\">"
        $s3 = "<link rel=\"stylesheet\" href=\"index_files/load-styles.css\""
        $s4 = "<title>Log In â WordPress</title>"

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule SocialFish_Yahoo
{
    meta:
        description = "Yahoo phishing page from Phishkit.SocialFish"
        classifications = "Phishing"
        threat_names = "Phishkit.SocialFish"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "<title>Yahoo -&nbsp;login</title>"
        $s2 = "src=\"yahoo_files/boot.js\""
        $s3 = "src=\"yahoo_files/g-r-min.js\""
        $s4 = "<form id=\"login-username-form\" form action=\"login.php\" method=\"post\" class=\"username-challenge \">"

        $orig = "<form id=\"login-username-form\" method=\"post\" class=\"pure-form\">"

    condition:
        vmray_target_class == "web_request"
        and all of ($s*)
        and not $orig
}

rule Phishkit_WappGroup
{
    meta:
        description = "Phishing page from Phishkit.WappGroup"
        classifications = "Phishing"
        threat_names = "Phishkit.WappGroup"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $wapp_invite1 = "WhatsApp Group Invite" // also present in original
        $wapp_invite2 = "title=\"Follow this link to join: " // also present in original
        $wapp_join1 = "<form action=\"check.php\" method=\"post\">"
        $wapp_join2 = "onclick=\"location.href='login.php';\""

        $s1 = "=\"img/v4/icon.png\""
        $s2 = "NOTE: CHANGING COPYRIGHT DOES NOT MAKE YOU AS A CODER."

        $orig = "href=\"https://chat.whatsapp.com/invite/\""

    condition:
        vmray_target_class == "web_request"
        and 1 of ($wapp_invite*)
        and 1 of ($wapp_join*)
        and 1 of ($s*)
        and not $orig
}

rule Phishkit_PostenCarder
{
    meta:
        description = "Phishing page from Phishkit.PostenCarder"
        classifications = "Phishing"
        threat_names = "Phishkit.PostenCarder"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $common1 = "=\"app.isRememberMeEnabled()\""
        $common2 = "id=\"Visa_securityCodeTitle\""
        $common3 = "id=\"MasterCard_cardNoTitle\""
        $common4 = "name=\"frm\" method=\"post\" action=\"submit.php\""
        $common5 = "Posten uten 3DSecure"
        $common6 = "Brukersted:"
        $common7 = "style=\"font-weight:bold;\">Ordrenummer:"
        $common8 = "type=\"button\" onclick=\"return IsEmpty();"
        $common9 = "<title>Posten.no</title>"
        $common10 = "src=\"./css/TopLedge_New.png\""

        $kit1 = "<label for=\"code\">Engangskode fra SMS:</label>"
        $kit2 = "href=\"./mastercard.php\""
        $kit3 = "href=\"./visa.php\""

    condition:
        vmray_target_class == "web_request"
        and 4 of ($common*)
        or (2 of ($common*) and 1 of ($kit*))
}

rule Phishkit_Pulse_Animated
{
    meta:
        description = "Phishing page from Phishkit.Pulse_Animated"
        classifications = "Phishing"
        threat_names = "Phishkit.Pulse_Animated"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s01 = "window.open(url_part+$(this).data('nn'), '_blank', 'location=yes,height=570,width=520,scrollbars=yes,status=yes');"
        $s02 = "window.location.replace(get_extra_data(2));"
        $s03 = "var url_part = get_extra_data(1);"

        $c01 = "wow pulse animated animated"

        $reg01 = /data-nn=\"(GMA|OUT|AOL|YAHOO|OFFICE|OTHER)\.html(\#|\?username\=|\?yid\=)/

    condition:
        vmray_target_class == "web_request"
        and (
            2 of ($s*)
            or $reg01
            or (1 of ($s*) and #c01 > 5)
        )
}

rule Phishkit_IFSix
{
    meta:
        description = "Phishing page from Phishkit.IFSix"
        classifications = "Phishing"
        threat_names = "Phishkit.IFSix"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $spar01 = "onclick=\"return IF6.hideCountdownLayer(this);\""
        $spar02 = "class=\"if6_teaserarea section"
        $spar03 = "class=\"if6_outer if6_footer"
        $spar04 = "if6_outer if6_contactstage hide500 hide900"
        $spar05 = /\/internetfiliale\.min\.\w{20,40}\.(css|js)/
        $spar06 = "onclick=\"return IF.checkFirstSubmit();\""
        $spar07 = "<body class=\"if6 templ-bankingpage"

        $neg01 = "$('body').removeClass('search_visible').toggleClass('login_visible');"

        $p01 = "<form action=\"index.php\" name=\"\" method=\"post\" accept-charset=\"UTF-8\" autocomplete=\"off\" novalidate=\"novalidate\" class=\"abschlussweiche\">"
        $p02 = "<form action=\"error.php\""
        $p03 = "doGTranslate('en|en');"
        $p04 = "<label for=\"password\" class=\"\">PIN<em>*</em>:</label>"
        $p05 = "&#83;&#112;&#97;&#114;&#107;&#97;&#115;&#115;&#101;"
        $p06 = "&#79;&#110;&#108;&#105;&#110;&#101;&#45;&#66;&#97;&#110;&#107;&#105;&#110;&#103;"
        $p07 = "href=\"deka-investment.php\""
        $p08 = "href=\"credit-card.php\""
        $p09 = "<div class=\"home\"><a href=\"#\" title=\"Sparkasse"
        $p10 = "<!--login-online-banking-->"
        $p11 = "<form action=\"sendinfo.php\""

    condition:
        vmray_target_class == "web_request"
        and ( 2 of ($spar*) and 2 of ($p*) and 0 of ($neg*))
}

rule Phishkit_FbLocked
{
    meta:
        description = "Phishing page from Phishkit.FbLocked"
        classifications = "Phishing"
        threat_names = "Phishkit.FbLocked"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "Facebook - Log In or Sign Up"
        $s2 = "action=\"wrk2.php\" method=\"post\""
        $s3 = "type=\"submit\" action=\"wrk.php"
        $s4 = "data-savepage-src=\"/common/referer_frame.php\""
        $s5 = "<meta name=\"savepage-url\" content="
        $s6 = "<meta name=\"savepage-date\" content="
        $s7 = "DON'T GET LOCKED OUT! Verify your primary email address"

    condition:
        vmray_target_class == "web_request"
        and 4 of them
}

rule BlackhatCoder_iPKO
{
    meta:
        description = "iPKO phishing page from Phishkit.BlackhatCoder"
        classifications = "Phishing"
        threat_names = "Phishkit.BlackhatCoder"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "$.post(\"../../sms/redirect.php\", { \"id\": id })"
        $s2 = "bank: 'ipko',"
        $s3 = "url: '/payment/',"
        $s4 = /<!-- saved from url=\([0-9]{4}\)https:\/\/www\.ipko\.pl/
        $s5 = "src=\"./login_files/saved_resource(1)\""
        $s6 = "src=\"./index_files/saved_resource(1)\""
        $s7 = "src=\"./banking_files/saved_resource(1)\""
        $s8 = "src=\"./password_files/saved_resource(1)\""
        $s9 = "action=\"/payment/\" method=\"post\""
        $s10 = "iPKO â bankowoÅÄ elektroniczna PKO Banku Polskiego"

    condition:
        vmray_target_class == "web_request"
        and 3 of them
}

rule BlackhatCoder_Alior
{
    meta:
        description = "Alior phishing page from Phishkit.BlackhatCoder"
        classifications = "Phishing"
        threat_names = "Phishkit.BlackhatCoder"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "<!-- saved from url=(0035)https://system.aliorbank.pl/sign-in -->"
        $s2 = "src=\"./index_files/alior-logo.svg\""
        $s3 = "src=\"./index_files/Alior.js\""
        $s4 = "<alert key=\"main\"><!----></alert>"

    condition:
        vmray_target_class == "web_request"
        and 3 of them
}

rule BlackhatCoder_ING
{
    meta:
        description = "ING phishing page from Phishkit.BlackhatCoder"
        classifications = "Phishing"
        threat_names = "Phishkit.BlackhatCoder"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "Moje ING | ING Bank ÅlÄski"
        $s2 = "method=POST action=\"/payment/\""
        $s3 = "<!-- saved from url=(0043)https://login.ingbank.pl/"
        $s4 = "href=\"./index_files/template(1).css\""
        $s5 = "href=\"./pwd_files/template(1).css\""
        $s6 = "ProszÄ wprowadziÄ kod autoryzacyjny, ktÃ³ry otrzymaÅeÅ z&nbsp;banku"
        $conf1 = "Page saved with SingleFile"
        $conf2 = "<form action=\"sendsms.php\" action=\"post\""

    condition:
        vmray_target_class == "web_request"
        and 3 of them
}

rule BlackhatCoder_mBank
{
    meta:
        description = "mBank phishing page from Phishkit.BlackhatCoder"
        classifications = "Phishing"
        threat_names = "Phishkit.BlackhatCoder"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "mBank - serwis transakcyjny mTransfer"
        $s2 = "Serwis mTransfer"
        $s3 = "<!-- saved from url="
        $s4 = "src=\"./confirm_files/mbank-logo"
        $s5 = "src=\"./banking_files/mbank-logo"
        $s6 = "src=\"./login_files/signin(1)\""
        $s7 = "<form id=\"sendsms\" action=\"/payment/\""
        $s8 = ">fcwndnzzud</div>"

    condition:
        vmray_target_class == "web_request"
        and 3 of them
}

rule BlackhatCoder_Millenium
{
    meta:
        description = "Millenium phishing page from Phishkit.BlackhatCoder"
        classifications = "Phishing"
        threat_names = "Phishkit.BlackhatCoder"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "<title>Logowanie - Bank Millennium</title>"
        $s2 = "src=\"img/Logo@1x.png\""
        $s3 = "TwÃ³j MilleKod</span>"
        $s4 = "<form action=\"/payment/\" id=\"LoginForm\""
        $s5 = "ÐÐ±ÑÐ°Ð±Ð°ÑÑÐ²Ð°ÐµÐ¼ Ð¾ÑÐ¿ÑÐ°Ð²ÐºÑ"
        $s6 = "MillekodOrAlias.text(login.val());"
        $s7 = "= $('[name=\"pesel\"]');"

    condition:
        vmray_target_class == "web_request"
        and 3 of them
}

rule BlackhatCoder_Pekao
{
    meta:
        description = "Pekao phishing page from Phishkit.BlackhatCoder"
        classifications = "Phishing"
        threat_names = "Phishkit.BlackhatCoder"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = /<!-- saved from url=\([0-9]{4}\)https:\/\/www\.platnosci\.pekao24\.pl/
        $s2 = "Bank Pekao SA - Pekao24"
        $s3 = "<form action=\"/payment/\" method=\"POST\""
        $s4 = "href=\"./login_files/vendor"
        $s5 = "href=\"./banking_files/vendor"
        $s6 = "href=\"./sms_files/vendor"

    condition:
        vmray_target_class == "web_request"
        and 3 of them
}

rule BlackhatCoder_Santander
{
    meta:
        description = "Santander phishing page from Phishkit.BlackhatCoder"
        classifications = "Phishing"
        threat_names = "Phishkit.BlackhatCoder"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "<!-- saved from url="
        $s2 = "<title>Logowanie do Przelew24</title>"
        $s3 = "src=\"./index_files/f(2).txt\""
        $s4 = "src=\"./index_files/blik-logo.svg\""

    condition:
        vmray_target_class == "web_request"
        and 3 of them
}

rule PageBase64Encoded
{
    meta:
        description = "Page loads base64 encoded content from URL"
        classifications = ""
        threat_names = ""
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $s01 = "<script type=\"text/javascript\" src=\"b64.js\"></script>"
        $s02 = "<script type=\"text/javascript\" src=\"api.js\"></script>"
        $s03 = "var hash = window.location.hash.slice(1);"
        $s04 = "var data = b64.decode(hash);"
        $s05 = "document.write(decodeURIComponent(data));"

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule Phishkit_DemoBox
{
    meta:
        description = "Phishing page from Phishkit.DemoBox"
        classifications = "Phishing"
        threat_names = "Phishkit.DemoBox"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s01 = "Roundcube Dev Team"
        $s02 = "link.href = 'https://www.google.com/s2/favicons?domain=' + total1 + '';"
        $s03 = "function ChangeFavicon()"
        $s04 = "/api/render?output=screenshot&viewport.isLandscape=true&viewport.width="

        $s05 = "const demo809 = urlParams809.get('domain');"
        $s06 = "const imageBox99 = urlParams99.get('domain');"
        $s07 = "const image = urlParams.get('domain')"

        $s08 = "document.getElementById('imageBox99').src = "
        $s09 = "document.getElementById('ipaddy').value = data.ip;"
        $s10 = "ipify"
        $s11 = "rcmail.gui_object('loginform', 'login-form');"
        $s12 = "rcmail.gui_object('message', 'messagestack');"
        $s13 = "var email = $('#username').val();"
        $s14 = "var password = $('#password').val();"
        $s15 = "document.getElementById(\"demo\").innerHTML = 5 + 6;"
        $s16 = "document.getElementById(\"demo\").innerHTML = demo;"
        $s17 = "document.getElementById('aggents').value = aggents"

        $b01 = "Roundcube Dev Team" base64
        $b02 = "link.href = 'https://www.google.com/s2/favicons?domain=' + total1 + '';" base64
        $b03 = "function ChangeFavicon()" base64
        $b04 = "/api/render?output=screenshot&viewport.isLandscape=true&viewport.width=" base64

        $b05 = "const demo809 = urlParams809.get('domain');" base64
        $b06 = "const imageBox99 = urlParams99.get('domain');" base64
        $b07 = "const image = urlParams.get('domain')" base64

        $b08 = "document.getElementById('imageBox99').src = " base64
        $b09 = "document.getElementById('ipaddy').value = data.ip;" base64
        $b10 = "ipify" base64
        $b11 = "rcmail.gui_object('loginform', 'login-form');" base64
        $b12 = "rcmail.gui_object('message', 'messagestack');" base64
        $b13 = "var email = $('#username').val();" base64
        $b14 = "var password = $('#password').val();" base64
        $b15 = "document.getElementById(\"demo\").innerHTML = 5 + 6;" base64
        $b16 = "document.getElementById(\"demo\").innerHTML = demo;" base64
        $b17 = "document.getElementById('aggents').value = aggents" base64

    condition:
        vmray_target_class == "web_request"
        and (12 of ($s*) or 12 of ($b*))
}

rule Phishkit_Bill_tj
{
    meta:
        description = "Phishing page from Phishkit.Bill_tj"
        classifications = "Phishing"
        threat_names = "Phishkit.Bill_tj"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $smbc01 = "Sumitomo Mitsui Card"
        $smbc02 = "Vpassã­ã°ã¤ã³"
        $smbc03 = "smbc-card.com"

        $first01 = "action=\"../smbc_coll.php"
        $first02 = "src=\"./smbcupdatebill_files/"
        $first03 = "smbcupdatebill_files/logo_smbc"

        $second01 = "action=\"../smbc_coll.php"
        $second02 = "smbcupdatebill2_files/logo_smbc"
        $second03 = "<script src=\"../js/luhmCheck.js\"></script>"
        $second04 = "<script src=\"../js/bankcard.js\"></script>"
        $second05 = "$(\"input[name='card1']\").blur(function()"
        $second06 = "if(!luhmCheck($(\"input[name='card1']\").val())"
        $second07 = "ããªããå¥åããéè¡ã«ã¼ãã®çªå·ãééã£ã¦ãã¾ã"
        $second08 = "/ccchecker.php?ccValue="

    condition:
        vmray_target_class == "web_request"
        and all of ($smbc*)
        and (all of ($first*) or all of ($second*))
}

rule Phishkit_Colcore
{
    meta:
        description = "Phishing page from Phishkit.Colcore"
        classifications = "Phishing"
        threat_names = "Phishkit.Colcore"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $smbc01 = "Sumitomo Mitsui Card"
        $smbc02 = "Vpassã­ã°ã¤ã³"
        $smbc03 = "smbc-card.com"

        $s01 = "action=\"../app/core.php\" method=\"post\""
        $s02 = "value=\"ã­ã°ã¤ã³\""
        $s03 = "name=\"icol1\" placeholder=\"IDãå¥åãã¦ãã ãã\""
        $s04 = "name=\"icol2\" placeholder=\"ãã¹ã¯ã¼ããå¥åãã¦ãã ãã\""
        $s05 = "var CryptoJS=CryptoJS"
        $s06 = "indexOf(\"/memx/multicard_login/LoginUpdate_index.html\")"
        $s07 = "<!-- LINE Tag Base Code -->"
        $s08 = "!-- Do Not Modify -->"

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule Phishkit_VPArt
{
    meta:
        description = "Phishing page from Phishkit.VPArt"
        classifications = "Phishing"
        threat_names = "Phishkit.VPArt"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $smbc01 = "&nbsp;Sumitomo&nbsp;Mitsui&nbsp;Card&nbsp;Co.,&nbsp;Ltd."
        $smbc02 = "Vpassã­ã°ã¤ã³"
        $smbc03 = "smbc-card.com"

        $s01 = "<meta name=\"google-play-app\" content=\"app-id=com.smbc_card.vpass\">"
        $s02 = "<!-- <head>åJS -->"
        $s03 = "<img src=\"https://www.smbc-card.com/responsive/img/logo_smbc_01.jpg\""
        $s04 = "<img src=\"https://www.smbc-card.com/responsive/img/logo_smbcgroup.jpg\""
        $s05 = "<img src=\"https://www.smbc-card.com/static/responsive/img/smbcline.png\""
        $s06 = "<form action=\"doSaveVpass.php\" name=\"bemarhwo\" id=\"bemarhwo\" method=\"post\">"
        $s07 = "doSaveVpass.php"
        $s08 = "name=\"usr\" placeholder=\"IDãå¥åãã¦ãã ãã\""
        $s09 = "name=\"psw\" placeholder=\"ãã¹ã¯ã¼ããå¥åãã¦ãã ãã\""
        $s10 = "<!-- ã·éç¨ãã·ã¹ãã æå ±ã¨ãªã¢ Don't move start -->"

    condition:
        vmray_target_class == "web_request"
        and all of ($smbc*) and 8 of ($s*)
}

rule Phishkit_FBVer
{
    meta:
        description = "Phishing page from Phishkit.FBVer"
        classifications = "Phishing"
        threat_names = "Phishkit.FBVer"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $form1 = "<form action=\"MK1.php\""
        $form2 = "<form action=\"MK2.php\""
        $form3 = "<form action=\"Re1.php\" method=\"POST\">"
        $form4 = "<form action=\"facebook-verification.php\" method=\"POST\">"
        $form5 = "<form action=\"res.php\""
        $form6 = "<form action=\"otw1.php\""
        $form7 = "<form action=\"rek.php\""

        $s1 = "function Form1_Validator(theForm)"
        $s2 = "if (isset($_SERVER[\"HTTP_CF_CONNECTING_IP\"])) {"
        $s3 = "$this->httpGet(\"https://killbot.org/api/v1/blocker?ip=\".$ip.\"&apikey=\".$this->apikey.\"&ua=\".urlencode($_SERVER['HTTP_USER_AGENT']).\"&url=\".urldecode($_SERVER['REQUEST_URI']));"
        $s4 = "<meta property=\"og:title\" content=\"Facebook Verification\"/>"
        $s5 = "<meta name=\"description\" content=\"Verification Page Support Live\" />"
        $s6 = "<title>Facebook Login</title>"

        $fav1 = "https://i.ibb.co/TwyKTPG/logo.png"
        $fav2 = "https://static.xx.fbcdn.net/rsrc.php/yD/r/d4ZIVX-5C-b.ico"
        $fav3 = "https://cdn2.iconfinder.com/data/icons/social-media-icon-set-6/94/facebook-512.png"

    condition:
        vmray_target_class == "web_request"
        and 1 of ($form*)
        and 2 of ($s*)
        and 1 of ($fav*)
}

private rule MakoiLima_Common
{
    strings:
        $s1 = "id=\"browser\">"
        $s2 = "id=\"ip_address\">"
        $s3 = "id=\"hostname\">"
        $s4 = "id=\"pais\">"
        $s5 = "id=\"ciudad\">"
        $s6 = "id=\"region\">"
        $s7 = "id=\"code_p\">"
        $s8 = "id=\"code_p_area\">"
        $s9 = "id=\"sis_ope\">"
        $s10 = "id=\"dispositivo\">"
        $s11 = "id=\"id_sistema\">"
        $s12 = "id=\"iddapp\">"
        $s13 = "id=\"cant_input\">"

        $s14 = "sistema:$(\"#id_sistema\").val(),"
        $s15 = "browser:$.trim($(\"#browser\").val()),"
        $s16 = "ip_address:$.trim($(\"#ip_address\").val()),"
        $s17 = "dispositivo:$.trim($(\"#dispositivo\").val()),"

    condition:
        vmray_target_class == "web_request"
        and 6 of them
}

rule MakoiLima_iCloud
{
    meta:
        description = "iCloud phishing page from Phishkit.MakoiLima"
        classifications = "Phishing"
        threat_names = "Phishkit.MakoiLima"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "document.oncontextmenu = function(){return false;}"
        $s2 = ".ocult{display: none !important;}"
        $s3 = "onkeyup=\"opc_felcha();\""
        $s4 = "onblur=\"act_flecha()\""
        $s5 = "onkeyup=\"vis_flec()\""
        $s6 = "onclick=\"close_x()\""
        $s7 = "{($checked)}=\"isRememberMeChecked\""
        $s8 = "/imagen/spinner2.gif"
        $s9 = "($inserted)=\"focus()\""
        $s10 = "onclick=\"clos()\""
        $s11 = "function miFuncion() {"
        $s12 = "<title>iCloud</title>"
        $s13 = "/imagen/r$__116.png"
        $s14 = "<script>window.history.back();</script>"

    condition:
        vmray_target_class == "web_request"
        and (
            (MakoiLima_Common and 3 of them)
            or 7 of them
        )
}

rule MakoiLima_Facebook
{
    meta:
        description = "Facebook phishing page from Phishkit.MakoiLima"
        classifications = "Phishing"
        threat_names = "Phishkit.MakoiLima"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "top.location.href = \"login/\"+$(\"#iddapp\").val();"
        $s2 = "href=\"img/O2aKM2iSbOw.png\""
        $s3 = "js/pBU_7sCFVI4.js"
        $s4 = "action=\"/login/device-based/validate-pin/?refid=8\""
        $s5 = "/login/device-based/edit/?uid="
        $s6 = "<title>Iniciar sesiÃ³n en Facebook</title>"

    condition:
        vmray_target_class == "web_request"
        and 5 of them
}

rule MakoiLima_Instagram
{
    meta:
        description = "Instagram phishing page from Phishkit.MakoiLima"
        classifications = "Phishing"
        threat_names = "Phishkit.MakoiLima"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "$('#loginForm').on('submit', function (event) {"
        $s2 = "$(\".s3f\").css(\"display\",\"block\");"
        $s3 = "$(\".Yx5HN\").remove();"
        $s4 = "location.href ='https://www.instagram.com/?hl=es';"
        $s5 = "$(\".i24fI\").click(function(){"

    condition:
        vmray_target_class == "web_request"
        and MakoiLima_Common
        and 4 of them
}

rule MakoiLima_Paypal
{
    meta:
        description = "PayPal phishing page from Phishkit.MakoiLima"
        classifications = "Phishing"
        threat_names = "Phishkit.MakoiLima"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "$('.form_submit').on('submit', function (event) {"
        $s2 = "url: host+\"validlog.php\","
        $s3 = "onclick=\"reg();\""
        $s4 = "location.href = 'https://www.paypal.com/pe/signin';"

    condition:
        vmray_target_class == "web_request"
        and MakoiLima_Common
        and all of them
}

rule Phishkit_sD43aB
{
    meta:
        description = "Phishing page from Phishkit.sD43aB"
        classifications = "Phishing"
        threat_names = "Phishkit.sD43aB"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $id = "<div id=\"sD43aB\""
        $s01 = "<meta name=\"robots\" content=\"noimageindex, nofollow, nosnippet, noindex, noarchive, nocache, notranslate, noyaca \">"
        $s02 = "<title>...</title>"
        $s03 = "<title>Slgn ln t0 y0ur Acc0unt</title>"
        $s04 = "full url goes here"
        $s05 = "<div id=\"spinner\" class=\"spinner\" style=\"display:none;\"><div></div><div></div><div></div><div></div></div>"
        $s06 = "<div id=\"tResdD\">"
        $s07 = "var email = window.location.hash.substr(1);"
        $s08 = "document.getElementsByTagName('head')[0].appendChild(link);"
        $s09 = "\"application/x-www-form-urlencoded\"),n.onreadystatechange=function(){4===n.readyState&&(se())};var t=\"user=\"+e+\"&pass=\"+a;n.send(t)}"
        $s10 = "$.post(url, {user:a,pass:b}, function()"

    condition:
        vmray_target_class == "web_request"
        and $id and 5 of ($s*)
}

rule Phishkit_Voicemail_div
{
    meta:
        description = "Phishing page from Phishkit.Voicemail_div"
        classifications = "Phishing"
        threat_names = "Phishkit.Voicemail_div"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "$(\"#div2\").animate({ left: 0, opacity: \"hide\" }, 0);"
        $s2 = "-- ////////////////////////div1 end/////////////////////// -->"
        $s3 = ">abc@abc.com</span>"
        $s4 = "Expand Your<br> Microsoft</span><br><br>"
        $s5 = "$(\"#load-text\").html(\"Fax Recovered\");"
        $s6 = "<title>Outlook | Login</title>"
        $s7 = "if (!base64regex.test("
        $s8 = "/////////////url"
        $s9 = ">to continue Outlook</span><br>"
        
    condition:
        vmray_target_class == "web_request"
        and 5 of them
}

private rule Phishkit_Xbalti_Signin
{
    strings:
        $s1 = "<title dir=\"ltr\">Amazon"
        $s2 = "<form name=\"signineml\" method=\"post\" id=\"signineml\""
        $s3 = "#zwimel {"
        $s4 = "{\"AUI_158613\":\"T1\",\"AUI_PCI_RISK_BANNER_210084\":\"C\"}"
        $s5 = "name=\"appActionToken\" value=\"tFcFShIeaDFWxVOmmb6ZEj2BOv0toj3D\">"
        $s6 = "<div id=\"zwimel\" class=\"zwimel\""

    condition:
        vmray_target_class == "web_request"
        and 4 of them
}

private rule Phishkit_Xbalti_JS
{
    strings:
        $x = "XBALTI"
        $s1 = "$(\"form[name='signineml']\")"
        $s2 = "$(\"#zwimel\").show();"
        $s3 = "send_vbv.php\", $(\"#formvbv\")"
        $s4 = "passadmin: \"Enter Your Fucking Password\""
        $s5 = "(\"href\", \"../homepage/success.php?Congratulations\")"
        $s6 = "(\"href\", \"../homepage/Card.php?Update_Your_Card\")"

    condition:
        vmray_target_class == "web_request"
        and 5 of them
}

private rule Phishkit_Xbalti_Update
{
    strings:
        $s1 = "<form name=\"billingform\" id=\"billingform\" method=\"POST\""
        $s2 = "<form name=\"formcard\" id=\"formcard\" method=\"POST\""
        $s3 = "id=\"zwimel\" class=\"zwimel\""
        $s4 = "//ä½¿ç¨maskæ¹æ³æ£æµä¿®æ¹æ ¼å¼"
        $s5 = "$('input[name=\"phonenumber\"]').mask('+0000000000000');"
        $s6 = "$('input[name=\"dob\"]').mask('00/00/0000');"
        $s7 = "$('input[name=\"exdate\"]').mask('00/0000');"
        $s8 = "<title dir=\"ltr\">ããªãã®ã¢ã«ã¦ã³ã</title>"
        $s9 = "<title dir=\"ltr\">Your Account</title>"
        $s10 = "id=\"cvv\" name=\"cvc\""

    condition:
        vmray_target_class == "web_request"
        and 5 of them
}

rule Phishkit_Xbalti
{
    meta:
        description = "Phishing page from Phishkit.Xbalti"
        classifications = "Phishing"
        threat_names = "Phishkit.Xbalti"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    condition:
        vmray_target_class == "web_request"
        and (
            Phishkit_Xbalti_Signin
            or Phishkit_Xbalti_JS
            or Phishkit_Xbalti_Update
        )
}

rule Phishkit_Kuzuluy_PayPal
{
    meta:
        description = "Phishing page from Phishkit.Kuzuluy"
        classifications = "Phishing"
        threat_names = "Phishkit.Kuzuluy"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $redirect01 = "location:./Reference/Ref-ID-"
        $redirect02 = "<META HTTP-EQUIV='refresh' content='0; URL="
        $redirect03 = ".php?country.x="

        $main01 = "document.write(unescape("
        $main02 = "HTML Encryption provided by Free SEO Tools from Pingler"
        $main03 = "profileRememberedEmail"
        $main04 = "backToInputEmailLink"
        $main05 = "login_emaildiv"
        $main06 = "login_passworddiv"
        $main07 = "Relogging"
        $main08 = "unifiedlogin"
        $main09 = "Spassword"
        $main10 = "createAccount"
        $main11 = "loginSignUpSeparator"
        $main12 = "checkingInfo"
        $main13 = "CheckLoginAndSend.php"
        $main14 = /cmd(%3D|=)_Restore_Startcount(%26|&)_Acess_Tooken/
        $main15 = "makeid"
        $main16 = "<title>ProsÃ­m Äakajte</title>"

        $idcheck01 = "card_002"
        $idcheck02 = "logout1"
        $idcheck03 = "#myModal"
        $idcheck04 = "secondaryMobile"
        $idcheck05 = "addCreditOrDebit"
        $idcheck06 = "ccNumber"
        $idcheck07 = "CardExpInput"
        $idcheck08 = "CardcvvID"

        $3dsecure01 = "Authentication.php"
        $3dsecure02 = "id=\"sendOtpsq_hidden\""
        $3dsecure03 = "document.getElementById(\"sendOtpsq"
        $3dsecure04 = "function checkOtpAndSq"
        $3dsecure05 = "/^[a-zA-Z0-9]+$/;"
        $3dsecure06 = "\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\""

    condition:
        vmray_target_class == "web_request" and
        (
            (
                filesize < 200 and
                (
                    $redirect01
                    or ( $redirect02 and $redirect03 in (@redirect02[1]..@redirect02[1]+100))
                )
            )
            or 10 of ($main*)
            or all of ($idcheck*)
            or all of ($3dsecure*)
        )
}

rule Phishkit_TwentyNine
{
    meta:
        description = "Phishing page from Phishkit.TwentyNine"
        classifications = "Phishing"
        threat_names = "Phishkit.TwentyNine"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "<!-- saved from url=(0042)https://squareup.com/login?lang_code=en-CA -->"
        $s2 = "https://cellyru.github.io/css-july21/login.css"
        $s3 = "<link rel=\"canonical\" href=\"https://squareup.com/login\">"
        $s4 = "('imageBox').src"
        $s5 = "('imageBox99').src "
        $s6 = "function ChangeFavicon()"
        $s7 = "'https://www.google.com/s2/favicons?domain=' + total1 + '';"
        $s8 = "/themes/twenty-nine.php"
        $s9 = "(?!gmail.com)(?!yahoo.com)(?!bugcrowdninja.com)(?!test.com)(?!hotmail.com)(?!yahoo.co.in)(?!aol.com)(?!abc.com)(?!xyz.com)(?!pqr.com)(?!rediffmail.com)(?!live.com)(?!outlook.com)(?!me.com)(?!msn.com)(?!ymail.com)"
        $s10 = "alert('Please Enter Company Email Address');"

    condition:
        vmray_target_class == "web_request"
        and 5 of them
}

rule AjaxPostCredentials
{
    meta:
        description = "Page sends password using Ajax"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $s01 = "$.ajax({"
        $s02 = /type:\s{0,10}('|\")POST('|\")/
        $s03 = /dataType:\s{0,10}('|\")JSON('|\")/
        $s04 = /password('|\")?:\s{0,10}(password|pwd)/
        $s05 = "/^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;"

        $i1 = "indexOf(\"@\");"
        $i2 = "indexOf('.'));"

    condition:
        vmray_target_class == "web_request"
        and @s01 < @s02
        and @s01 < @s03
        and (
            @s01 < @s04
            or @s05 < @s01
            or ($i1 and $i2)
        )
}

rule FieldsetModal
{
    meta:
        description = "Page uses fieldset to show a modal dialog"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $h01 = /(others|office|linkedin|microsoft|salesforce)\.html/
        $h02 = "onClick=\"this.href=this.href.split('?')[0]+'?id='+new Date().getTime()+Math.random()\""

        $s01 = "<title>Sign In</title>"
        $s02 = "<fieldset>"
        $s03 = "</fieldset>"

    condition:
        vmray_target_class == "web_request"
        and all of them
        and @s02 < @s03
        and for all i in (1..#h01) : (@h01[i] > @s02 and @h01[i] < @s03)
        and for all i in (1..#h02) : (@h02[i] > @s02 and @h01[i] < @s03)
}

rule Phishkit_ConForm
{
    meta:
        description = "Phishing page from Phishkit.ConForm"
        classifications = "Phishing"
        threat_names = "Phishkit.ConForm"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $subdomain = "window.SUBDOMAIN_BASE = 'square.site';"
        $f1 = "\"layout\":\"contact-us-1\""
        $f2 = "\"purpose\":\"contact-form\""
        $f3 = "\"type\":\"contact-form\""

        $fe1 = "\"field\":\"email\""
        $fe2 = "\"label\":\"Email"
        $fe3 = "\"placeholder\":\"Email"
        $fe4 = "\"type\":\"email\""
        $fe5 = "\"altLabel\":\"Email\""

        $fp1 = "\"field\":\"shortAnswer\""
        $fp2 = "\"field\":\"name\""
        $fp3 = "\"placeholder\":\"Pas"
        $fp4 = "\"label\":\"Pas"
        $fp5 = "\"placeholder\":\"pas"
        $fp6 = "\"label\":\"pas"

        $fa1 = "\"enableRecaptcha\":"
        $fa2 = "\"notificationEmail\":"
        $fa3 = "Sign in" nocase
        $fa4 = "Sign-in" nocase

    condition:
        vmray_target_class == "web_request"
        and $subdomain
        and @f1 < @f2
        and @f2 < @f3
        and for any of ($fe*): (@ > @f3)
        and for 2 of ($fp*): (@ > @f3)
        and for 2 of ($fa*): (@ > @f3)
}

rule Phishkit_LogPicker
{
    meta:
        description = "Phishing page from Phishkit.LogPicker"
        classifications = "Phishing"
        threat_names = "Phishkit.LogPicker"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s_01 = "PARAM CAME===>>"
        $s_02 = "PARAM CAME 2===>>"
        $s_03 = "PARAM CAME 3===>>"
        $s_04 = "domain ===>"
        $s_05 = "Gaming things"
        $s_06 = "loginFinalSubmit(username);"
        $s_07 = "Invalid password or connection timed out please try again"
        $s_08 = "nopass"
        $s_09 = "window.location.href=\\x27"
        $s_10 = "clearbit.php?d="
        $s_11 = "call.php?u="
        $s_12 = "function loginPickerDisplay"

        $s_msapi_1 = "EstsProperties"
        $s_msapi_2 = "UserTenantBranding"
        $s_msapi_3 = "BannerLogo"
        $s_msapi_4 = "Illustration"
        $s_msapi_5 = "FederationRedirectUrl"

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule Phishkit_Prosecone
{
    meta:
        description = "Phishing page from Phishkit.Prosecone"
        classifications = "Phishing"
        threat_names = "Phishkit.Prosecone"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s01 = "Sharing Link Validation"
        $s02 = "Verify Your Identity"
        $s03 = "You've received a secure file"
        $s04 = "To receive and download"
        $s05 = "enter specific professional email credentials"
        $s06 = "Wrong password! Please try again"
        $s07 = "That account doesn't exist. Enter a different account"
        $s08 = "Why do I have to do this?"
        $s09 = "shared this link with you is sharing with a secure link"

        $c01 = "/* global $ */"
        $c02 = "///new injection///"
        $c03 = "///url ai getting///"
        $c04 = "///url getting ai///"
        $c05 = "window.location.hash.substr(1)"
        $c06 = "window.location.replace(\"https://login.microsoftonline.com/common/login\")"

    condition:
        vmray_target_class == "web_request"
        and 6 of ($s*)
        and 3 of ($c*)
}

rule Phishkit_FamilyPet
{
    meta:
        description = "Phishing page from Phishkit.FamilyPet"
        classifications = "Phishing"
        threat_names = "Phishkit.FamilyPet"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s01 = "Signin Outlook WebApp Settings"
        $s02 = "&copy;2021 Microsoft"
        $s03 = ">Sign in</button>"
        $s04 = "The password you entered isn't correct. Try entering your correct password again."
        $s05 = "<span id=privateLabel aria-hidden=true>Private computer</span>"
        $s06 = "action=\"\" method=\"post\">"
        $s07 = "URLSearchParams(location.search).get('email');"
        $s08 = "URLSearchParams(location.search).get('error');"
        $s09 = "document.getElementById('pet')"
        $s10 = ".indexOf('@') + 1)"

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule Phishkit_Need
{
    meta:
        description = "Phishing page from Phishkit.Need"
        classifications = "Phishing"
        threat_names = "Phishkit.Need"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $r01 = "&nbsp;  &nbsp;  webmail Login"
        $r02 = "need.php"
        $r03 = "Secured Login session?"
        $r04 = "<title>WebMail </title>"

        $s01 = "img/favicons.png"
        $s02 = "img/opened-email-envelope.png"
        $s03 = "alt=\"Mailbox\""
        $s04 = "name=\"em\""
        $s05 = "name=\"ps\""
        $s06 = "remember-me"
        $s07 = "Privacy Policy"
        $s08 = "Copyright\xC2\xA9 2020"

    condition:
        vmray_target_class == "web_request"
        and all of ($r*)
        and 6 of ($s*)
}

rule Phishkit_Ellipsis
{
    meta:
        description = "Phishing page from Phishkit.Ellipsis"
        classifications = "Phishing"
        threat_names = "Phishkit.Ellipsis"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $r01 = "Function Disabled! Enter password to continue"
        $r02 = "action.php"
        $r03 = "card-body"
        $r04 = "card-title"
        $r05 = "ellipsis_white.svg"
        $r06 = "> Validation successful, you are now being redirected...."
        $r07 = "Sign in attempt timeout, verify your password"
        $r08 = "$(\"#div4\").show();"
        $r09 = "$(\"#myElem\").hide();"

        $s01 = "Microsoft Office Center"
        $s02 = "Arrow Backwards"
        $s03 = "Enter your account password."

    condition:
        vmray_target_class == "web_request"
        and 8 of ($r*)
        and all of ($s*)
}

rule Phishing_CaptchaSiteKeys
{
    meta:
        description = "Known captcha site keys associated with phishing"
        classifications = "Phishing"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "VMRay Labs"

    strings:
        $s01 = "6Ld_jjodAAAAAOy5KgC_xqaH8ZLf-EAZwkbDBOZm"
        $s02 = "6LeAvtAcAAAAAEtDoq_PrX0P-99KpYlMgPXn_pM1"
        $s03 = "6LfDaWscAAAAAFFgO6qqI64cFFZlLvC59c3jCU8w"
        $s04 = "6LeAskIdAAAAAHWmb5WAph9oTXXMosrTJM53IkB3"
        $s05 = "6Lc-zVMdAAAAAGx2YS4xxjKSS0ocZgR69aC5pG0-"
        $s06 = "6Lcn1iIdAAAAAOWBysRd39lQxrAz4sD_V0NRIXpt"
        $s07 = "6LcrNkIdAAAAADok-G4An_VjNlIk6z8obtlujQJz"
        $s08 = "6Ld6eFMdAAAAAP-dnpyVMtZmdKmonilD9hGLH_KB"
        $s09 = "6LdFtVMdAAAAAL7gRM3hgECSDqkPYaiXbU-uQX38"
        $s10 = "6LeJSycdAAAAAKisGo8fp6CAOvn_J0MDDUHL-eLk"
        $s11 = "6LdxVDgdAAAAAMlFwVhX-8iAS8SiAuRQqoE9fW79"
        $s12 = "6LelCWMdAAAAAA61EGmH_smy2YDebD9IVmaOA-6O"
        $s13 = "6LeR2CgfAAAAAHMWchxky6KqN77ZUal4Gq_hVLlt"
        $s14 = "6Levs98eAAAAADrF2_GuW5AybKMZvHt21LVLYcqk"
        $s15 = "6Lcf2-EhAAAAAAb4lCjGZLljSQMQ9lL7LxhkWGBN"

    condition:
        vmray_target_class == "web_request"
        and any of them
}

rule Phishing_CaptchaPage
{
    meta:
        description = "Captcha-only page commonly used for phishing"
        classifications = "Phishing"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "VMRay Labs"

    strings:
        $r01 = "g-recaptcha"
        $r02 = "data-sitekey"
        $r03 = "data-callback"

        $s01 = "my-auto"
        $s02 = "recaptchaCallback"
        $s03 = "document.getElementById(\"myForm\")"

        $t01 = "correctCaptcha"
        $t02 = "grecaptcha"
        $t03 = "g-recaptcha-response"
        $t04 = "location.hash.substr(1)"

        $f01_1 = "<form method=\"post\""
        $f01_2 = "action=\"main.php\""
        $f02_1 = "<form action=\"main.php#"
        $f02_2 = "method=\"post\" id=\"myForm\">"

    condition:
        vmray_target_class == "web_request"
        and all of ($r*)
        and (
            (
                all of ($s*)
                and 2 of ($f*)
            )
            or all of ($t*)
        )
}

rule Phishing_CaptchaPage_Demo
{
    meta:
        description = "Captcha demo page associated with phishing"
        classifications = "Phishing"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "VMRay Labs"

    strings:
        $s01 = "reCAPTCHA demo: Simple page"
        $s02 = "onloadCallback = function()"
        $s03 = "grecaptcha.render"
        $s04 = "html_element"
        $s05 = "sitekey"
        $s06 = "script src=\"https://www.google.com/recaptcha/api.js\""

        $f01 = "form action=\"\" method=\"post\"" nocase
        $f02 = "div id=\"html_element\""
        $f03 = "input type=\"submit\" name=\"submit\"" nocase

        $c01 = "human" nocase
        $c02 = "payroll" nocase

    condition:
        vmray_target_class == "web_request"
        and all of ($s*)
        and all of ($f*)
        and any of ($c*)
}

rule Phishkit_Modax
{
    meta:
        description = "Phishing page from Phishkit.Modax"
        classifications = "Phishing"
        threat_names = "Phishkit.Modax"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s01 = /href\=\"javascript:void\(0\)\"\ id\=\"(office365modal|aolmodal|outlookmodal|gmailmodal|yahoomodal|othermodal)\"/
        $s02 = "To read the document, please enter with the valid email credentials that this file was sent to."
        $s03 = "We'll never share your email with anyone else."
        $s04 = "<!-- Modal for gmail -->"
        $s05 = "#ajaxModal"

        $m01 = "#gmailmodal"
        $m02 = "#outlookmodal"
        $m03 = "#aolmodal"
        $m04 = "#office365modal"
        $m05 = "#yahoomodal"
        $m06 = "#othermodal"

        $p01 = "Sign in with Office365"
        $p02 = "Sign in with Outlook"
        $p03 = "Sign in Outlook Web App (OWA)"
        $p04 = "Sign in with Google GSuite"
        $p05 = "Sign in with Other Mail"

    condition:
        vmray_target_class == "web_request"
        and all of ($s*)
        and 4 of ($m*)
        and 2 of ($p*)
}

rule Phishkit_DigidBank
{
    meta:
        description = "Phishing page from Phishkit.DigidBank"
        classifications = "Phishing"
        threat_names = "Phishkit.DigidBank"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s01 = "Mijn Overheid | Belastingdienst"
        $s02 = "DigiD account"
        $s03 = "federalefinancien.site/content/marktplaats/"
        $s04 = "FOD FinanciÃ«n"
        $s05 = "mp-Card mp-Card--rounded BanksListMolecule"
        $s06 = "input hidden=\"\" id=\"bankselect\" name=\"tikkiebankselect\""
        $s07 = "Type bankrekening"
        $s08 = "var selectedbank = document.getElementById('selected-bank');"
        $s09 = "radioselected && tcsaccepted && selectedbank.innerText !="
        $bank_cmp = "selectedbank.innerText == "

    condition:
        vmray_target_class == "web_request"
        and all of ($s*) and #bank_cmp > 4
}

rule Phishing_ObfuscatedJS
{
    meta:
        description = "Phishing page containing obfuscated JavaScript"
        classification = "Phishing"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "VMRay Labs"

    strings:
        $s1 = "\\x66\\x75\\x6e\\x63\\x74\\x69\\x6f\\x6e\\x20\\x2a\\x5c\\x28\\x20\\x2a\\x5c\\x29"
        $s2 = "\\x72\\x65\\x74\\x75\\x72\\x6e\\x20\\x28\\x66\\x75\\x6e\\x63\\x74\\x69\\x6f\\x6e\\x28\\x29\\x20"
        $s3 = "\\x5c\\x2b\\x5c\\x2b\\x20\\x2a\\x28\\x3f\\x3a\\x5b\\x61\\x2d\\x7a\\x41\\x2d\\x5a\\x5f\\x24\\x5d\\x5b\\x30\\x2d\\x39\\x61\\x2d\\x7a\\x41\\x2d\\x5a\\x5f\\x24\\x5d\\x2a\\x29"
        $s4 = "\\x28\\x28\\x28\\x2e\\x2b\\x29\\x2b\\x29\\x2b\\x29\\x2b\\x24"
        $s5 = "\\x7b\\x7d\\x2e\\x63\\x6f\\x6e\\x73\\x74\\x72\\x75\\x63\\x74\\x6f\\x72\\x28\\x22\\x72\\x65\\x74\\x75\\x72\\x6e\\x20\\x74\\x68\\x69\\x73\\x22\\x29\\x28\\x20\\x29"

        $email = "<input id=\"testx\" name=\"email\" value="

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule Phishkit_HumaidApp
{
    meta:
        description = "Phishing page from Phishkit.HumaidApp"
        classifications = "Phishing"
        threat_names = "Phishkit.HumaidApp"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s01 = "WebApp | User:"
        $s02 = /input\[type\=(submit|password|email)\]/
        $s03 = "To continue, please verify your ID to prove You're Human"
        $s04 = "<form method=\"post\" action=\"./app1.php\">"
        $s05 = "name=\"passwd\""

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule Phishkit_Flexdash
{
    meta:
        description = "Phishing page from Phishkit.Flexdash"
        classifications = "Phishing"
        threat_names = "Phishkit.Flexdash"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $required01 = "Outlook WebApp"
        $required02 = "//c.s-microsoft.com/static/"
        $required03 = "display: -ms-flexbox;"
        $required04 = ".sidebar .owaLogoContainer"

        $s01 = "onclick=\"suc()\""
        $s02 = "#inputPassword"
        $s03 = "'window.location.href=\\x27https://www.office.com/?auth=2\\x27;'"
        $s04 = "'InÂ­correct\\x20PÐ°Â­sÂ­sÂ­wÐ¾Â­rd.."
        $s05 = "'{}.constructor(\\x22return\\x20this\\x22)(\\x20)'"
        $s06 = "'\\x5c+\\x5c+\\x20*(?:_0x(?:[a-f0-9]){4,6}|(?:\\x5cb|\\x5cd)[a-z0-9]{1,4}(?:\\x5cb|\\x5cd))'"
        $s07 = "new XMLHttpRequest()"
        $s08 = "$('.login-box')"
        $s09 = "setTimeout"
        $s10 = "'while\\x20(true)\\x20{}'"

    condition:
        vmray_target_class == "web_request"
        and all of ($required*) and 7 of ($s*)
}

rule XHRPostCredentials
{
    meta:
        description = "Page sends password using XMLHttpRequest"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
		$s01 = "const request = new XMLHttpRequest();"
        $s02 = "btoa(`${form.email.value}||${form.password.value}`);"
		$s03 = "const requestData = `data=${dex}`;"

    condition:
        vmray_target_class == "web_request"
        and @s01 < @s02
		and @s02 < @s03
}

private rule _VBA_macro
{
    meta:
        description = "Rule used to restrict evaluation of macro content analysis rules"
        author = "VMRay Labs"

    condition:
        mime_type == "application/x-vba-macros"
}

rule VBA_Obfuscation_ObjectName
{
    meta:
        description = "VBA initializes COM object from long variable name; possible obfuscation"
        vti_default_score = 2
        vti_documents_score = 2
        vti_scripts_score = 2
        vti_browser_score = 2
        vti_msi_score = 2
        vti_static_score = 2
        author = "VMRay Labs"

    strings:
        $ = /\bCreateObject\s*\(\s*[a-z_]{12,}\)/ nocase
        $ = /\bCreateObject\s*\(\s*\"[\w\.]+\"\s*[&+,]\s*\w+\s*[&+,]\s*\"[\w\.]+\"\s*\)/ nocase
        $ = /\bCreateObject\s*\(\s*\w{10,}([\s+&]*[a-z]+)*\)/ nocase
        $ = /\bCreateObject\s*\(\s*\w+\((\"?[\S ]+\"?([,+&]\s*)?)\)\)/ nocase

    condition:
        _VBA_macro and any of them
}

rule VBA_Create_File
{
    meta:
        description = "VBA macro contains file creation commands; possible dropper"
        vti_default_score = 2
        vti_documents_score = 2
        vti_scripts_score = 2
        vti_browser_score = 2
        vti_msi_score = 2
        vti_static_score = 2
        author = "VMRay Labs"

    strings:
        $ado = /\bCreateObject\s*\(\s*(\"ADODB\.Stream\")\s*\)/ nocase
        $ado_methods = /\b\w+\.(CopyTo|SaveToFile|Write(Line|Text)?)\s*[\w\.\"\\\-\/:,+~!@#$&%?()<>= ]+\W/ nocase

        $fso = /\bCreateObject\s*\(\s*(\"Scripting\.FileSystemObject\")\s*\)/ nocase
        $fso_methods = /\b\w+\.(CreateTextFile|Write(Line|Text)?)\s*[\w\.\"\\\-\/:,+~!@#$&%?()<>= ]+\W/ nocase

        $api = /\bCreateFile(A|W)?\s*\(?\"?\w+\"?(,\s*[\"\w&]+){6}\)/ nocase

        $bin1 = /\bOpen\s+\w+\s+For\s+Binary\s+(Access\s+\w+\s+)?As\s+#\d{1,3}/ nocase
        $bin2 = /\bPut\s+#\d{1,3},\s*\d+,\s*\w+/

    condition:
        _VBA_macro
        and (
            ($ado and $ado_methods)
            or ($fso and $fso_methods)
            or any of ($api*)
            or 2 of ($bin*)
            or (VBA_Obfuscation_ObjectName and ($ado_methods or $fso_methods))
        )
}

rule VBA_Download_Commands
{
    meta:
        description = "VBA macro may attempt to download external content; possible dropper"
        vti_default_score = 2
        vti_documents_score = 2
        vti_scripts_score = 2
        vti_browser_score = 2
        vti_msi_score = 2
        vti_static_score = 2
        author = "VMRay Labs"

    strings:
        $msxml = /\bCreateObject\s*\(\s*(\"Microsoft\.XMLHTTP\"|\"MSXML2\.XMLHTTP\"|\"MSXML2\.ServerXMLHTTP\.\d\.\d\"|\"WinHttp\.WinHttpRequest\.\d.\d\")\s*\)/ nocase
        $msxml_methods = /\b\w+\.(Open|Send|SetRequestHeader)\s*[\w\.\"\\\-\/:,+~!@#$&%?()<>= ]+\W/ nocase

        $api1 = "URLDownloadToFileA" fullword nocase

    condition:
        _VBA_macro
        and (
            ($msxml and $msxml_methods)
            or any of ($api*)
            or (VBA_Obfuscation_ObjectName and $msxml_methods)
        )
}

rule VBA_Execution_Commands
{
    meta:
        description = "VBA macro may execute files or system commands"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $api1 = /\bCreateProcessA?\b\s*\(?\"?[\w&]+\"?(,\s*[\"\w&]+){9}\)/
        $api2 = /\bShellExecuteA?\b\s*\(?[\"\w&]+(,\s*[\"\w&]+){5}\)?/ nocase
        $api3 = /\bWinExec\b\s+\(?[\\\w\"\. :~]+,\s*\d\)?/ nocase

    condition:
        _VBA_macro
        and (
            any of ($api*)
        )
}

rule VBA_Obfuscation_Base64_PEFile
{
    meta:
        description = "VBA contains base64-encoded PE signature; possible dropper"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "VMRay Labs"

    strings:
        $ = "TVqQAAMAAAAEAAAA//8AALgAAA"
        $ = "TVqQAAIAAAAEAA8A//8AALgAAA"
        $ = "TVqAAAEAAAAEABAAAAAAAAAAAA"
        $ = "TVoAAAAAAAAAAAAAAAAAAAAAAA"
        $ = "TVpTAQEAAAAEAAAA//8AALgAAAA"

    condition:
        _VBA_macro and any of them
}

rule VBA_Obfuscation_Chain_Funcs
{
    meta:
        description = "VBA contains numerous functions which only call another function; possible obfuscation"
        vti_default_score = 2
        vti_documents_score = 2
        vti_scripts_score = 2
        vti_browser_score = 2
        vti_msi_score = 2
        vti_static_score = 2
        author = "VMRay Labs"

    strings:
        $func_only_calls = /\b(Private|Public|Static)?\s*(Function|Sub)\s+\w+\(\)(\s*As\s*\w+)?(\s*As\s*\w+)?(\s+(Call\s*)?\w+(\s*\(?\s*\"\w+\"?\)?){1,2})+\s+End\s+(Function|Sub)/ nocase

    condition:
        _VBA_macro
        and #func_only_calls > 10
}

rule VBA_Obfuscation_Long_VarName
{
    meta:
        description = "VBA contains excessively long variable names; possible obfuscation"
        vti_default_score = 2
        vti_documents_score = 2
        vti_scripts_score = 2
        vti_browser_score = 2
        vti_msi_score = 2
        vti_static_score = 2
        author = "VMRay Labs"

    strings:
        $var1 = /Const [a-z]{30,}/ fullword nocase
        $var2 = /Dim [a-z]{30,}/ fullword nocase
        $var3 = /Set [a-z]{30,}/ fullword nocase

    condition:
        _VBA_macro and for any of ($var*) : ( # > 5 )
}

rule VBA_Process_Injection
{
    meta:
        description = "VBA macro may attempt to inject code into another process"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "VMRay Labs"

    strings:
        $ = "CreateRemoteThread" fullword nocase
        $ = "CreateThread" fullword nocase
        $ = "CreateToolhelp32Snapshot" fullword nocase
        $ = "LoadLibraryA" fullword nocase
        $ = "NtCreateThreadEx" fullword nocase
        $ = "NtUnmapViewOfSection" fullword nocase
        $ = "OpenProcess" fullword nocase
        $ = "QueueUserAPC" fullword nocase
        $ = "RtlCreateUserThread" fullword nocase
        $ = "RtlMoveMemory" fullword nocase
        $ = "SetThreadContext" fullword nocase
        $ = "SuspendThread" fullword nocase
        $ = "VirtualAlloc" fullword nocase
        $ = "VirtualAllocEx" fullword nocase
        $ = "VirtualProtect" fullword nocase
        $ = "WriteProcessMemory" fullword nocase
        $ = "ZwUnmapViewOfSection" fullword nocase

    condition:
        _VBA_macro and 3 of them
}

rule VBA_Time_Delay_Loops
{
    meta:
        description = "VBA macro utilizes time delay loops; possible impact upon dynamic analysis"
        vti_default_score = 1
        vti_documents_score = 1
        vti_scripts_score = 1
        vti_browser_score = 1
        vti_msi_score = 1
        vti_static_score = 1
        author = "VMRay Labs"

    strings:
        $do_until = /\bDo Until\s+\((Now|Time)(\(\))?\s*>=?\s*\w+\)/ nocase
        $loop_until = /\bDo\s+(\S+)?\s*DoEvents\s+(\S+)?\s*Loop Until\s+\w+\s*>?=\s*\w+/ nocase

    condition:
        _VBA_macro
        and (
            any of them
        )
}

rule VBA_Time_Delay_with_HighVal
{
    meta:
        description = "VBA macro utilizes long time delay functions; possible analysis counter-measure"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $sleep_func = /[^.']Sleep\s*\(?\s*\d{5,}(\s*\))?/ nocase
        $sleep_method = /\b(System\.Threading\.Thread\.|wscript\.)Sleep\s*(\(\s*)?\d{5,}\)?/ nocase

        $wait_dateadd = /\bApplication\.Wait\s+DateAdd\s*\(\s*(\"s\",\s*\d{2,}|\"[hm]\",\s*\d),\s*Now\s*(\(\))?\s*\)/ nocase
        $wait_timeserial_h = /\bApplication\.Wait\s+(\(\s*)?(Time\s*\+\s*)?TimeSerial\(\s*Hour\(Now(\(\))?\)\s*\+\s*\d+,\s*Minute\(Now(\(\))?\),\s*Second\(Now(\(\))?\)\)/ nocase
        $wait_timeserial_m = /\bApplication\.Wait\s+(\(\s*)?(Time\s*\+\s*)?TimeSerial\(\s*Hour\(Now(\(\))?\),\s*Minute\(Now(\(\))?\)\s*\+\s*\d+,\s*Second\(Now(\(\))?\)\)/ nocase
        $wait_timeserial_s = /\bApplication\.Wait\s+(\(\s*)?(Time\s*\+\s*)?TimeSerial\(\s*Hour\(Now(\(\))?\),\s*Minute\(Now(\(\))?\),\s*Second\(Now(\(\))?\)\s*\+\s*(0\d{2,}|[1-9][0-9]+)\s*\)/ nocase
        $wait_timestr = /\bApplication.Wait\s+(\(\s*)?\"(([1-9]|0[1-9]|[1-9][0-9]):\d{2}:\d{1,2}|\d{2}:(0[1-9]|[1-9][0-9]):\d{1,2}|\d{1,2}:\d{2}:[1-9][0-9])\"\)?/ nocase
        $wait_timeval = /\bApplication\.Wait\s+(\(\s*)?Now(\(\))?\s*\+\s*TimeValue\(\s*\"(([1-9]|0[1-9]|[1-9][0-9]):\d{2}:\d{1,2}|\d{2}:(0[1-9]|[1-9][0-9]):\d{1,2}|\d{1,2}:\d{2}:[1-9][0-9])\"\)\)?/ nocase

    condition:
        _VBA_macro
        and (
            any of them
        )
}

rule VBA_Time_Delay_with_Obfuscation
{
    meta:
        description = "VBA macro utilizes obfuscated time delay functions; possible analysis counter-measure"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $time_serial = /\bTimeSerial\(\s*[a-z]+,\s*[a-z]+,\s*\d+\s*\)/ nocase
        $time_value = /\bTimeValue\(\s*[a-z]+\(.+\)\)/ nocase

    condition:
        _VBA_macro
        and (
            any of them
        )
}

rule WScriptShell_Case_Anomaly
{
    meta:
        description = "Obfuscated wscript.shell commands"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "Florian Roth"
        source = "https://github.com/Neo23x0/signature-base"
        original_name = "WScriptShell_Case_Anomaly"
        license = "GPL-3.0 (https://opensource.org/licenses/GPL-3.0)"

    strings:
        $s1 = "WScript.Shell\").Run" nocase ascii wide
        $sn1 = "WScript.Shell\").Run" ascii wide
        $sn2 = "wscript.shell\").run" ascii wide
        $sn3 = "WSCRIPT.SHELL\").RUN" ascii wide
        $sn4 = "Wscript.Shell\").Run" ascii wide
        $sn5 = "WScript.Shell\").Run" ascii wide
        $sn6 = "WScript.shell\").Run" ascii wide

    condition:
        _VBA_macro and $s1 and not 1 of ($sn*)
}

rule ReflectiveLoader
{
    meta:
        description = "Reflective loader usage"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        source = "https://github.com/Neo23x0/signature-base"
        original_name = "ReflectiveLoader"
        license = "GPL-3.0 (https://opensource.org/licenses/GPL-3.0)"

    strings:
        $s1 = "ReflectiveLoader" fullword ascii
        $s2 = "ReflectivLoader.dll" fullword ascii
        $s3 = "?ReflectiveLoader@@" ascii

    condition:
        uint16(0) == 0x5a4d and (1 of them or pe.exports("ReflectiveLoader") or pe.exports("_ReflectiveLoader@4") or pe.exports("?ReflectiveLoader@@YGKPAX@Z"))
}

rule Reflective_DLL_Loader_Aug17_1
{
    meta:
        description = "Reflective DLL loader"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "Florian Roth"
        source = "https://github.com/Neo23x0/signature-base"
        original_name = "Reflective_DLL_Loader_Aug17_1"
        license = "GPL-3.0 (https://opensource.org/licenses/GPL-3.0)"

    strings:
        $x1 = "\\Release\\reflective_dll.pdb" ascii
        $x2 = "reflective_dll.x64.dll" fullword ascii
        $s3 = "DLL Injection" fullword ascii
        $s4 = "?ReflectiveLoader@@YA_KPEAX@Z" fullword ascii

    condition:
        (uint16(0) == 0x5a4d and filesize < 300KB and (pe.imphash() == "4bf489ae7d1e6575f5bb81ae4d10862f" or pe.exports("?ReflectiveLoader@@YA_KPEAX@Z") or (1 of ($x*) or 2 of them))) or (2 of them)
}

rule DLL_Injector_Lynx
{
    meta:
        description = "Lynx DLL injector"
        threat_names = "Lynx"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "Florian Roth"
        source = "https://github.com/Neo23x0/signature-base"
        original_name = "DLL_Injector_Lynx"
        license = "GPL-3.0 (https://opensource.org/licenses/GPL-3.0)"

    strings:
        $x1 = " -p <TARGET PROCESS NAME> | -u <DLL PAYLOAD> [--obfuscate]" fullword wide
        $x2 = "You've selected to inject into process: %s" fullword wide
        $x3 = "Lynx DLL Injector" fullword wide
        $x4 = "Reflective DLL Injector" fullword wide
        $x5 = "Failed write payload: %lu" fullword wide
        $x6 = "Failed to start payload: %lu" fullword wide
        $x7 = "Injecting payload..." fullword wide

    condition:
        (uint16(0) == 0x5a4d and filesize < 800KB and 1 of them) or (3 of them)
}

rule Reflective_DLL_Loader_Aug17_2
{
    meta:
        description = "Reflective DLL loader"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "Florian Roth"
        source = "https://github.com/Neo23x0/signature-base"
        original_name = "Reflective_DLL_Loader_Aug17_2"
        license = "GPL-3.0 (https://opensource.org/licenses/GPL-3.0)"

    strings:
        $x1 = "\\ReflectiveDLLInjection-master\\" ascii
        $s2 = "reflective_dll.dll" fullword ascii
        $s3 = "DLL injection" fullword ascii
        $s4 = "_ReflectiveLoader@4" fullword ascii
        $s5 = "Reflective Dll Injection" fullword ascii

    condition:
        (uint16(0) == 0x5a4d and filesize < 200KB and (pe.imphash() == "59867122bcc8c959ad307ac2dd08af79" or pe.exports("_ReflectiveLoader@4") or 2 of them)) or (3 of them)
}

rule Reflective_DLL_Loader_Aug17_3
{
    meta:
        description = "Reflective DLL loader"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "Florian Roth"
        source = "https://github.com/Neo23x0/signature-base"
        original_name = "Reflective_DLL_Loader_Aug17_3"
        license = "GPL-3.0 (https://opensource.org/licenses/GPL-3.0)"

    strings:
        $s1 = "\\Release\\inject.pdb" fullword ascii
        $s2 = "!!! Failed to gather information on system processes! " fullword ascii
        $s3 = "reflective_dll.dll" fullword ascii
        $s4 = "[-] %s. Error=%d" fullword ascii
        $s5 = "\\Start Menu\\Programs\\reflective_dll.dll" ascii

    condition:
        (uint16(0) == 0x5a4d and filesize < 300KB and (pe.imphash() == "26ba48d3e3b964f75ff148b6679b42ec" or 2 of them)) or (3 of them)
}

rule Reflective_DLL_Loader_Aug17_4
{
    meta:
        description = "Reflective DLL loader"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "Florian Roth"
        source = "https://github.com/Neo23x0/signature-base"
        original_name = "Reflective_DLL_Loader_Aug17_4"
        license = "GPL-3.0 (https://opensource.org/licenses/GPL-3.0)"

    strings:
        $x1 = "<H1>&nbsp;>> >> >> Keylogger Installed - %s %s << << <<</H1>" fullword ascii
        $s1 = "<H3> ----- Running Process ----- </H3>" fullword ascii
        $s2 = "<H2>Operating system: %s<H2>" fullword ascii
        $s3 = "<H2>System32 dir:  %s</H2>" fullword ascii

    condition:
        (uint16(0) == 0x5a4d and filesize < 2000KB and 2 of them)
}

rule SneakyToooYou_Black_Loader
{
    meta:
        description = "Sneaky.toooyou loader"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $s1 = "[Sneaky.toooyou]::"
        $s2 = "[Microsoft.VisualBasic.Interaction]::CallByname([AppDomain]::CurrentDomain"
        $s3 = "[Microsoft.VisualBasic.CallType]::Method"
		$s4 = "[System.Text.Encoding]::UTF8.GetString([System.Convert]::ToInt32($_,2))"

    condition:
		vmray_target_class == "file"
		and all of them
}

rule Shellcode_Find_kernel32_PEB
{
    meta:
        description = "x86 code to find kernel32.dll using the PEB; possible shellcode"
        ref = "https://resources.infosecinstitute.com/pattern-based-approach-memory-shellcodes-detection/"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        // using InInitializationOrder list
        $s1 = {
            64 (a1 | 8b ??) 30 00 00 00  // mov <reg>, fs:[0x30]
            8b ?? 0c                     // mov <reg>, [<reg>+0xc]
            8b ?? 1c                     // mov <reg>, [<reg>+0x1c]
            [1-2]                        // mov <reg>, [<reg>] / lods
            8b ?? 08                     // mov <reg>, [<reg>+0x8]
        }
        // using InMemoryOrder list
        $s2 = {
            64 (a1 | 8b ??) 30 00 00 00  // mov <reg>, fs:[0x30]
            8b ?? 0c                     // mov <reg>, [<reg>+0xc]
            8b ?? 14                     // mov <reg>, [<reg>+0x14]
            [1-2]                        // mov <reg>, [<reg>] / lods
            [1-2]                        // mov <reg>, [<reg>] / lods
            8b ?? 10                     // mov <reg>, [<reg>+0x10]
        }

    condition:
        mime_type != "application/x-dosexec" and any of them
}

rule Shellcode_Find_kernel32_SEH
{
    meta:
        description = "x86 code to find kernel32.dll using SEH; possible shellcode"
        ref = "https://resources.infosecinstitute.com/pattern-based-approach-memory-shellcodes-detection/"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $s1 = {
            8B ?? 04        // mov <reg>, [<reg>+0x4]
            4?              // dec <reg>
            66 31 ??        // xor <reg>, <reg>
            66 81 3? 4D 5A  // cmp WORD PTR [<reg>], 0x5a4d
        }

    condition:
        mime_type != "application/x-dosexec" and $s1
}

rule Shellcode_Find_kernel32_TEB
{
    meta:
        description = "x86 code to find kernel32.dll using the TEB; possible shellcode"
        ref = "https://resources.infosecinstitute.com/pattern-based-approach-memory-shellcodes-detection/"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $s1 = {
            8b ?? e4        // mov <reg>, [reg-0x1c]
            4?              // dec <reg>
            66 31 ??        // xor <reg>, <reg>
            66 81 3? 4D 5A  // cmp WORD PTR [<reg>], 0x5a4d
        }

    condition:
        mime_type != "application/x-dosexec" and any of them
}

rule Shellcode_GetPC_fstenv
{
    meta:
        description = "x86 GetPC code using fstenv; possible shellcode"
        ref = "https://resources.infosecinstitute.com/pattern-based-approach-memory-shellcodes-detection/"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $s = {
            d9 74 24 f4                // fnstenv [esp-0xc]
            (58|59|5a|5b|5c|5d|5e|5f)  // pop <reg>
        }

    condition:
        mime_type != "application/x-dosexec" and $s
}

rule Shellcode_API_hashing
{
    meta:
        description = "x86 API hashing code often found in shellcode"
        ref = "https://www.fireeye.com/blog/threat-research/2012/11/precalculated-string-hashes-reverse-engineering-shellcode.html"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "Didier Stevens (https://DidierStevens.com)"
        source = "https://github.com/DidierStevens/DidierStevensSuite"
        original_name = "maldoc_API_hashing"
        license = "public domain"

    strings:
        $s = {
            ac        // lods al, BYTE PTR [esi]
            84 C0     // test al, al
            74 07     // je <end>
            C1 CF ??  // ror edi, <shift>
            01 C7     // add edi, eax
            EB F4     // jmp <loop>
        }

    condition:
        mime_type != "application/x-dosexec" and $s
}

rule Shellcode_NOP_sled_percent_enc {
    meta:
        description = "Percent-encoded NOP sled; possible shellcode"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $s1 = "%90%90%90%90%90%90%90%90"
        $s2 = "%u9090%u9090%u9090%u9090"

    condition:
        any of them
}

rule Shellcode_Loader
{
    meta:
        description = "Loader shellcode used by multiple malware families"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "VMRay Labs"

    strings:
        // E8 00 00 00 00       call    $+5
        // 5B                   pop     ebx
        // 81 EB 94 0E 78 00    sub     ebx, 780E94h
        // 81 EB 7D 4D EC 00    sub     ebx, 0EC4D7Dh
        $code01 = {E8 00 00 00 00 5B 81 EB ?? ?? ?? 00}

        // 56                   push    esi
        // 6A 06                push    6
        // 68 88 4E 0D 00       push    0D4E88h
        // 8D BB A5 09 78 00    lea     edi, [ebx+7809A5h]
        // FF D7                call    edi
        $code02 = {56 6A 06 68 88 4E 0D 00 8D BB ?? ?? ?? 00 FF D7}

        // 8A 10                mov     dl, [eax]
        // 80 CA 60             or      dl, 60h
        // 01 D3                add     ebx, edx
        // D1 E3                shl     ebx, 1
        // 03 45 10             add     eax, [ebp+arg_8]
        // 8A 08                mov     cl, [eax]
        // 84 C9                test    cl, cl
        // E0 EE                loopne  loc_1F018A
        // 31 C0                xor     eax, eax
        // 8B 4D 0C             mov     ecx, [ebp+arg_4]
        // 39 CB                cmp     ebx, ecx
        // 74 01                jz      short loc_1F01A6
        // 40                   inc     eax
        $code03 = {8A 10 80 CA 60 01 D3 D1 E3 03 45 10 8A 08 84 C9 E0 EE 31 C0 8B 4D 0C 39 CB 74 01 40}

    condition:
        vmray_target_class == "memory_dump"
        and filesize < 6KB
        and all of them
}

rule BenignYaraWhitelistSample
{
    meta:
        description = "Whitelisted, benign sample"
        vti_default_score = -1
        vti_documents_score = -1
        vti_scripts_score = -1
        vti_browser_score = -1
        vti_msi_score = -1
        vti_static_score = -1
        author = "VMRay Labs"

    strings:
        $s1 = "This is an internal test file:" fullword
        $s2 = "b41a526b8ea36d2b6a7ee1fcd988e7624b7c20bf385bbcd64d60fe5fa65bd76548cf96d60" fullword

    condition:
        mime_type == "text/plain"
        and filesize == 253
        and $s1 at 0
        and #s2 == 3
}

rule JS_Unicode_escaped_bytes
{
    meta:
        description = "JavaScript contains many unicode-escaped bytes; possible obfuscation"
        vti_default_score = 1
        vti_documents_score = 1
        vti_scripts_score = 1
        vti_browser_score = 1
        vti_msi_score = 1
        vti_static_score = 1
        author = "VMRay Labs"

    strings:
        $s1 = /(\\u[0-9a-fA-F]{4}){10}/
        $s2 = /(\\u[0-9a-fA-F]{4}){3}/

    condition:
        mime_type == "text/javascript"
        and ($s1 or #s2 > 5)
}

rule JS_Alphanum_text_blob
{
    meta:
        description = "JavaScript contains large alpha-numeric text blob; possible obfuscation"
        vti_default_score = 2
        vti_documents_score = 2
        vti_scripts_score = 2
        vti_browser_score = 1
        vti_msi_score = 2
        vti_static_score = 2
        author = "VMRay Labs"

    strings:
        $s1 = /='[a-z0-9]{200,}'/ nocase
        $s2 = /="[a-z0-9]{200,}"/ nocase

    condition:
        mime_type == "text/javascript" and any of them
}

rule Inter_Kit
{
    meta:
        description = "Inter Skimmer Kit"
        threat_name = "Inter Skimmer"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        author = "VMRay Labs"

    strings:
        $s_reg_1 = "/^(?:4[0-9]{12}(?:[0-9]{3})?)$/"
        $s_reg_2 = "/^(?:5[1-5][0-9]{14})$/"
        $s_reg_3 = "/^(?:3[47][0-9]{13})$/"
        $s_reg_4 = "/^(?:6(?:011|5[0-9][0-9])[0-9]{12})$/"
        $s_reg_5 = "/[^0-9-\\s]+/"
        $s_reg_6 = "/\\D/g"
        $s_flag = "\\x53\\x58\\x4e\\x57\\x59\\x57\\x78\\x70\\x5a\\x41\\x3d\\x3d" // isValid

    condition:
        vmray_target_class == "web_request"
        and all of them
}


rule CredentialStealer_Generic_Backdoor
{
    meta:
        description = "Strings that indicate password store access; possible credential stealer"
        classifications = "Spyware"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "Florian Roth"
        source = "https://github.com/Neo23x0/signature-base"
        original_name = "CredentialStealer_Generic_Backdoor"
        license = "GPL-3.0 (https://opensource.org/licenses/GPL-3.0)"

    strings:
        $s1 = "GetOperaLoginData" fullword ascii
        $s2 = "GetInternetExplorerCredentialsPasswords" fullword ascii
        $s3 = "%s\\Opera Software\\Opera Stable\\Login Data" fullword ascii
        $s4 = "select *  from moz_logins" fullword ascii
        $s5 = "%s\\Google\\Chrome\\User Data\\Default\\Login Data" fullword ascii
        $s6 = "Host.dll.Windows" fullword ascii
        $s7 = "GetInternetExplorerVaultPasswords" fullword ascii
        $s8 = "GetWindowsLiveMessengerPasswords" fullword ascii
        $s9 = "%s\\Chromium\\User Data\\Default\\Login Data" fullword ascii
        $s10 = "%s\\Opera\\Opera\\profile\\wand.dat" fullword ascii

    condition:
        (uint16(0) == 0x5a4d and 4 of them)
}

rule APLib_Compressed_PE {
    meta:
        description = "PE file compressed by APLib"
        vti_default_score = 2
        vti_documents_score = 4
        vti_scripts_score = 2
        vti_browser_score = 4
        vti_msi_score = 2
        vti_static_score = 2
        author = "VMRay Labs"

    strings:
       
        $ = {
            4D 38 5A 90 38 03 66 02 04 09 71 FF 81 B8 C2 91
            01 40 C2 15 C6 F8 09 1C 0E 1F BA F8 00 B4 09 CD
            21 B8 01 4C C0 0A 54 68 69 73 20 0E 70 72 6F 67
            67 61 6D 87 63 47 6E 1F 4F 74 E7 62 65 AF CF 75
            5F 98 69 06 44 4F 7E 53 03 6D 6F 64 65
            }
    condition:
        any of them
}

rule CryptOne_Packer
{
    meta:
        description = "Shellcode used by the CryptOne packer"
        threat_names = "CryptOne"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        // push  rbp
        // mov   ebp, esp
        // push  rcx
        // mov   dword [var_4h], 0
        // jmp   0x16
        // mov   eax, dword [var_4h]
        // add   eax, 4
        // mov   dword [var_4h], eax
        // mov   ecx, dword [var_4h]
        // cmp   ecx, dword [arg_ch]
        // jae   0x4c
        // mov   edx, dword [arg_8h]
        // add   edx, dword [var_4h]
        // mov   eax, dword [rdx]
        // add   eax, dword [var_4h]
        // mov   ecx, dword [arg_8h]
        // add   ecx, dword [var_4h]
        // mov   dword [rcx], eax
        // mov   edx, dword [var_4h]
        // add   edx, 0x3e9 ; 1001
        // mov   eax, dword [arg_8h]
        // add   eax, dword [var_4h]
        // xor   edx, dword [rax]
        // mov   ecx, dword [arg_8h]
        // add   ecx, dword [var_4h]
        // mov   dword [rcx], edx
        // jmp   0xd
        // mov   esp, ebp
        // pop   rbp
        // ret
        $decrypt_payload = { 55 8b ec 51 c7 45 fc 00 00 00 00 eb 09 8b 45 fc 83 c0 04 89 45 fc 8b 4d fc 3b 4d 0c 73 2e 8b 55 08 03 55 fc 8b 02 03 45 fc 8b 4d 08 03 4d fc 89 01 8b 55 fc 81 c2 ?? ?? 00 00 8b 45 08 03 45 fc 33 10 8b 4d 08 03 4d fc 89 11 eb c1 8b e5 5d c3 }

    condition:
        (
            vmray_target_class == "memory_dump"
        )
        and $decrypt_payload
}

rule Dotnet_ConnPacker
{
    meta:
        description = ".NET packer"
        threat_names = "Goobin"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $c1 = {18 8D ?? ?? ?? ?? 25 16 72 ?? ?? ?? ?? A2 25 17 72 ?? ?? ?? ?? A2 0? 16 0? 2B ?? 0? 0D 16 (13 ?? | ??) 2B ?? 09 (11 ?? | ??) 9A 13 ?? 11 ?? 28 ?? ?? ?? ?? 16 FE ??}
        $c2 = "https://www.google.com/" wide
        $c3 = "https://www.bing.com/" wide

    condition:
        (vmray_target_class == "memory_dump" and uint16(0) == 0x5A4D)
        and all of them
}

rule Packer_RedNet
{
    meta:
        description = "Packer used to distribute malware"
        threat_names = "RedNet"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $c01 = {
            19 19 19 19 19 19 19 19 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A
            1A 1A 1A 1A 1A 1A 1A 1A 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B
            1B 1B 1B 1B 1B 1B 1B 1C 00 00 00 00 01 00 00 00
        }
        $c02 = {
            23 00           // and     eax, [eax]
            2B 00           // sub     eax, [eax]
            33 00           // xor     eax, [eax]
            3B 00           // cmp     eax, [eax]
            43              // inc     ebx
        }
        $c03 = {
            C6 44 24 34 78  // mov     [esp+48h+var_14], 78h ; 'x'
            C6 44 24 35 61  // mov     [esp+48h+var_13], 61h ; 'a'
            88 54 24 3A     // mov     [esp+48h+var_E], dl
            C6 44 24 3E 66  // mov     [esp+48h+var_A], 66h ; 'f'
            C6 44 24 41 33  // mov     [esp+48h+var_7], 33h ; '3'
            C6 44 24 43 ??  // mov     [esp+48h+var_5], 53h ; 'S'
            C6 44 24 44 74  // mov     [esp+48h+var_4], 74h ; 't'
            88 54 24 46     // mov     [esp+48h+var_2], dl
            C6 44 24 40 ??  // mov     [esp+48h+var_8], 51h ; 'Q'
            C6 44 24 39 62  // mov     [esp+48h+var_F], 62h ; 'b'
            C7 44 24 10 01  // mov     [esp+48h+var_38], 1
            00 00 00
        }

        $s01 = "mscoree.dll" wide
        $s02 = "tBpBlBhBdB`B\\BXBTBPBLBHBDB@B<B8B4B0B,B(B$B B" wide ascii
        $s03 = "NoRemove"
        $s04 = "ForceRemove"

    condition:
        // Memory dump or file with PE header
        (
            vmray_target_class == "memory_dump"
            or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
        )
        and all of them
}

rule XBinder
{
    meta:
        description = "Packer used to distribute malware"
        threat_names = "XBinder"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s00 = "META-INF/MANIFEST.MF"
        $s01 = "AES.class"
        $classes = ".classPK"
        $res = /resources\/\w+PK/

    condition:
        vmray_target_class == "file"
        and uint32(0) == 0x04034B50
        and all of ($s*)
        and #classes == 2
        and #res == 3
}

private rule _Powershell
{
    meta:
        description = "Rule used to restrict evaluation of powershell analysis rules"
        author = "VMRay Labs"

    condition:
        vmray_target_class == "file"
        and (
            mime_type == "text/x-powershell"
            or mime_type == "application/x-vba-macros"
            or mime_type == "text/javascript"
            or mime_type == "text/plain"
        )
        and filesize < 10MB
}

rule PowerShell_Download_Commands
{
    meta:
        description = "PowerShell may attempt to download external content; possible dropper"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "VMRay Labs"

    strings:
        $cmdlet1 = "Invoke-WebRequest" fullword nocase
        $cmdlet2 = "Start-BitsTransfer" fullword nocase

        $arg1 = "-Uri" fullword nocase
        $arg2 = "-OutFile" fullword nocase
        $arg3 = "-Source" fullword nocase
        $arg4 = "-Destination" fullword nocase

        $webclient_cmd1 = "Net.WebClient" fullword nocase
        $webclient_cmd2 = "New-Object" fullword nocase
        $webclient_method1 = "DownloadFile" fullword nocase
        $webclient_method2 = "DownloadString" fullword nocase

    condition:
        (analysis_id == "pdf"
        or analysis_id == "office97"
        or analysis_id == "olecf"
        or analysis_id == "ooxml"
        or analysis_id == "rtf")
        and _Powershell
        and ((any of ($cmdlet*) and any of ($arg*)) or (all of ($webclient_cmd*) and any of ($webclient_method*)))
}

rule PowerShell_Execution_Commands
{
    meta:
        description = "PowerShell command execution detected"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "VMRay Labs"

    strings:
        $ps1 = "PowerShell" fullword nocase
        $ps2 = "powershell.exe" fullword nocase

        $ep1 = "-ep bypass" fullword nocase
        $ep2 = "-exec bypass" fullword nocase
        $ep3 = "-executionpolicy bypass" fullword nocase
        $ep4 = "-noprofile" fullword nocase
        $ep5 = "-nop" fullword nocase

        $win1 = "-win hidden" fullword nocase
        $win2 = "-windowsstyle hidden" fullword nocase
        $win3 = "-w hidden" fullword nocase

        $command = "-Command" fullword nocase
        $command_enc1 = "-enc" fullword nocase
        $command_enc2 = "-encodedcommand" fullword nocase
        $command_file1 = "-File" fullword nocase
        $command_file2 = "-PSConsoleFile" fullword nocase
        $command_inv1 = "Invoke-Command" fullword nocase
        $command_inv2 = "-scriptblock" fullword nocase
        $command_exp1 = "Invoke-Expression -command" fullword nocase
        $command_exp2 = "Invoke-Expression $" nocase
        $command_sh1 = "Shell.Application" fullword nocase
        $command_sh2 = "Start-Process" fullword nocase

    condition:
        _Powershell
        and (
            1 of ($ps*) and any of ($ep*) and any of ($win*) and any of ($command*)
        )
}

rule PowerShell_Registry_Commands
{
    meta:
        description = "PowerShell may attempt to read/write system registry"
        vti_default_score = 2
        vti_documents_score = 2
        vti_scripts_score = 2
        vti_browser_score = 2
        vti_msi_score = 2
        vti_static_score = 2
        author = "VMRay Labs"

    strings:
        $cmdlet1 = "Get-Item" fullword nocase
        $cmdlet2 = "Get-ItemProperty" fullword nocase
        $cmdlet3 = "New-Item" fullword nocase
        $cmdlet4 = "New-ItemProperty" fullword nocase
        $cmdlet5 = "Rename-Item" fullword nocase
        $cmdlet6 = "Rename-ItemProperty" fullword nocase
        $cmdlet7 = "Remove-Item" fullword nocase
        $cmdlet8 = "Remove-ItemProperty" fullword nocase
        $cmdlet9 = "Set-Item" fullword nocase
        $cmdlet10 = "Set-ItemProperty" fullword nocase

        $com1 = "WScript.Shell" fullword nocase
        $com2 = ".RegDelete" fullword nocase
        $com3 = ".RegRead" fullword nocase
        $com4 = ".RegWrite" fullword nocase

        $path1 = /(\"|')HKLM/ fullword nocase
        $path2 = /(\"|')HKCU/ fullword nocase
        $path3 = "Registry::HKEY_CURRENT_USER" fullword nocase
        $path4 = "Registry::HKEY_LOCAL_MACHINE" fullword nocase

    condition:
        _Powershell
        and (mime_type == "text/x-powershell" or mime_type == "application/x-vba-macros")
        and (
            (any of ($cmdlet*) and any of ($path*))
            or (2 of ($com*) and not mime_type == "application/x-vba-macros")
        )
}

rule PowerShell_Case_Anomaly
{
    meta:
        description = "Obfuscated PowerShell hacktools"
        ref = "https://twitter.com/danielhbohannon/status/905096106924761088"
        vti_default_score = 2
        vti_documents_score = 2
        vti_scripts_score = 2
        vti_browser_score = 2
        vti_msi_score = 2
        vti_static_score = 2
        author = "Florian Roth"
        source = "https://github.com/Neo23x0/signature-base"
        original_name = "PowerShell_Case_Anomaly"
        license = "GPL-3.0 (https://opensource.org/licenses/GPL-3.0)"

    strings:
        $s1 = "powershell" fullword nocase ascii wide
        $sr1 = /(powershell|Powershell|PowerShell|POWERSHELL|powerShell)/ fullword ascii wide
        $sn1 = "powershell" fullword ascii wide
        $sn2 = "Powershell" fullword ascii wide
        $sn3 = "PowerShell" fullword ascii wide
        $sn4 = "POWERSHELL" fullword ascii wide
        $sn5 = "powerShell" fullword ascii wide
        $a1 = "wershell -e " nocase wide ascii
        $an1 = "wershell -e " wide ascii
        $an2 = "werShell -e " wide ascii
        $k1 = "-noprofile" fullword nocase ascii wide
        $kn1 = "-noprofile" ascii wide
        $kn2 = "-NoProfile" ascii wide
        $kn3 = "-noProfile" ascii wide
        $kn4 = "-NOPROFILE" ascii wide
        $kn5 = "-Noprofile" ascii wide

    condition:
        _Powershell and ((#s1 < 3 and #sr1 > 0 and #s1 > #sr1) or ($s1 and not 1 of ($sn*)) or ($a1 and not 1 of ($an*)) or ($k1 and not 1 of ($kn*)))
}

rule PowerShell_Invoke_PSImage
{
    meta:
        description = "Command to execute PowerShell from string"
        ref = "https://github.com/peewpw/Invoke-PSImage"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "Florian Roth"
        source = "https://github.com/Neo23x0/signature-base"
        original_name = "Invoke_PSImage"
        license = "GPL-3.0 (https://opensource.org/licenses/GPL-3.0)"

    strings:
        $ = "IEX([System.Text.Encoding]::ASCII.GetString(" ascii wide
        $ = "System.Drawing.Bitmap((a Net.WebClient).OpenRead(" ascii wide
        $ = { 89 50 4E 47 0D 0A 1A 0A 00 00 00 0D 49 48 44 52
            00 00 04 E4 00 00 03 A0 08 06 00 00 00 9D AF A9
            E8 00 00 00 09 70 48 59 73 00 00 19 D6 00 00 19
            D6 01 18 D1 CA ED 00 00 00 07 74 49 4D 45 07 E1
            0C 0F 13 1E 36 89 C4 28 BF 00 00 00 07 74 45 58
            74 41 75 74 68 6F 72 00 A9 AE CC 48 00 00 00 0C
            74 45 58 74 44 65 73 63 72 69 70 74 69 6F 6E 00
            13 09 21 23 00 00 00 0A 74 45 58 74 43 6F 70 79
            72 69 67 68 74 00 AC 0F CC 3A 00 00 00 0E 74 45
            58 74 43 72 65 61 74 69 6F 6E 20 74 69 6D 65 00
            35 F7 0F }

    condition:
        _Powershell and 1 of them
}

rule RyanBorlandProtectorAttributes
{
    meta:
        description = "Ryan Borland Protector Attributes"
        vti_default_score = 1
        vti_documents_score = 1
        vti_scripts_score = 1
        vti_browser_score = 1
        vti_msi_score = 1
        vti_static_score = 1
        author = "VMRay Labs"

    strings:
        $s1 = "%Ryan-_-Borland_Protector Cracked v1.0" fullword

    condition:
        (
            vmray_target_class == "memory_dump"
            or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
        )
        and all of them
}

rule BabelObfuscatorAttributes
{
    meta:
        description = "Babel Obfuscator Attributes"
        vti_default_score = 1
        vti_documents_score = 1
        vti_scripts_score = 1
        vti_browser_score = 1
        vti_msi_score = 1
        vti_static_score = 1
        author = "VMRay Labs"

    strings:
        $s1 = "BabelObfuscatorAttribute" fullword

    condition:
        (
            vmray_target_class == "memory_dump"
            or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
        )
        and all of them
}

rule YanoObfuscatorAttributes
{
    meta:
        description = "Yano Obfuscator Attributes"
        vti_default_score = 1
        vti_documents_score = 1
        vti_scripts_score = 1
        vti_browser_score = 1
        vti_msi_score = 1
        vti_static_score = 1
        author = "VMRay Labs"

    strings:
        $s1 = "YanoAttribute" fullword

    condition:
        (
            vmray_target_class == "memory_dump"
            or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
        )
        and all of them
}

rule DNGuardObfuscatorAttributes
{
    meta:
        description = "DNGuard HVM Attributes"
        vti_default_score = 1
        vti_documents_score = 1
        vti_scripts_score = 1
        vti_browser_score = 1
        vti_msi_score = 1
        vti_static_score = 1
        author = "VMRay Labs"

    strings:
        $s1 = "ZYXDNGuarder" fullword

    condition:
        (
            vmray_target_class == "memory_dump"
            or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
        )
        and all of them
}

rule MaxtoCodeObfuscatorAttributes
{
    meta:
        description = "MaxtoCode Obfuscator Attributes"
        vti_default_score = 1
        vti_documents_score = 1
        vti_scripts_score = 1
        vti_browser_score = 1
        vti_msi_score = 1
        vti_static_score = 1
        author = "VMRay Labs"

    strings:
        $s1 = "MaxtoCodeAttribute" fullword

    condition:
        (
            vmray_target_class == "memory_dump"
            or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
        )
        and all of them
}

rule NETReactorObfuscatorAttributes
{
    meta:
        description = ".NET Reactor Obfuscator Attributes"
        vti_default_score = 1
        vti_documents_score = 1
        vti_scripts_score = 1
        vti_browser_score = 1
        vti_msi_score = 1
        vti_static_score = 1
        author = "VMRay Labs"

    strings:
        $s1 = ".NETReactorAttribute" fullword

    condition:
        (
            vmray_target_class == "memory_dump"
            or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
        )
        and all of them
}

rule MultipleNetObfuscatorAttributes
{
    meta:
        description = ".NET file contains multiple obfuscator attributes"
        vti_default_score = 2
        vti_documents_score = 2
        vti_scripts_score = 2
        vti_browser_score = 2
        vti_msi_score = 2
        vti_static_score = 2
        author = "VMRay Labs"

    strings:
        $s1 = "%Ryan-_-Borland_Protector Cracked v1.0" fullword
        $s2 = "BabelObfuscatorAttribute" fullword
        $s3 = "YanoAttribute" fullword
        $s4 = "ZYXDNGuarder" fullword //DNGuard HVM
        $s5 = ".NETReactorAttribute" fullword
        $s6 = "MaxtoCodeAttribute" fullword

    condition:
    (
        vmray_target_class == "memory_dump"
        or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
    )
    and 2 of them
}import "math"
import "pe"

rule rc4_init
{
    meta:
        description = "RC4 algorithm's key scheduling and PRGA"
        vti_default_score = 1
        vti_documents_score = 1
        vti_scripts_score = 1
        vti_browser_score = 1
        vti_msi_score = 1
        vti_static_score = 1
        author = "VMRay Labs"

    strings:
        $rc4_init = { 48 89 5C 24 08 48 89 6C 24 10 48 89 74 24 18 57 48 81 EC 00 01 00 00 45 33 C9 48 8D 04 24 48 8B F1 48 8D 1C 24 45 8B D9 48 2B F0 48 8B EA 4C 8B D1 BF 00 01 00 00 41 8B C3 44 88 1C 1E 99 41 FF C3 41 F7 F8 48 63 C2 8A 0C 28 88 0B 48 FF C3 44 3B DF 7C E2 4C 8D 04 24 49 8B D2 4D 2B C2 41 0F B6 04 10 44 0F B6 1A 44 03 C8 45 03 CB 41 81 E1 FF 00 00 80 7D 0D 41 FF C9 41 81 C9 00 FF FF FF 41 FF C1 49 63 C9 42 8A 04 11 88 02 48 FF C2 46 88 1C 11 48 83 EF 01 75 C5 4C 8D 9C 24 00 01 00 00 49 8B 5B 10 49 8B 6B 18 49 8B 73 20 49 8B E3 5F C3 }

    condition:
        (
            vmray_target_class == "memory_dump"
            or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
        )
        and all of them
}

rule rc4_decrypt
{
    meta:
        description = "RC4 algorithm's decryption routine"
        vti_default_score = 1
        vti_documents_score = 1
        vti_scripts_score = 1
        vti_browser_score = 1
        vti_msi_score = 1
        vti_static_score = 1
        author = "VMRay Labs"

    strings:
        $rc4_decrypt = { 48 89 5C 24 08 48 89 7C 24 10 45 33 D2 4D 63 C0 48 8B FA 4C 8B D9 45 8B CA 4D 85 C0 7E 5E 41 8D 42 01 25 FF 00 00 80 7D 09 FF C8 0D 00 FF FF FF FF C0 4C 63 D0 43 0F B6 1C 1A 44 03 CB 41 81 E1 FF 00 00 80 7D 0D 41 FF C9 41 81 C9 00 FF FF FF 41 FF C1 49 63 C9 42 8A 04 19 43 88 04 1A 42 88 1C 19 43 0F B6 0C 1A 48 03 CB 0F B6 C1 42 8A 0C 18 30 0F 48 FF C7 49 83 E8 01 75 A2 48 8B 5C 24 08 48 8B 7C 24 10 C3 }

    condition:
        (
            vmray_target_class == "memory_dump"
            or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
        )
        and all of them
}

rule SandboxProductID
{
    meta:
        description = "Sandbox detection via leaked Windows product IDs"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "VMRay Labs"

    strings:
        $ = "76487-640-1457236-23837" wide ascii
        $ = "76487-337-8429955-22614" wide ascii
        $ = "76487-644-3177037-23510" wide ascii
        $ = "76497-640-6308873-23835" wide ascii
        $ = "55274-640-2673064-23950" wide ascii
        $ = "76487-640-8834005-23195" wide ascii
        $ = "76487-640-0716662-23535" wide ascii
        $ = "76487-644-8648466-23106" wide ascii
        $ = "00426-293-8170032-85146" wide ascii
        $ = "76487-341-5883812-22420" wide ascii
        $ = "76487-OEM-0027453-63796" wide ascii

    condition:
        (
            vmray_target_class == "memory_dump"
            or vmray_target_class == "function_strings"
            or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
        )
        and any of them
}

rule VMDeviceStrings
{
    meta:
        description = "VM detection via known device names"
        vti_default_score = 3
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $s1 = "qemu"
        $s2 = "virtio"
        $s3 = "vmware"
        $s4 = "vbox"
        $s5 = "xen"
        $s6 = "vid_80ee"
        $s7 = "ven_1b36"

    condition:
        vmray_target_class == "function_strings"
        and 5 of them
}

rule VMProcessNames
{
    meta:
        description = "VM detection via known process names"
        vti_default_score = 3
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        // Qemu
        $s1  = "qemu-ga.exe"
        $s2  = "qga.exe"
        // Qemu SPICE
        $s3  = "vdagent.exe"
        $s4  = "vdservice.exe"
        // Any.Run
        $s5  = "windanr.exe"
        // VirtualBox
        $s6  = "vboxservice.exe"
        $s7  = "vboxtray.exe"
        $s8  = "vboxdisp.dll"
        $s9  = "vboxhook.dll"
        $s10 = "vboxmrxnp.dll"
        $s11 = "vboxogl.dll"
        $s12 = "vboxoglarrayspu.dll"
        $s13 = "vboxoglcrutil.dll"
        $s14 = "vboxoglerrorspu.dll"
        $s15 = "vboxoglfeedbackspu.dll"
        $s16 = "vboxoglpackspu.dll"
        $s17 = "vboxoglpassthroughspu.dll"
        $s18 = "vboxservice.exe"
        // VMWare
        $s19 = "vmtoolsd.exe"
        $s20 = "vmwaretray.exe"
        $s21 = "vmwareuser.exe"
        $s22 = "VGAuthService.exe"
        $s23 = "vmacthlp.exe"
        // Parallels
        $s24 = "prl_tools.exe"
        $s25 = "prl_cc.exe"
        // VirtualPC
        $s26 = "vmsrvc.exe"
        $s27 = "vmusrvc.exe"

    condition:
        vmray_target_class == "function_strings"
        and 6 of them
}

rule VMModuleNames
{
    meta:
        description = "VM detection via known module names"
        vti_default_score = 3
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $s1  = "vmci.s"
        $s2  = "vmusbm"
        $s3  = "vmmous"
        $s4  = "vm3dmp"
        $s5  = "vmrawd"
        $s6  = "vmmemc"
        $s7  = "vboxgu"
        $s8  = "vboxsf"
        $s9  = "vboxmo"
        $s10 = "vboxvi"
        $s11 = "vboxdi"
        $s12 = "vioser"

        // KVM
        $s13 = "balloon"
        $s14 = "netkvm"
        $s15 = "pvpanic"
        $s16 = "viofs"
        $s17 = "viogpudo"
        $s18 = "vioinput"
        $s19 = "viorng"
        $s20 = "vioscsi"
        $s21 = "viostor"
        // HyperV
        $s22 = "vmbushid"
        $s23 = "vmbus"
        $s24 = "vmgid"
        $s25 = "indirectkmd"
        $s26 = "hypervideo"
        $s27 = "hyperkbd"
        // VMWare
        $s28 = "vmnet"
        $s29 = "vmmouse"
        $s30 = "vmusb"
        $s31 = "vmhgfs"
        $s32 = "vmmemctl"
        $s33 = "vmx86"
        $s34 = "vmrawdsk"
        $s35 = "vmusbmouse"
        $s36 = "vmkdb"
        $s37 = "vmnetuserif"
        $s38 = "vmnetadapter"
        // VBox
        $s39 = "vboxmouse"
        $s40 = "vboxguest"
        $s41 = "vboxvideo"

    condition:
        vmray_target_class == "function_strings"
        and 8 of them
}

rule Killbot_Protection
{
    meta:
        description = "Killbot bot detection service"
        vti_default_score = 1
        vti_documents_score = 1
        vti_scripts_score = 1
        vti_browser_score = 1
        vti_msi_score = 1
        vti_static_score = 1
        author = "VMRay Labs"

    strings:
        $s1 = "const killbot"
        $s2 = "apiKey"
        $s3 = "botRedirection"
        $s4 = "https://files.killbot.org"

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule Killbot_ApiKeys
{
    meta:
        description = "Known API keys for Killbot bot detection service associated with phishing"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "VMRay Labs"

    strings:
        $apikey1 = "Dg7AqDjKVT4jK6Zb0gz4UKLrUdvUtJRyfAviuotJ87unr"
        $apikey2 = "L7705gv6P6_VCxO2jmpfeS3nYOUy7NpueU_FGta1KOYdI"
        $apikey3 = "R6-jhR55NbbqWE3wQZEt7UVfLD7PQDmuVsQ8CHD5KbKD4"
        $apikey4 = "bMIU64-sFcycv4MRtmkaJVwXzSpoGeDnSGOU_4LpXC91t"
        $apikey5 = "eFVAipb_2tkWqxhJ_yRxhOUQi6DkZ1BBCZv7haCrVwQn5"
        $apikey6 = "etewm7WxokrpqKZ9R9P2e_sl-tTLNsQmhO8PG0c2WYURM"
        $apikey7 = "sxwzHH7cyftPyEL2hUIA_Df68AKGd-1TlHtE0avBjSUox"
        $apikey8 = "hWPE33H2kolW8LZeQHVhkpAu2rbM1BdDVGutZE0AHXPRM"

    condition:
        Killbot_Protection
        and any of them
}


rule PosRegex
{   
    meta:
        description = "Usage of regex used by POS malware"
        vti_default_score = 2
        vti_documents_score = 2
        vti_scripts_score = 2
        vti_browser_score = 2
        vti_msi_score = 2
        author = "VMRay Labs"

    strings:
        $s_alina1 = "1[0-2])[0-9]"
        $s_alina2 = "([0-9]{13,19}=(1[2-9])(0[1-9]|1[0-2])[0-9]{3,50}\\?)"
        $s_alina3 = "((%?[Bb]?)[0-9]{13,19}\\^[A-Za-z\\s]{0,26}/[A-Za-z\\s]{0,26}\\^(1[2-9])(0[1-9]|1[0-2])[0-9\\s]{3,50}\\?)"
        $s_alina4 = "((%?[BbÂ´`]?)[0-9]{13,19}\\^[A-Za-z\\s]{0,26}/[A-Za-z\\s]{0,26}\\^(1[2-9])(0[1-9]|1[0-2])[0-9\\s]{3,50}\\?)"
        $s_decebal1 = "\\d{13,19}-\\d{7}\\w*\\?" wide ascii
        $s_decebal2 = "\\d{13,19}=\\d{7}\\w*\\?" wide ascii
        $s_rdasrv1 = "((b|B)[0-9]{13,19}\\^[A-Za-z\\s]{0,30}\\/[A-Za-z\\s]{0,30}\\^(0[7-9]|1[0-5])((0[1-9])|(1[0-2]))[0-9\\s]{3,50}[0-9]{1})"
        $s_rdasrv2 = "([0-9]{15,16}[D=](0[7-9]|1[0-5])((0[1-9])|(1[0-2]))[0-9]{8,30})"
        $s_vskimmer1 = "[3-9]{1}[0-9]{12,19}[D=\\u0061][0-9]{10,30}"
        $s_glitch1 = ";\\d{13,19}=\\d{7}\\w*\\?" wide ascii
        $s_glitch2 = "(%B)\\d{0,19}\\^[\\w\\s\\/]{2,26}\\^\\d{7}\\w*\\?;\\d{13,19}=\\d{7}\\w*\\?" wide ascii
        $s_generic1 = "(([0-9]{13,19}=)|([a-zA-Z\\s]{3}\\^))(0[7-9]|1[0-5])((0[1-9])|(1[0-2]))"
        $s_generic3 = "((b|B)(([0-9]{13,16})|([0-9]|\\s){13,25})\\^[A-Za-z\\s0-9]{0,30}\\/[A-Za-z\\s0-9]{0,30}\\^(0[7-9]|1[0-5])((0[1-9])|(1[0-2]))([0-9]|\\s){3,50})"
        $s_generic4 = "([0-9]{15,16}(D|=)(0[7-9]|1[0-5])((0[1-9])|(1[0-2]))[0-9]{8,30})"

    condition:
        (
            vmray_target_class == "memory_dump"
            or vmray_target_class == "function_strings"
            or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
        )
        and any of ($s*)
}

rule Phishkit_Anz_uzer
{
    meta:
        description = "Phishing page from Phishkit.Anz_uzer"
        classifications = "Phishing"
        threat_names = "Phishkit.Anz_uzer"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "console.log('uzer empty');"
        $s2 = "console.log('uzer correct');"
        $s3 = "var Username1 = $('#Username1').val();"
        $s4 = "console.log('uzer wrong');"
        $ajax1 = "$.ajax({"
        $ajax2 = "action.php?type=login',"
        $ajax3 = "data : $('#ibLogonForm').serialize(),"
        $ajax4 = "if(parsed_data.status == 'ok'){"
        $ajax5 = "location.href = \"Loading.php\""

    condition:
        vmray_target_class == "web_request"
        and 6 of them
}

rule Phishkit_Baby_Two
{
    meta:
        description = "Phishing page from Phishkit.Baby_Two"
        classifications = "Phishing"
        threat_names = "Phishkit.Baby_Two"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s01 = /<title>(&(#\d{2,3}|period);\.?)+<\/title>/
        $s02 = "<script src=\"./js/MyBabyTwo.js\"></script>"
        $s03 = /<input class=\"\w{2,20}\s\w{2,20} input logon-xs-toggle \" maxlength=\"16\" minlength=\"16\" id=\"cardnutwo\" placeholder=\"\" autocomplete=\"off\" type=\"text\" name=\"cardnutwo\" inputmode=\"numeric\"/
        $s04 = "<form id=\"cardtwo-form\" name=\"cardtwo-form\" method=\"POST\" autocomplete=\"off\" action=\"\">"
        $s05 ="div id=\"fuckyeah\" style=\"display:none;\"" wide ascii
        $s06 = "<input type=\"hidden\" value=\"\" name=\"cardtype\" id=\"cardtype\">"
        $s07 = /<div class=\"\w{2,20}\s\w{2,20} raised segment\" id=\"cardo\" style=\"max-width: \d{2,4}px!important; display:none;\">/
        $s08 = /<input class=\"\w{2,20}\s\w{2,20} input logon-xs-toggle \" id=\"password1\" placeholder=\"\" autocomplete=\"off\" type=\"password\" name=\"password1\" required=\"\" value=\"\"/
        $s09 = /<div class=\"\w{2,20} align-label-input floating-label__container pswd1\">/
        $s10 = "document.write(new Date().getFullYear())"

    condition:
        vmray_target_class == "web_request"
        and 8 of them
}

rule SocialFish_Instagram
{
    meta:
        description = "Instagram phishing page from Phishkit.SocialFish"
        classifications = "Phishing"
        threat_names = "Phishkit.SocialFish"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "this is the file to which the IP address will be written; name it your way."
        $s2 = "check ip from share internet"
        $s3 = "to check if ip is pass from proxy"
        $s4 = "$victim = \"Victim Public IP: \";"
        $s5 = "fwrite($fp, $victim);"
        $s6 = "fwrite($fp, $ipaddress);"
        $s7 = "<!-- saved from url=(0026)https://www.instagram.com/ -->"

    condition:
        vmray_target_class == "web_request"
        and 5 of them
}

rule SocialFish_Cryptocoinsniper
{
    meta:
        description = "Cryptocoinsniper phishing page from Phishkit.SocialFish"
        classifications = "Phishing"
        threat_names = "Phishkit.SocialFish"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "<!-- Mirrored from www.cryptocoinsniper.co/members/members/login by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 25 Jun 2018 15:28:35 GMT -->"
        $s2 = "<!-- Added by HTTrack --><meta http-equiv=\"content-type\" content=\"text/html;charset=UTF-8\" /><!-- /Added by HTTrack -->"
        $s3 = "name=\"site_login\" action=\"login.php\""

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule SocialFish_Gmail
{
    meta:
        description = "Gmail phishing page from Phishkit.SocialFish"
        classifications = "Phishing"
        threat_names = "Phishkit.SocialFish"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "<!-- I AM A FAKE PAGE | DO NOT TRUST ME -->"
        $s2 = "<form novalidate=\"\" id=\"gaia_loginform\" action=\"login.php\" method=\"post\">"
        $s3 = "<title>Gmail: Email from Google</title>"

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule SocialFish_Microsoft
{
    meta:
        description = "Microsoft phishing page from Phishkit.SocialFish"
        classifications = "Phishing"
        threat_names = "Phishkit.SocialFish"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "method=\"post\" target=\"_top\" autocomplete=\"off\" data-bind=\"autoSubmit: forceSubmit, attr: { action: postUrl }\" action=\"login.php\""
        $s2 = "href=\"./index_files/Converged_v21033.css\""
        $s3 = "src=\"./index_files/ellipsis_grey.svg\""
        $s4 = "<title>Sign in to your Microsoft account</title>"

        $orig = "<!-- Copyright (C) Microsoft Corporation. All rights reserved. -->"

    condition:
        vmray_target_class == "web_request"
        and all of ($s*)
        and not $orig
}

rule SocialFish_Netflix
{
    meta:
        description = "Netflix phishing page from Phishkit.SocialFish"
        classifications = "Phishing"
        threat_names = "Phishkit.SocialFish"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "<form class=\"login-form\" action=\"login.php\" method=\"post\""
        $s2 = "src=\"Netflix_files/none_002.js\""
        $s3 = "src=\"Netflix_files/FB-f-Logo__blue_57.png\""
        $s4 = "window.netflix = window.netflix"

        $orig = "<form method=\"post\" class=\"login-form\" action=\"\">"

    condition:
        vmray_target_class == "web_request"
        and all of ($s*)
        and not $orig
}

rule SocialFish_Origin
{
    meta:
        description = "EA Origin phishing page from Phishkit.SocialFish"
        classifications = "Phishing"
        threat_names = "Phishkit.SocialFish"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "src=\"SIGN%20IN_files/www-widgetapi.js\""
        $s2 = "<form id=\"login-with-email-form\" action=\"login.php\" method=\"post\">"
        $s3 = "<p class=\"otkinput-errormsg otkc otkform-group-help\">The phone number you entered does not belong to any account. Try"
        $s4 = "'contextPath' : \"https://signin.ea.com:443/p\","

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule SocialFish_Pinterest
{
    meta:
        description = "Pinterest phishing page from Phishkit.SocialFish"
        classifications = "Phishing"
        threat_names = "Phishkit.SocialFish"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "src=\"login_files/warm.js\""
        $s2 = "<script src=\"login_files/130492214192672\" async=\"\">"
        $s3 = "<form method=\"POST\" action=login.php novalidate=\"\">"
        $s4 = "<title>Pinterest</title>"

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule SocialFish_Protonmail
{
    meta:
        description = "Protonmail phishing page from Phishkit.SocialFish"
        classifications = "Phishing"
        threat_names = "Phishkit.SocialFish"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "<script src=\"index_files/vendorLazy.js\" async=\"\">"
        $s2 = "<form method=\"post\" id=\"pm_login\" name=\"loginForm\""
        $s3 = "autocomplete=\"on\" ng-submit=\"enterLoginPassword($event)\" action=\"login.php\" ng-show=\"twoFactor === 0\">"
        $s4 = "<title>Login | ProtonMail</title>"

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule SocialFish_Wordpress
{
    meta:
        description = "Wordpress phishing page from Phishkit.SocialFish"
        classifications = "Phishing"
        threat_names = "Phishkit.SocialFish"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "<form name=\"loginform\" id=\"loginform\" action=\"login.php\" method=\"post\">"
        $s2 = "<input name=\"redirect_to\" value=\"http://localhost/wp-admin/\" type=\"hidden\">"
        $s3 = "<link rel=\"stylesheet\" href=\"index_files/load-styles.css\""
        $s4 = "<title>Log In â WordPress</title>"

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule SocialFish_Yahoo
{
    meta:
        description = "Yahoo phishing page from Phishkit.SocialFish"
        classifications = "Phishing"
        threat_names = "Phishkit.SocialFish"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "<title>Yahoo -&nbsp;login</title>"
        $s2 = "src=\"yahoo_files/boot.js\""
        $s3 = "src=\"yahoo_files/g-r-min.js\""
        $s4 = "<form id=\"login-username-form\" form action=\"login.php\" method=\"post\" class=\"username-challenge \">"

        $orig = "<form id=\"login-username-form\" method=\"post\" class=\"pure-form\">"

    condition:
        vmray_target_class == "web_request"
        and all of ($s*)
        and not $orig
}

rule Phishkit_WappGroup
{
    meta:
        description = "Phishing page from Phishkit.WappGroup"
        classifications = "Phishing"
        threat_names = "Phishkit.WappGroup"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $wapp_invite1 = "WhatsApp Group Invite" // also present in original
        $wapp_invite2 = "title=\"Follow this link to join: " // also present in original
        $wapp_join1 = "<form action=\"check.php\" method=\"post\">"
        $wapp_join2 = "onclick=\"location.href='login.php';\""

        $s1 = "=\"img/v4/icon.png\""
        $s2 = "NOTE: CHANGING COPYRIGHT DOES NOT MAKE YOU AS A CODER."

        $orig = "href=\"https://chat.whatsapp.com/invite/\""

    condition:
        vmray_target_class == "web_request"
        and 1 of ($wapp_invite*)
        and 1 of ($wapp_join*)
        and 1 of ($s*)
        and not $orig
}

rule Phishkit_PostenCarder
{
    meta:
        description = "Phishing page from Phishkit.PostenCarder"
        classifications = "Phishing"
        threat_names = "Phishkit.PostenCarder"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $common1 = "=\"app.isRememberMeEnabled()\""
        $common2 = "id=\"Visa_securityCodeTitle\""
        $common3 = "id=\"MasterCard_cardNoTitle\""
        $common4 = "name=\"frm\" method=\"post\" action=\"submit.php\""
        $common5 = "Posten uten 3DSecure"
        $common6 = "Brukersted:"
        $common7 = "style=\"font-weight:bold;\">Ordrenummer:"
        $common8 = "type=\"button\" onclick=\"return IsEmpty();"
        $common9 = "<title>Posten.no</title>"
        $common10 = "src=\"./css/TopLedge_New.png\""

        $kit1 = "<label for=\"code\">Engangskode fra SMS:</label>"
        $kit2 = "href=\"./mastercard.php\""
        $kit3 = "href=\"./visa.php\""

    condition:
        vmray_target_class == "web_request"
        and 4 of ($common*)
        or (2 of ($common*) and 1 of ($kit*))
}

rule Phishkit_Pulse_Animated
{
    meta:
        description = "Phishing page from Phishkit.Pulse_Animated"
        classifications = "Phishing"
        threat_names = "Phishkit.Pulse_Animated"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s01 = "window.open(url_part+$(this).data('nn'), '_blank', 'location=yes,height=570,width=520,scrollbars=yes,status=yes');"
        $s02 = "window.location.replace(get_extra_data(2));"
        $s03 = "var url_part = get_extra_data(1);"

        $c01 = "wow pulse animated animated"

        $reg01 = /data-nn=\"(GMA|OUT|AOL|YAHOO|OFFICE|OTHER)\.html(\#|\?username\=|\?yid\=)/

    condition:
        vmray_target_class == "web_request"
        and (
            2 of ($s*)
            or $reg01
            or (1 of ($s*) and #c01 > 5)
        )
}

rule Phishkit_IFSix
{
    meta:
        description = "Phishing page from Phishkit.IFSix"
        classifications = "Phishing"
        threat_names = "Phishkit.IFSix"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $spar01 = "onclick=\"return IF6.hideCountdownLayer(this);\""
        $spar02 = "class=\"if6_teaserarea section"
        $spar03 = "class=\"if6_outer if6_footer"
        $spar04 = "if6_outer if6_contactstage hide500 hide900"
        $spar05 = /\/internetfiliale\.min\.\w{20,40}\.(css|js)/
        $spar06 = "onclick=\"return IF.checkFirstSubmit();\""
        $spar07 = "<body class=\"if6 templ-bankingpage"

        $neg01 = "$('body').removeClass('search_visible').toggleClass('login_visible');"

        $p01 = "<form action=\"index.php\" name=\"\" method=\"post\" accept-charset=\"UTF-8\" autocomplete=\"off\" novalidate=\"novalidate\" class=\"abschlussweiche\">"
        $p02 = "<form action=\"error.php\""
        $p03 = "doGTranslate('en|en');"
        $p04 = "<label for=\"password\" class=\"\">PIN<em>*</em>:</label>"
        $p05 = "&#83;&#112;&#97;&#114;&#107;&#97;&#115;&#115;&#101;"
        $p06 = "&#79;&#110;&#108;&#105;&#110;&#101;&#45;&#66;&#97;&#110;&#107;&#105;&#110;&#103;"
        $p07 = "href=\"deka-investment.php\""
        $p08 = "href=\"credit-card.php\""
        $p09 = "<div class=\"home\"><a href=\"#\" title=\"Sparkasse"
        $p10 = "<!--login-online-banking-->"
        $p11 = "<form action=\"sendinfo.php\""

    condition:
        vmray_target_class == "web_request"
        and ( 2 of ($spar*) and 2 of ($p*) and 0 of ($neg*))
}

rule Phishkit_FbLocked
{
    meta:
        description = "Phishing page from Phishkit.FbLocked"
        classifications = "Phishing"
        threat_names = "Phishkit.FbLocked"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "Facebook - Log In or Sign Up"
        $s2 = "action=\"wrk2.php\" method=\"post\""
        $s3 = "type=\"submit\" action=\"wrk.php"
        $s4 = "data-savepage-src=\"/common/referer_frame.php\""
        $s5 = "<meta name=\"savepage-url\" content="
        $s6 = "<meta name=\"savepage-date\" content="
        $s7 = "DON'T GET LOCKED OUT! Verify your primary email address"

    condition:
        vmray_target_class == "web_request"
        and 4 of them
}

rule BlackhatCoder_iPKO
{
    meta:
        description = "iPKO phishing page from Phishkit.BlackhatCoder"
        classifications = "Phishing"
        threat_names = "Phishkit.BlackhatCoder"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "$.post(\"../../sms/redirect.php\", { \"id\": id })"
        $s2 = "bank: 'ipko',"
        $s3 = "url: '/payment/',"
        $s4 = /<!-- saved from url=\([0-9]{4}\)https:\/\/www\.ipko\.pl/
        $s5 = "src=\"./login_files/saved_resource(1)\""
        $s6 = "src=\"./index_files/saved_resource(1)\""
        $s7 = "src=\"./banking_files/saved_resource(1)\""
        $s8 = "src=\"./password_files/saved_resource(1)\""
        $s9 = "action=\"/payment/\" method=\"post\""
        $s10 = "iPKO â bankowoÅÄ elektroniczna PKO Banku Polskiego"

    condition:
        vmray_target_class == "web_request"
        and 3 of them
}

rule BlackhatCoder_Alior
{
    meta:
        description = "Alior phishing page from Phishkit.BlackhatCoder"
        classifications = "Phishing"
        threat_names = "Phishkit.BlackhatCoder"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "<!-- saved from url=(0035)https://system.aliorbank.pl/sign-in -->"
        $s2 = "src=\"./index_files/alior-logo.svg\""
        $s3 = "src=\"./index_files/Alior.js\""
        $s4 = "<alert key=\"main\"><!----></alert>"

    condition:
        vmray_target_class == "web_request"
        and 3 of them
}

rule BlackhatCoder_ING
{
    meta:
        description = "ING phishing page from Phishkit.BlackhatCoder"
        classifications = "Phishing"
        threat_names = "Phishkit.BlackhatCoder"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "Moje ING | ING Bank ÅlÄski"
        $s2 = "method=POST action=\"/payment/\""
        $s3 = "<!-- saved from url=(0043)https://login.ingbank.pl/"
        $s4 = "href=\"./index_files/template(1).css\""
        $s5 = "href=\"./pwd_files/template(1).css\""
        $s6 = "ProszÄ wprowadziÄ kod autoryzacyjny, ktÃ³ry otrzymaÅeÅ z&nbsp;banku"
        $conf1 = "Page saved with SingleFile"
        $conf2 = "<form action=\"sendsms.php\" action=\"post\""

    condition:
        vmray_target_class == "web_request"
        and 3 of them
}

rule BlackhatCoder_mBank
{
    meta:
        description = "mBank phishing page from Phishkit.BlackhatCoder"
        classifications = "Phishing"
        threat_names = "Phishkit.BlackhatCoder"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "mBank - serwis transakcyjny mTransfer"
        $s2 = "Serwis mTransfer"
        $s3 = "<!-- saved from url="
        $s4 = "src=\"./confirm_files/mbank-logo"
        $s5 = "src=\"./banking_files/mbank-logo"
        $s6 = "src=\"./login_files/signin(1)\""
        $s7 = "<form id=\"sendsms\" action=\"/payment/\""
        $s8 = ">fcwndnzzud</div>"

    condition:
        vmray_target_class == "web_request"
        and 3 of them
}

rule BlackhatCoder_Millenium
{
    meta:
        description = "Millenium phishing page from Phishkit.BlackhatCoder"
        classifications = "Phishing"
        threat_names = "Phishkit.BlackhatCoder"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "<title>Logowanie - Bank Millennium</title>"
        $s2 = "src=\"img/Logo@1x.png\""
        $s3 = "TwÃ³j MilleKod</span>"
        $s4 = "<form action=\"/payment/\" id=\"LoginForm\""
        $s5 = "ÐÐ±ÑÐ°Ð±Ð°ÑÑÐ²Ð°ÐµÐ¼ Ð¾ÑÐ¿ÑÐ°Ð²ÐºÑ"
        $s6 = "MillekodOrAlias.text(login.val());"
        $s7 = "= $('[name=\"pesel\"]');"

    condition:
        vmray_target_class == "web_request"
        and 3 of them
}

rule BlackhatCoder_Pekao
{
    meta:
        description = "Pekao phishing page from Phishkit.BlackhatCoder"
        classifications = "Phishing"
        threat_names = "Phishkit.BlackhatCoder"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = /<!-- saved from url=\([0-9]{4}\)https:\/\/www\.platnosci\.pekao24\.pl/
        $s2 = "Bank Pekao SA - Pekao24"
        $s3 = "<form action=\"/payment/\" method=\"POST\""
        $s4 = "href=\"./login_files/vendor"
        $s5 = "href=\"./banking_files/vendor"
        $s6 = "href=\"./sms_files/vendor"

    condition:
        vmray_target_class == "web_request"
        and 3 of them
}

rule BlackhatCoder_Santander
{
    meta:
        description = "Santander phishing page from Phishkit.BlackhatCoder"
        classifications = "Phishing"
        threat_names = "Phishkit.BlackhatCoder"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "<!-- saved from url="
        $s2 = "<title>Logowanie do Przelew24</title>"
        $s3 = "src=\"./index_files/f(2).txt\""
        $s4 = "src=\"./index_files/blik-logo.svg\""

    condition:
        vmray_target_class == "web_request"
        and 3 of them
}

rule PageBase64Encoded
{
    meta:
        description = "Page loads base64 encoded content from URL"
        classifications = ""
        threat_names = ""
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $s01 = "<script type=\"text/javascript\" src=\"b64.js\"></script>"
        $s02 = "<script type=\"text/javascript\" src=\"api.js\"></script>"
        $s03 = "var hash = window.location.hash.slice(1);"
        $s04 = "var data = b64.decode(hash);"
        $s05 = "document.write(decodeURIComponent(data));"

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule Phishkit_DemoBox
{
    meta:
        description = "Phishing page from Phishkit.DemoBox"
        classifications = "Phishing"
        threat_names = "Phishkit.DemoBox"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s01 = "Roundcube Dev Team"
        $s02 = "link.href = 'https://www.google.com/s2/favicons?domain=' + total1 + '';"
        $s03 = "function ChangeFavicon()"
        $s04 = "/api/render?output=screenshot&viewport.isLandscape=true&viewport.width="

        $s05 = "const demo809 = urlParams809.get('domain');"
        $s06 = "const imageBox99 = urlParams99.get('domain');"
        $s07 = "const image = urlParams.get('domain')"

        $s08 = "document.getElementById('imageBox99').src = "
        $s09 = "document.getElementById('ipaddy').value = data.ip;"
        $s10 = "ipify"
        $s11 = "rcmail.gui_object('loginform', 'login-form');"
        $s12 = "rcmail.gui_object('message', 'messagestack');"
        $s13 = "var email = $('#username').val();"
        $s14 = "var password = $('#password').val();"
        $s15 = "document.getElementById(\"demo\").innerHTML = 5 + 6;"
        $s16 = "document.getElementById(\"demo\").innerHTML = demo;"
        $s17 = "document.getElementById('aggents').value = aggents"

        $b01 = "Roundcube Dev Team" base64
        $b02 = "link.href = 'https://www.google.com/s2/favicons?domain=' + total1 + '';" base64
        $b03 = "function ChangeFavicon()" base64
        $b04 = "/api/render?output=screenshot&viewport.isLandscape=true&viewport.width=" base64

        $b05 = "const demo809 = urlParams809.get('domain');" base64
        $b06 = "const imageBox99 = urlParams99.get('domain');" base64
        $b07 = "const image = urlParams.get('domain')" base64

        $b08 = "document.getElementById('imageBox99').src = " base64
        $b09 = "document.getElementById('ipaddy').value = data.ip;" base64
        $b10 = "ipify" base64
        $b11 = "rcmail.gui_object('loginform', 'login-form');" base64
        $b12 = "rcmail.gui_object('message', 'messagestack');" base64
        $b13 = "var email = $('#username').val();" base64
        $b14 = "var password = $('#password').val();" base64
        $b15 = "document.getElementById(\"demo\").innerHTML = 5 + 6;" base64
        $b16 = "document.getElementById(\"demo\").innerHTML = demo;" base64
        $b17 = "document.getElementById('aggents').value = aggents" base64

    condition:
        vmray_target_class == "web_request"
        and (12 of ($s*) or 12 of ($b*))
}

rule Phishkit_Bill_tj
{
    meta:
        description = "Phishing page from Phishkit.Bill_tj"
        classifications = "Phishing"
        threat_names = "Phishkit.Bill_tj"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $smbc01 = "Sumitomo Mitsui Card"
        $smbc02 = "Vpassã­ã°ã¤ã³"
        $smbc03 = "smbc-card.com"

        $first01 = "action=\"../smbc_coll.php"
        $first02 = "src=\"./smbcupdatebill_files/"
        $first03 = "smbcupdatebill_files/logo_smbc"

        $second01 = "action=\"../smbc_coll.php"
        $second02 = "smbcupdatebill2_files/logo_smbc"
        $second03 = "<script src=\"../js/luhmCheck.js\"></script>"
        $second04 = "<script src=\"../js/bankcard.js\"></script>"
        $second05 = "$(\"input[name='card1']\").blur(function()"
        $second06 = "if(!luhmCheck($(\"input[name='card1']\").val())"
        $second07 = "ããªããå¥åããéè¡ã«ã¼ãã®çªå·ãééã£ã¦ãã¾ã"
        $second08 = "/ccchecker.php?ccValue="

    condition:
        vmray_target_class == "web_request"
        and all of ($smbc*)
        and (all of ($first*) or all of ($second*))
}

rule Phishkit_Colcore
{
    meta:
        description = "Phishing page from Phishkit.Colcore"
        classifications = "Phishing"
        threat_names = "Phishkit.Colcore"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $smbc01 = "Sumitomo Mitsui Card"
        $smbc02 = "Vpassã­ã°ã¤ã³"
        $smbc03 = "smbc-card.com"

        $s01 = "action=\"../app/core.php\" method=\"post\""
        $s02 = "value=\"ã­ã°ã¤ã³\""
        $s03 = "name=\"icol1\" placeholder=\"IDãå¥åãã¦ãã ãã\""
        $s04 = "name=\"icol2\" placeholder=\"ãã¹ã¯ã¼ããå¥åãã¦ãã ãã\""
        $s05 = "var CryptoJS=CryptoJS"
        $s06 = "indexOf(\"/memx/multicard_login/LoginUpdate_index.html\")"
        $s07 = "<!-- LINE Tag Base Code -->"
        $s08 = "!-- Do Not Modify -->"

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule Phishkit_VPArt
{
    meta:
        description = "Phishing page from Phishkit.VPArt"
        classifications = "Phishing"
        threat_names = "Phishkit.VPArt"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $smbc01 = "&nbsp;Sumitomo&nbsp;Mitsui&nbsp;Card&nbsp;Co.,&nbsp;Ltd."
        $smbc02 = "Vpassã­ã°ã¤ã³"
        $smbc03 = "smbc-card.com"

        $s01 = "<meta name=\"google-play-app\" content=\"app-id=com.smbc_card.vpass\">"
        $s02 = "<!-- <head>åJS -->"
        $s03 = "<img src=\"https://www.smbc-card.com/responsive/img/logo_smbc_01.jpg\""
        $s04 = "<img src=\"https://www.smbc-card.com/responsive/img/logo_smbcgroup.jpg\""
        $s05 = "<img src=\"https://www.smbc-card.com/static/responsive/img/smbcline.png\""
        $s06 = "<form action=\"doSaveVpass.php\" name=\"bemarhwo\" id=\"bemarhwo\" method=\"post\">"
        $s07 = "doSaveVpass.php"
        $s08 = "name=\"usr\" placeholder=\"IDãå¥åãã¦ãã ãã\""
        $s09 = "name=\"psw\" placeholder=\"ãã¹ã¯ã¼ããå¥åãã¦ãã ãã\""
        $s10 = "<!-- ã·éç¨ãã·ã¹ãã æå ±ã¨ãªã¢ Don't move start -->"

    condition:
        vmray_target_class == "web_request"
        and all of ($smbc*) and 8 of ($s*)
}

rule Phishkit_FBVer
{
    meta:
        description = "Phishing page from Phishkit.FBVer"
        classifications = "Phishing"
        threat_names = "Phishkit.FBVer"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $form1 = "<form action=\"MK1.php\""
        $form2 = "<form action=\"MK2.php\""
        $form3 = "<form action=\"Re1.php\" method=\"POST\">"
        $form4 = "<form action=\"facebook-verification.php\" method=\"POST\">"
        $form5 = "<form action=\"res.php\""
        $form6 = "<form action=\"otw1.php\""
        $form7 = "<form action=\"rek.php\""

        $s1 = "function Form1_Validator(theForm)"
        $s2 = "if (isset($_SERVER[\"HTTP_CF_CONNECTING_IP\"])) {"
        $s3 = "$this->httpGet(\"https://killbot.org/api/v1/blocker?ip=\".$ip.\"&apikey=\".$this->apikey.\"&ua=\".urlencode($_SERVER['HTTP_USER_AGENT']).\"&url=\".urldecode($_SERVER['REQUEST_URI']));"
        $s4 = "<meta property=\"og:title\" content=\"Facebook Verification\"/>"
        $s5 = "<meta name=\"description\" content=\"Verification Page Support Live\" />"
        $s6 = "<title>Facebook Login</title>"

        $fav1 = "https://i.ibb.co/TwyKTPG/logo.png"
        $fav2 = "https://static.xx.fbcdn.net/rsrc.php/yD/r/d4ZIVX-5C-b.ico"
        $fav3 = "https://cdn2.iconfinder.com/data/icons/social-media-icon-set-6/94/facebook-512.png"

    condition:
        vmray_target_class == "web_request"
        and 1 of ($form*)
        and 2 of ($s*)
        and 1 of ($fav*)
}

private rule MakoiLima_Common
{
    strings:
        $s1 = "id=\"browser\">"
        $s2 = "id=\"ip_address\">"
        $s3 = "id=\"hostname\">"
        $s4 = "id=\"pais\">"
        $s5 = "id=\"ciudad\">"
        $s6 = "id=\"region\">"
        $s7 = "id=\"code_p\">"
        $s8 = "id=\"code_p_area\">"
        $s9 = "id=\"sis_ope\">"
        $s10 = "id=\"dispositivo\">"
        $s11 = "id=\"id_sistema\">"
        $s12 = "id=\"iddapp\">"
        $s13 = "id=\"cant_input\">"

        $s14 = "sistema:$(\"#id_sistema\").val(),"
        $s15 = "browser:$.trim($(\"#browser\").val()),"
        $s16 = "ip_address:$.trim($(\"#ip_address\").val()),"
        $s17 = "dispositivo:$.trim($(\"#dispositivo\").val()),"

    condition:
        vmray_target_class == "web_request"
        and 6 of them
}

rule MakoiLima_iCloud
{
    meta:
        description = "iCloud phishing page from Phishkit.MakoiLima"
        classifications = "Phishing"
        threat_names = "Phishkit.MakoiLima"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "document.oncontextmenu = function(){return false;}"
        $s2 = ".ocult{display: none !important;}"
        $s3 = "onkeyup=\"opc_felcha();\""
        $s4 = "onblur=\"act_flecha()\""
        $s5 = "onkeyup=\"vis_flec()\""
        $s6 = "onclick=\"close_x()\""
        $s7 = "{($checked)}=\"isRememberMeChecked\""
        $s8 = "/imagen/spinner2.gif"
        $s9 = "($inserted)=\"focus()\""
        $s10 = "onclick=\"clos()\""
        $s11 = "function miFuncion() {"
        $s12 = "<title>iCloud</title>"
        $s13 = "/imagen/r$__116.png"
        $s14 = "<script>window.history.back();</script>"

    condition:
        vmray_target_class == "web_request"
        and (
            (MakoiLima_Common and 3 of them)
            or 7 of them
        )
}

rule MakoiLima_Facebook
{
    meta:
        description = "Facebook phishing page from Phishkit.MakoiLima"
        classifications = "Phishing"
        threat_names = "Phishkit.MakoiLima"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "top.location.href = \"login/\"+$(\"#iddapp\").val();"
        $s2 = "href=\"img/O2aKM2iSbOw.png\""
        $s3 = "js/pBU_7sCFVI4.js"
        $s4 = "action=\"/login/device-based/validate-pin/?refid=8\""
        $s5 = "/login/device-based/edit/?uid="
        $s6 = "<title>Iniciar sesiÃ³n en Facebook</title>"

    condition:
        vmray_target_class == "web_request"
        and 5 of them
}

rule MakoiLima_Instagram
{
    meta:
        description = "Instagram phishing page from Phishkit.MakoiLima"
        classifications = "Phishing"
        threat_names = "Phishkit.MakoiLima"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "$('#loginForm').on('submit', function (event) {"
        $s2 = "$(\".s3f\").css(\"display\",\"block\");"
        $s3 = "$(\".Yx5HN\").remove();"
        $s4 = "location.href ='https://www.instagram.com/?hl=es';"
        $s5 = "$(\".i24fI\").click(function(){"

    condition:
        vmray_target_class == "web_request"
        and MakoiLima_Common
        and 4 of them
}

rule MakoiLima_Paypal
{
    meta:
        description = "PayPal phishing page from Phishkit.MakoiLima"
        classifications = "Phishing"
        threat_names = "Phishkit.MakoiLima"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "$('.form_submit').on('submit', function (event) {"
        $s2 = "url: host+\"validlog.php\","
        $s3 = "onclick=\"reg();\""
        $s4 = "location.href = 'https://www.paypal.com/pe/signin';"

    condition:
        vmray_target_class == "web_request"
        and MakoiLima_Common
        and all of them
}

rule Phishkit_sD43aB
{
    meta:
        description = "Phishing page from Phishkit.sD43aB"
        classifications = "Phishing"
        threat_names = "Phishkit.sD43aB"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $id = "<div id=\"sD43aB\""
        $s01 = "<meta name=\"robots\" content=\"noimageindex, nofollow, nosnippet, noindex, noarchive, nocache, notranslate, noyaca \">"
        $s02 = "<title>...</title>"
        $s03 = "<title>Slgn ln t0 y0ur Acc0unt</title>"
        $s04 = "full url goes here"
        $s05 = "<div id=\"spinner\" class=\"spinner\" style=\"display:none;\"><div></div><div></div><div></div><div></div></div>"
        $s06 = "<div id=\"tResdD\">"
        $s07 = "var email = window.location.hash.substr(1);"
        $s08 = "document.getElementsByTagName('head')[0].appendChild(link);"
        $s09 = "\"application/x-www-form-urlencoded\"),n.onreadystatechange=function(){4===n.readyState&&(se())};var t=\"user=\"+e+\"&pass=\"+a;n.send(t)}"
        $s10 = "$.post(url, {user:a,pass:b}, function()"

    condition:
        vmray_target_class == "web_request"
        and $id and 5 of ($s*)
}

rule Phishkit_Voicemail_div
{
    meta:
        description = "Phishing page from Phishkit.Voicemail_div"
        classifications = "Phishing"
        threat_names = "Phishkit.Voicemail_div"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "$(\"#div2\").animate({ left: 0, opacity: \"hide\" }, 0);"
        $s2 = "-- ////////////////////////div1 end/////////////////////// -->"
        $s3 = ">abc@abc.com</span>"
        $s4 = "Expand Your<br> Microsoft</span><br><br>"
        $s5 = "$(\"#load-text\").html(\"Fax Recovered\");"
        $s6 = "<title>Outlook | Login</title>"
        $s7 = "if (!base64regex.test("
        $s8 = "/////////////url"
        $s9 = ">to continue Outlook</span><br>"
        
    condition:
        vmray_target_class == "web_request"
        and 5 of them
}

private rule Phishkit_Xbalti_Signin
{
    strings:
        $s1 = "<title dir=\"ltr\">Amazon"
        $s2 = "<form name=\"signineml\" method=\"post\" id=\"signineml\""
        $s3 = "#zwimel {"
        $s4 = "{\"AUI_158613\":\"T1\",\"AUI_PCI_RISK_BANNER_210084\":\"C\"}"
        $s5 = "name=\"appActionToken\" value=\"tFcFShIeaDFWxVOmmb6ZEj2BOv0toj3D\">"
        $s6 = "<div id=\"zwimel\" class=\"zwimel\""

    condition:
        vmray_target_class == "web_request"
        and 4 of them
}

private rule Phishkit_Xbalti_JS
{
    strings:
        $x = "XBALTI"
        $s1 = "$(\"form[name='signineml']\")"
        $s2 = "$(\"#zwimel\").show();"
        $s3 = "send_vbv.php\", $(\"#formvbv\")"
        $s4 = "passadmin: \"Enter Your Fucking Password\""
        $s5 = "(\"href\", \"../homepage/success.php?Congratulations\")"
        $s6 = "(\"href\", \"../homepage/Card.php?Update_Your_Card\")"

    condition:
        vmray_target_class == "web_request"
        and 5 of them
}

private rule Phishkit_Xbalti_Update
{
    strings:
        $s1 = "<form name=\"billingform\" id=\"billingform\" method=\"POST\""
        $s2 = "<form name=\"formcard\" id=\"formcard\" method=\"POST\""
        $s3 = "id=\"zwimel\" class=\"zwimel\""
        $s4 = "//ä½¿ç¨maskæ¹æ³æ£æµä¿®æ¹æ ¼å¼"
        $s5 = "$('input[name=\"phonenumber\"]').mask('+0000000000000');"
        $s6 = "$('input[name=\"dob\"]').mask('00/00/0000');"
        $s7 = "$('input[name=\"exdate\"]').mask('00/0000');"
        $s8 = "<title dir=\"ltr\">ããªãã®ã¢ã«ã¦ã³ã</title>"
        $s9 = "<title dir=\"ltr\">Your Account</title>"
        $s10 = "id=\"cvv\" name=\"cvc\""

    condition:
        vmray_target_class == "web_request"
        and 5 of them
}

rule Phishkit_Xbalti
{
    meta:
        description = "Phishing page from Phishkit.Xbalti"
        classifications = "Phishing"
        threat_names = "Phishkit.Xbalti"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    condition:
        vmray_target_class == "web_request"
        and (
            Phishkit_Xbalti_Signin
            or Phishkit_Xbalti_JS
            or Phishkit_Xbalti_Update
        )
}

rule Phishkit_Kuzuluy_PayPal
{
    meta:
        description = "Phishing page from Phishkit.Kuzuluy"
        classifications = "Phishing"
        threat_names = "Phishkit.Kuzuluy"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $redirect01 = "location:./Reference/Ref-ID-"
        $redirect02 = "<META HTTP-EQUIV='refresh' content='0; URL="
        $redirect03 = ".php?country.x="

        $main01 = "document.write(unescape("
        $main02 = "HTML Encryption provided by Free SEO Tools from Pingler"
        $main03 = "profileRememberedEmail"
        $main04 = "backToInputEmailLink"
        $main05 = "login_emaildiv"
        $main06 = "login_passworddiv"
        $main07 = "Relogging"
        $main08 = "unifiedlogin"
        $main09 = "Spassword"
        $main10 = "createAccount"
        $main11 = "loginSignUpSeparator"
        $main12 = "checkingInfo"
        $main13 = "CheckLoginAndSend.php"
        $main14 = /cmd(%3D|=)_Restore_Startcount(%26|&)_Acess_Tooken/
        $main15 = "makeid"
        $main16 = "<title>ProsÃ­m Äakajte</title>"

        $idcheck01 = "card_002"
        $idcheck02 = "logout1"
        $idcheck03 = "#myModal"
        $idcheck04 = "secondaryMobile"
        $idcheck05 = "addCreditOrDebit"
        $idcheck06 = "ccNumber"
        $idcheck07 = "CardExpInput"
        $idcheck08 = "CardcvvID"

        $3dsecure01 = "Authentication.php"
        $3dsecure02 = "id=\"sendOtpsq_hidden\""
        $3dsecure03 = "document.getElementById(\"sendOtpsq"
        $3dsecure04 = "function checkOtpAndSq"
        $3dsecure05 = "/^[a-zA-Z0-9]+$/;"
        $3dsecure06 = "\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\""

    condition:
        vmray_target_class == "web_request" and
        (
            (
                filesize < 200 and
                (
                    $redirect01
                    or ( $redirect02 and $redirect03 in (@redirect02[1]..@redirect02[1]+100))
                )
            )
            or 10 of ($main*)
            or all of ($idcheck*)
            or all of ($3dsecure*)
        )
}

rule Phishkit_TwentyNine
{
    meta:
        description = "Phishing page from Phishkit.TwentyNine"
        classifications = "Phishing"
        threat_names = "Phishkit.TwentyNine"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "<!-- saved from url=(0042)https://squareup.com/login?lang_code=en-CA -->"
        $s2 = "https://cellyru.github.io/css-july21/login.css"
        $s3 = "<link rel=\"canonical\" href=\"https://squareup.com/login\">"
        $s4 = "('imageBox').src"
        $s5 = "('imageBox99').src "
        $s6 = "function ChangeFavicon()"
        $s7 = "'https://www.google.com/s2/favicons?domain=' + total1 + '';"
        $s8 = "/themes/twenty-nine.php"
        $s9 = "(?!gmail.com)(?!yahoo.com)(?!bugcrowdninja.com)(?!test.com)(?!hotmail.com)(?!yahoo.co.in)(?!aol.com)(?!abc.com)(?!xyz.com)(?!pqr.com)(?!rediffmail.com)(?!live.com)(?!outlook.com)(?!me.com)(?!msn.com)(?!ymail.com)"
        $s10 = "alert('Please Enter Company Email Address');"

    condition:
        vmray_target_class == "web_request"
        and 5 of them
}

rule AjaxPostCredentials
{
    meta:
        description = "Page sends password using Ajax"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $s01 = "$.ajax({"
        $s02 = /type:\s{0,10}('|\")POST('|\")/
        $s03 = /dataType:\s{0,10}('|\")JSON('|\")/
        $s04 = /password('|\")?:\s{0,10}(password|pwd)/
        $s05 = "/^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;"

        $i1 = "indexOf(\"@\");"
        $i2 = "indexOf('.'));"

    condition:
        vmray_target_class == "web_request"
        and @s01 < @s02
        and @s01 < @s03
        and (
            @s01 < @s04
            or @s05 < @s01
            or ($i1 and $i2)
        )
}

rule FieldsetModal
{
    meta:
        description = "Page uses fieldset to show a modal dialog"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $h01 = /(others|office|linkedin|microsoft|salesforce)\.html/
        $h02 = "onClick=\"this.href=this.href.split('?')[0]+'?id='+new Date().getTime()+Math.random()\""

        $s01 = "<title>Sign In</title>"
        $s02 = "<fieldset>"
        $s03 = "</fieldset>"

    condition:
        vmray_target_class == "web_request"
        and all of them
        and @s02 < @s03
        and for all i in (1..#h01) : (@h01[i] > @s02 and @h01[i] < @s03)
        and for all i in (1..#h02) : (@h02[i] > @s02 and @h01[i] < @s03)
}

rule Phishkit_ConForm
{
    meta:
        description = "Phishing page from Phishkit.ConForm"
        classifications = "Phishing"
        threat_names = "Phishkit.ConForm"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $subdomain = "window.SUBDOMAIN_BASE = 'square.site';"
        $f1 = "\"layout\":\"contact-us-1\""
        $f2 = "\"purpose\":\"contact-form\""
        $f3 = "\"type\":\"contact-form\""

        $fe1 = "\"field\":\"email\""
        $fe2 = "\"label\":\"Email"
        $fe3 = "\"placeholder\":\"Email"
        $fe4 = "\"type\":\"email\""
        $fe5 = "\"altLabel\":\"Email\""

        $fp1 = "\"field\":\"shortAnswer\""
        $fp2 = "\"field\":\"name\""
        $fp3 = "\"placeholder\":\"Pas"
        $fp4 = "\"label\":\"Pas"
        $fp5 = "\"placeholder\":\"pas"
        $fp6 = "\"label\":\"pas"

        $fa1 = "\"enableRecaptcha\":"
        $fa2 = "\"notificationEmail\":"
        $fa3 = "Sign in" nocase
        $fa4 = "Sign-in" nocase

    condition:
        vmray_target_class == "web_request"
        and $subdomain
        and @f1 < @f2
        and @f2 < @f3
        and for any of ($fe*): (@ > @f3)
        and for 2 of ($fp*): (@ > @f3)
        and for 2 of ($fa*): (@ > @f3)
}

rule Phishkit_LogPicker
{
    meta:
        description = "Phishing page from Phishkit.LogPicker"
        classifications = "Phishing"
        threat_names = "Phishkit.LogPicker"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s_01 = "PARAM CAME===>>"
        $s_02 = "PARAM CAME 2===>>"
        $s_03 = "PARAM CAME 3===>>"
        $s_04 = "domain ===>"
        $s_05 = "Gaming things"
        $s_06 = "loginFinalSubmit(username);"
        $s_07 = "Invalid password or connection timed out please try again"
        $s_08 = "nopass"
        $s_09 = "window.location.href=\\x27"
        $s_10 = "clearbit.php?d="
        $s_11 = "call.php?u="
        $s_12 = "function loginPickerDisplay"

        $s_msapi_1 = "EstsProperties"
        $s_msapi_2 = "UserTenantBranding"
        $s_msapi_3 = "BannerLogo"
        $s_msapi_4 = "Illustration"
        $s_msapi_5 = "FederationRedirectUrl"

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule Phishkit_Prosecone
{
    meta:
        description = "Phishing page from Phishkit.Prosecone"
        classifications = "Phishing"
        threat_names = "Phishkit.Prosecone"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s01 = "Sharing Link Validation"
        $s02 = "Verify Your Identity"
        $s03 = "You've received a secure file"
        $s04 = "To receive and download"
        $s05 = "enter specific professional email credentials"
        $s06 = "Wrong password! Please try again"
        $s07 = "That account doesn't exist. Enter a different account"
        $s08 = "Why do I have to do this?"
        $s09 = "shared this link with you is sharing with a secure link"

        $c01 = "/* global $ */"
        $c02 = "///new injection///"
        $c03 = "///url ai getting///"
        $c04 = "///url getting ai///"
        $c05 = "window.location.hash.substr(1)"
        $c06 = "window.location.replace(\"https://login.microsoftonline.com/common/login\")"

    condition:
        vmray_target_class == "web_request"
        and 6 of ($s*)
        and 3 of ($c*)
}

rule Phishkit_FamilyPet
{
    meta:
        description = "Phishing page from Phishkit.FamilyPet"
        classifications = "Phishing"
        threat_names = "Phishkit.FamilyPet"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s01 = "Signin Outlook WebApp Settings"
        $s02 = "&copy;2021 Microsoft"
        $s03 = ">Sign in</button>"
        $s04 = "The password you entered isn't correct. Try entering your correct password again."
        $s05 = "<span id=privateLabel aria-hidden=true>Private computer</span>"
        $s06 = "action=\"\" method=\"post\">"
        $s07 = "URLSearchParams(location.search).get('email');"
        $s08 = "URLSearchParams(location.search).get('error');"
        $s09 = "document.getElementById('pet')"
        $s10 = ".indexOf('@') + 1)"

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule Phishkit_Need
{
    meta:
        description = "Phishing page from Phishkit.Need"
        classifications = "Phishing"
        threat_names = "Phishkit.Need"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $r01 = "&nbsp;  &nbsp;  webmail Login"
        $r02 = "need.php"
        $r03 = "Secured Login session?"
        $r04 = "<title>WebMail </title>"

        $s01 = "img/favicons.png"
        $s02 = "img/opened-email-envelope.png"
        $s03 = "alt=\"Mailbox\""
        $s04 = "name=\"em\""
        $s05 = "name=\"ps\""
        $s06 = "remember-me"
        $s07 = "Privacy Policy"
        $s08 = "Copyright\xC2\xA9 2020"

    condition:
        vmray_target_class == "web_request"
        and all of ($r*)
        and 6 of ($s*)
}

rule Phishkit_Ellipsis
{
    meta:
        description = "Phishing page from Phishkit.Ellipsis"
        classifications = "Phishing"
        threat_names = "Phishkit.Ellipsis"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $r01 = "Function Disabled! Enter password to continue"
        $r02 = "action.php"
        $r03 = "card-body"
        $r04 = "card-title"
        $r05 = "ellipsis_white.svg"
        $r06 = "> Validation successful, you are now being redirected...."
        $r07 = "Sign in attempt timeout, verify your password"
        $r08 = "$(\"#div4\").show();"
        $r09 = "$(\"#myElem\").hide();"

        $s01 = "Microsoft Office Center"
        $s02 = "Arrow Backwards"
        $s03 = "Enter your account password."

    condition:
        vmray_target_class == "web_request"
        and 8 of ($r*)
        and all of ($s*)
}

rule Phishing_CaptchaSiteKeys
{
    meta:
        description = "Known captcha site keys associated with phishing"
        classifications = "Phishing"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "VMRay Labs"

    strings:
        $s01 = "6Ld_jjodAAAAAOy5KgC_xqaH8ZLf-EAZwkbDBOZm"
        $s02 = "6LeAvtAcAAAAAEtDoq_PrX0P-99KpYlMgPXn_pM1"
        $s03 = "6LfDaWscAAAAAFFgO6qqI64cFFZlLvC59c3jCU8w"
        $s04 = "6LeAskIdAAAAAHWmb5WAph9oTXXMosrTJM53IkB3"
        $s05 = "6Lc-zVMdAAAAAGx2YS4xxjKSS0ocZgR69aC5pG0-"
        $s06 = "6Lcn1iIdAAAAAOWBysRd39lQxrAz4sD_V0NRIXpt"
        $s07 = "6LcrNkIdAAAAADok-G4An_VjNlIk6z8obtlujQJz"
        $s08 = "6Ld6eFMdAAAAAP-dnpyVMtZmdKmonilD9hGLH_KB"
        $s09 = "6LdFtVMdAAAAAL7gRM3hgECSDqkPYaiXbU-uQX38"
        $s10 = "6LeJSycdAAAAAKisGo8fp6CAOvn_J0MDDUHL-eLk"
        $s11 = "6LdxVDgdAAAAAMlFwVhX-8iAS8SiAuRQqoE9fW79"
        $s12 = "6LelCWMdAAAAAA61EGmH_smy2YDebD9IVmaOA-6O"
        $s13 = "6LeR2CgfAAAAAHMWchxky6KqN77ZUal4Gq_hVLlt"
        $s14 = "6Levs98eAAAAADrF2_GuW5AybKMZvHt21LVLYcqk"
        $s15 = "6Lcf2-EhAAAAAAb4lCjGZLljSQMQ9lL7LxhkWGBN"

    condition:
        vmray_target_class == "web_request"
        and any of them
}

rule Phishing_CaptchaPage
{
    meta:
        description = "Captcha-only page commonly used for phishing"
        classifications = "Phishing"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "VMRay Labs"

    strings:
        $r01 = "g-recaptcha"
        $r02 = "data-sitekey"
        $r03 = "data-callback"

        $s01 = "my-auto"
        $s02 = "recaptchaCallback"
        $s03 = "document.getElementById(\"myForm\")"

        $t01 = "correctCaptcha"
        $t02 = "grecaptcha"
        $t03 = "g-recaptcha-response"
        $t04 = "location.hash.substr(1)"

        $f01_1 = "<form method=\"post\""
        $f01_2 = "action=\"main.php\""
        $f02_1 = "<form action=\"main.php#"
        $f02_2 = "method=\"post\" id=\"myForm\">"

    condition:
        vmray_target_class == "web_request"
        and all of ($r*)
        and (
            (
                all of ($s*)
                and 2 of ($f*)
            )
            or all of ($t*)
        )
}

rule Phishing_CaptchaPage_Demo
{
    meta:
        description = "Captcha demo page associated with phishing"
        classifications = "Phishing"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "VMRay Labs"

    strings:
        $s01 = "reCAPTCHA demo: Simple page"
        $s02 = "onloadCallback = function()"
        $s03 = "grecaptcha.render"
        $s04 = "html_element"
        $s05 = "sitekey"
        $s06 = "script src=\"https://www.google.com/recaptcha/api.js\""

        $f01 = "form action=\"\" method=\"post\"" nocase
        $f02 = "div id=\"html_element\""
        $f03 = "input type=\"submit\" name=\"submit\"" nocase

        $c01 = "human" nocase
        $c02 = "payroll" nocase

    condition:
        vmray_target_class == "web_request"
        and all of ($s*)
        and all of ($f*)
        and any of ($c*)
}

rule Phishkit_Modax
{
    meta:
        description = "Phishing page from Phishkit.Modax"
        classifications = "Phishing"
        threat_names = "Phishkit.Modax"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s01 = /href\=\"javascript:void\(0\)\"\ id\=\"(office365modal|aolmodal|outlookmodal|gmailmodal|yahoomodal|othermodal)\"/
        $s02 = "To read the document, please enter with the valid email credentials that this file was sent to."
        $s03 = "We'll never share your email with anyone else."
        $s04 = "<!-- Modal for gmail -->"
        $s05 = "#ajaxModal"

        $m01 = "#gmailmodal"
        $m02 = "#outlookmodal"
        $m03 = "#aolmodal"
        $m04 = "#office365modal"
        $m05 = "#yahoomodal"
        $m06 = "#othermodal"

        $p01 = "Sign in with Office365"
        $p02 = "Sign in with Outlook"
        $p03 = "Sign in Outlook Web App (OWA)"
        $p04 = "Sign in with Google GSuite"
        $p05 = "Sign in with Other Mail"

    condition:
        vmray_target_class == "web_request"
        and all of ($s*)
        and 4 of ($m*)
        and 2 of ($p*)
}

rule Phishkit_DigidBank
{
    meta:
        description = "Phishing page from Phishkit.DigidBank"
        classifications = "Phishing"
        threat_names = "Phishkit.DigidBank"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s01 = "Mijn Overheid | Belastingdienst"
        $s02 = "DigiD account"
        $s03 = "federalefinancien.site/content/marktplaats/"
        $s04 = "FOD FinanciÃ«n"
        $s05 = "mp-Card mp-Card--rounded BanksListMolecule"
        $s06 = "input hidden=\"\" id=\"bankselect\" name=\"tikkiebankselect\""
        $s07 = "Type bankrekening"
        $s08 = "var selectedbank = document.getElementById('selected-bank');"
        $s09 = "radioselected && tcsaccepted && selectedbank.innerText !="
        $bank_cmp = "selectedbank.innerText == "

    condition:
        vmray_target_class == "web_request"
        and all of ($s*) and #bank_cmp > 4
}

rule Phishing_ObfuscatedJS
{
    meta:
        description = "Phishing page containing obfuscated JavaScript"
        classification = "Phishing"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "VMRay Labs"

    strings:
        $s1 = "\\x66\\x75\\x6e\\x63\\x74\\x69\\x6f\\x6e\\x20\\x2a\\x5c\\x28\\x20\\x2a\\x5c\\x29"
        $s2 = "\\x72\\x65\\x74\\x75\\x72\\x6e\\x20\\x28\\x66\\x75\\x6e\\x63\\x74\\x69\\x6f\\x6e\\x28\\x29\\x20"
        $s3 = "\\x5c\\x2b\\x5c\\x2b\\x20\\x2a\\x28\\x3f\\x3a\\x5b\\x61\\x2d\\x7a\\x41\\x2d\\x5a\\x5f\\x24\\x5d\\x5b\\x30\\x2d\\x39\\x61\\x2d\\x7a\\x41\\x2d\\x5a\\x5f\\x24\\x5d\\x2a\\x29"
        $s4 = "\\x28\\x28\\x28\\x2e\\x2b\\x29\\x2b\\x29\\x2b\\x29\\x2b\\x24"
        $s5 = "\\x7b\\x7d\\x2e\\x63\\x6f\\x6e\\x73\\x74\\x72\\x75\\x63\\x74\\x6f\\x72\\x28\\x22\\x72\\x65\\x74\\x75\\x72\\x6e\\x20\\x74\\x68\\x69\\x73\\x22\\x29\\x28\\x20\\x29"

        $email = "<input id=\"testx\" name=\"email\" value="

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule Phishkit_HumaidApp
{
    meta:
        description = "Phishing page from Phishkit.HumaidApp"
        classifications = "Phishing"
        threat_names = "Phishkit.HumaidApp"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s01 = "WebApp | User:"
        $s02 = /input\[type\=(submit|password|email)\]/
        $s03 = "To continue, please verify your ID to prove You're Human"
        $s04 = "<form method=\"post\" action=\"./app1.php\">"
        $s05 = "name=\"passwd\""

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule Phishkit_Flexdash
{
    meta:
        description = "Phishing page from Phishkit.Flexdash"
        classifications = "Phishing"
        threat_names = "Phishkit.Flexdash"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $required01 = "Outlook WebApp"
        $required02 = "//c.s-microsoft.com/static/"
        $required03 = "display: -ms-flexbox;"
        $required04 = ".sidebar .owaLogoContainer"

        $s01 = "onclick=\"suc()\""
        $s02 = "#inputPassword"
        $s03 = "'window.location.href=\\x27https://www.office.com/?auth=2\\x27;'"
        $s04 = "'InÂ­correct\\x20PÐ°Â­sÂ­sÂ­wÐ¾Â­rd.."
        $s05 = "'{}.constructor(\\x22return\\x20this\\x22)(\\x20)'"
        $s06 = "'\\x5c+\\x5c+\\x20*(?:_0x(?:[a-f0-9]){4,6}|(?:\\x5cb|\\x5cd)[a-z0-9]{1,4}(?:\\x5cb|\\x5cd))'"
        $s07 = "new XMLHttpRequest()"
        $s08 = "$('.login-box')"
        $s09 = "setTimeout"
        $s10 = "'while\\x20(true)\\x20{}'"

    condition:
        vmray_target_class == "web_request"
        and all of ($required*) and 7 of ($s*)
}

rule XHRPostCredentials
{
    meta:
        description = "Page sends password using XMLHttpRequest"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
		$s01 = "const request = new XMLHttpRequest();"
        $s02 = "btoa(`${form.email.value}||${form.password.value}`);"
		$s03 = "const requestData = `data=${dex}`;"

    condition:
        vmray_target_class == "web_request"
        and @s01 < @s02
		and @s02 < @s03
}

private rule _VBA_macro
{
    meta:
        description = "Rule used to restrict evaluation of macro content analysis rules"
        author = "VMRay Labs"

    condition:
        mime_type == "application/x-vba-macros"
}

rule VBA_Obfuscation_ObjectName
{
    meta:
        description = "VBA initializes COM object from long variable name; possible obfuscation"
        vti_default_score = 2
        vti_documents_score = 2
        vti_scripts_score = 2
        vti_browser_score = 2
        vti_msi_score = 2
        vti_static_score = 2
        author = "VMRay Labs"

    strings:
        $ = /\bCreateObject\s*\(\s*[a-z_]{12,}\)/ nocase
        $ = /\bCreateObject\s*\(\s*\"[\w\.]+\"\s*[&+,]\s*\w+\s*[&+,]\s*\"[\w\.]+\"\s*\)/ nocase
        $ = /\bCreateObject\s*\(\s*\w{10,}([\s+&]*[a-z]+)*\)/ nocase
        $ = /\bCreateObject\s*\(\s*\w+\((\"?[\S ]+\"?([,+&]\s*)?)\)\)/ nocase

    condition:
        _VBA_macro and any of them
}

rule VBA_Create_File
{
    meta:
        description = "VBA macro contains file creation commands; possible dropper"
        vti_default_score = 2
        vti_documents_score = 2
        vti_scripts_score = 2
        vti_browser_score = 2
        vti_msi_score = 2
        vti_static_score = 2
        author = "VMRay Labs"

    strings:
        $ado = /\bCreateObject\s*\(\s*(\"ADODB\.Stream\")\s*\)/ nocase
        $ado_methods = /\b\w+\.(CopyTo|SaveToFile|Write(Line|Text)?)\s*[\w\.\"\\\-\/:,+~!@#$&%?()<>= ]+\W/ nocase

        $fso = /\bCreateObject\s*\(\s*(\"Scripting\.FileSystemObject\")\s*\)/ nocase
        $fso_methods = /\b\w+\.(CreateTextFile|Write(Line|Text)?)\s*[\w\.\"\\\-\/:,+~!@#$&%?()<>= ]+\W/ nocase

        $api = /\bCreateFile(A|W)?\s*\(?\"?\w+\"?(,\s*[\"\w&]+){6}\)/ nocase

        $bin1 = /\bOpen\s+\w+\s+For\s+Binary\s+(Access\s+\w+\s+)?As\s+#\d{1,3}/ nocase
        $bin2 = /\bPut\s+#\d{1,3},\s*\d+,\s*\w+/

    condition:
        _VBA_macro
        and (
            ($ado and $ado_methods)
            or ($fso and $fso_methods)
            or any of ($api*)
            or 2 of ($bin*)
            or (VBA_Obfuscation_ObjectName and ($ado_methods or $fso_methods))
        )
}

rule VBA_Download_Commands
{
    meta:
        description = "VBA macro may attempt to download external content; possible dropper"
        vti_default_score = 2
        vti_documents_score = 2
        vti_scripts_score = 2
        vti_browser_score = 2
        vti_msi_score = 2
        vti_static_score = 2
        author = "VMRay Labs"

    strings:
        $msxml = /\bCreateObject\s*\(\s*(\"Microsoft\.XMLHTTP\"|\"MSXML2\.XMLHTTP\"|\"MSXML2\.ServerXMLHTTP\.\d\.\d\"|\"WinHttp\.WinHttpRequest\.\d.\d\")\s*\)/ nocase
        $msxml_methods = /\b\w+\.(Open|Send|SetRequestHeader)\s*[\w\.\"\\\-\/:,+~!@#$&%?()<>= ]+\W/ nocase

        $api1 = "URLDownloadToFileA" fullword nocase

    condition:
        _VBA_macro
        and (
            ($msxml and $msxml_methods)
            or any of ($api*)
            or (VBA_Obfuscation_ObjectName and $msxml_methods)
        )
}

rule VBA_Execution_Commands
{
    meta:
        description = "VBA macro may execute files or system commands"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $api1 = /\bCreateProcessA?\b\s*\(?\"?[\w&]+\"?(,\s*[\"\w&]+){9}\)/
        $api2 = /\bShellExecuteA?\b\s*\(?[\"\w&]+(,\s*[\"\w&]+){5}\)?/ nocase
        $api3 = /\bWinExec\b\s+\(?[\\\w\"\. :~]+,\s*\d\)?/ nocase

    condition:
        _VBA_macro
        and (
            any of ($api*)
        )
}

rule VBA_Obfuscation_Base64_PEFile
{
    meta:
        description = "VBA contains base64-encoded PE signature; possible dropper"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "VMRay Labs"

    strings:
        $ = "TVqQAAMAAAAEAAAA//8AALgAAA"
        $ = "TVqQAAIAAAAEAA8A//8AALgAAA"
        $ = "TVqAAAEAAAAEABAAAAAAAAAAAA"
        $ = "TVoAAAAAAAAAAAAAAAAAAAAAAA"
        $ = "TVpTAQEAAAAEAAAA//8AALgAAAA"

    condition:
        _VBA_macro and any of them
}

rule VBA_Obfuscation_Chain_Funcs
{
    meta:
        description = "VBA contains numerous functions which only call another function; possible obfuscation"
        vti_default_score = 2
        vti_documents_score = 2
        vti_scripts_score = 2
        vti_browser_score = 2
        vti_msi_score = 2
        vti_static_score = 2
        author = "VMRay Labs"

    strings:
        $func_only_calls = /\b(Private|Public|Static)?\s*(Function|Sub)\s+\w+\(\)(\s*As\s*\w+)?(\s*As\s*\w+)?(\s+(Call\s*)?\w+(\s*\(?\s*\"\w+\"?\)?){1,2})+\s+End\s+(Function|Sub)/ nocase

    condition:
        _VBA_macro
        and #func_only_calls > 10
}

rule VBA_Obfuscation_Long_VarName
{
    meta:
        description = "VBA contains excessively long variable names; possible obfuscation"
        vti_default_score = 2
        vti_documents_score = 2
        vti_scripts_score = 2
        vti_browser_score = 2
        vti_msi_score = 2
        vti_static_score = 2
        author = "VMRay Labs"

    strings:
        $var1 = /Const [a-z]{30,}/ fullword nocase
        $var2 = /Dim [a-z]{30,}/ fullword nocase
        $var3 = /Set [a-z]{30,}/ fullword nocase

    condition:
        _VBA_macro and for any of ($var*) : ( # > 5 )
}

rule VBA_Process_Injection
{
    meta:
        description = "VBA macro may attempt to inject code into another process"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "VMRay Labs"

    strings:
        $ = "CreateRemoteThread" fullword nocase
        $ = "CreateThread" fullword nocase
        $ = "CreateToolhelp32Snapshot" fullword nocase
        $ = "LoadLibraryA" fullword nocase
        $ = "NtCreateThreadEx" fullword nocase
        $ = "NtUnmapViewOfSection" fullword nocase
        $ = "OpenProcess" fullword nocase
        $ = "QueueUserAPC" fullword nocase
        $ = "RtlCreateUserThread" fullword nocase
        $ = "RtlMoveMemory" fullword nocase
        $ = "SetThreadContext" fullword nocase
        $ = "SuspendThread" fullword nocase
        $ = "VirtualAlloc" fullword nocase
        $ = "VirtualAllocEx" fullword nocase
        $ = "VirtualProtect" fullword nocase
        $ = "WriteProcessMemory" fullword nocase
        $ = "ZwUnmapViewOfSection" fullword nocase

    condition:
        _VBA_macro and 3 of them
}

rule VBA_Time_Delay_Loops
{
    meta:
        description = "VBA macro utilizes time delay loops; possible impact upon dynamic analysis"
        vti_default_score = 1
        vti_documents_score = 1
        vti_scripts_score = 1
        vti_browser_score = 1
        vti_msi_score = 1
        vti_static_score = 1
        author = "VMRay Labs"

    strings:
        $do_until = /\bDo Until\s+\((Now|Time)(\(\))?\s*>=?\s*\w+\)/ nocase
        $loop_until = /\bDo\s+(\S+)?\s*DoEvents\s+(\S+)?\s*Loop Until\s+\w+\s*>?=\s*\w+/ nocase

    condition:
        _VBA_macro
        and (
            any of them
        )
}

rule VBA_Time_Delay_with_HighVal
{
    meta:
        description = "VBA macro utilizes long time delay functions; possible analysis counter-measure"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $sleep_func = /[^.']Sleep\s*\(?\s*\d{5,}(\s*\))?/ nocase
        $sleep_method = /\b(System\.Threading\.Thread\.|wscript\.)Sleep\s*(\(\s*)?\d{5,}\)?/ nocase

        $wait_dateadd = /\bApplication\.Wait\s+DateAdd\s*\(\s*(\"s\",\s*\d{2,}|\"[hm]\",\s*\d),\s*Now\s*(\(\))?\s*\)/ nocase
        $wait_timeserial_h = /\bApplication\.Wait\s+(\(\s*)?(Time\s*\+\s*)?TimeSerial\(\s*Hour\(Now(\(\))?\)\s*\+\s*\d+,\s*Minute\(Now(\(\))?\),\s*Second\(Now(\(\))?\)\)/ nocase
        $wait_timeserial_m = /\bApplication\.Wait\s+(\(\s*)?(Time\s*\+\s*)?TimeSerial\(\s*Hour\(Now(\(\))?\),\s*Minute\(Now(\(\))?\)\s*\+\s*\d+,\s*Second\(Now(\(\))?\)\)/ nocase
        $wait_timeserial_s = /\bApplication\.Wait\s+(\(\s*)?(Time\s*\+\s*)?TimeSerial\(\s*Hour\(Now(\(\))?\),\s*Minute\(Now(\(\))?\),\s*Second\(Now(\(\))?\)\s*\+\s*(0\d{2,}|[1-9][0-9]+)\s*\)/ nocase
        $wait_timestr = /\bApplication.Wait\s+(\(\s*)?\"(([1-9]|0[1-9]|[1-9][0-9]):\d{2}:\d{1,2}|\d{2}:(0[1-9]|[1-9][0-9]):\d{1,2}|\d{1,2}:\d{2}:[1-9][0-9])\"\)?/ nocase
        $wait_timeval = /\bApplication\.Wait\s+(\(\s*)?Now(\(\))?\s*\+\s*TimeValue\(\s*\"(([1-9]|0[1-9]|[1-9][0-9]):\d{2}:\d{1,2}|\d{2}:(0[1-9]|[1-9][0-9]):\d{1,2}|\d{1,2}:\d{2}:[1-9][0-9])\"\)\)?/ nocase

    condition:
        _VBA_macro
        and (
            any of them
        )
}

rule VBA_Time_Delay_with_Obfuscation
{
    meta:
        description = "VBA macro utilizes obfuscated time delay functions; possible analysis counter-measure"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $time_serial = /\bTimeSerial\(\s*[a-z]+,\s*[a-z]+,\s*\d+\s*\)/ nocase
        $time_value = /\bTimeValue\(\s*[a-z]+\(.+\)\)/ nocase

    condition:
        _VBA_macro
        and (
            any of them
        )
}

rule WScriptShell_Case_Anomaly
{
    meta:
        description = "Obfuscated wscript.shell commands"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "Florian Roth"
        source = "https://github.com/Neo23x0/signature-base"
        original_name = "WScriptShell_Case_Anomaly"
        license = "GPL-3.0 (https://opensource.org/licenses/GPL-3.0)"

    strings:
        $s1 = "WScript.Shell\").Run" nocase ascii wide
        $sn1 = "WScript.Shell\").Run" ascii wide
        $sn2 = "wscript.shell\").run" ascii wide
        $sn3 = "WSCRIPT.SHELL\").RUN" ascii wide
        $sn4 = "Wscript.Shell\").Run" ascii wide
        $sn5 = "WScript.Shell\").Run" ascii wide
        $sn6 = "WScript.shell\").Run" ascii wide

    condition:
        _VBA_macro and $s1 and not 1 of ($sn*)
}

rule ReflectiveLoader
{
    meta:
        description = "Reflective loader usage"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        source = "https://github.com/Neo23x0/signature-base"
        original_name = "ReflectiveLoader"
        license = "GPL-3.0 (https://opensource.org/licenses/GPL-3.0)"

    strings:
        $s1 = "ReflectiveLoader" fullword ascii
        $s2 = "ReflectivLoader.dll" fullword ascii
        $s3 = "?ReflectiveLoader@@" ascii

    condition:
        uint16(0) == 0x5a4d and (1 of them or pe.exports("ReflectiveLoader") or pe.exports("_ReflectiveLoader@4") or pe.exports("?ReflectiveLoader@@YGKPAX@Z"))
}

rule Reflective_DLL_Loader_Aug17_1
{
    meta:
        description = "Reflective DLL loader"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "Florian Roth"
        source = "https://github.com/Neo23x0/signature-base"
        original_name = "Reflective_DLL_Loader_Aug17_1"
        license = "GPL-3.0 (https://opensource.org/licenses/GPL-3.0)"

    strings:
        $x1 = "\\Release\\reflective_dll.pdb" ascii
        $x2 = "reflective_dll.x64.dll" fullword ascii
        $s3 = "DLL Injection" fullword ascii
        $s4 = "?ReflectiveLoader@@YA_KPEAX@Z" fullword ascii

    condition:
        (uint16(0) == 0x5a4d and filesize < 300KB and (pe.imphash() == "4bf489ae7d1e6575f5bb81ae4d10862f" or pe.exports("?ReflectiveLoader@@YA_KPEAX@Z") or (1 of ($x*) or 2 of them))) or (2 of them)
}

rule DLL_Injector_Lynx
{
    meta:
        description = "Lynx DLL injector"
        threat_names = "Lynx"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "Florian Roth"
        source = "https://github.com/Neo23x0/signature-base"
        original_name = "DLL_Injector_Lynx"
        license = "GPL-3.0 (https://opensource.org/licenses/GPL-3.0)"

    strings:
        $x1 = " -p <TARGET PROCESS NAME> | -u <DLL PAYLOAD> [--obfuscate]" fullword wide
        $x2 = "You've selected to inject into process: %s" fullword wide
        $x3 = "Lynx DLL Injector" fullword wide
        $x4 = "Reflective DLL Injector" fullword wide
        $x5 = "Failed write payload: %lu" fullword wide
        $x6 = "Failed to start payload: %lu" fullword wide
        $x7 = "Injecting payload..." fullword wide

    condition:
        (uint16(0) == 0x5a4d and filesize < 800KB and 1 of them) or (3 of them)
}

rule Reflective_DLL_Loader_Aug17_2
{
    meta:
        description = "Reflective DLL loader"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "Florian Roth"
        source = "https://github.com/Neo23x0/signature-base"
        original_name = "Reflective_DLL_Loader_Aug17_2"
        license = "GPL-3.0 (https://opensource.org/licenses/GPL-3.0)"

    strings:
        $x1 = "\\ReflectiveDLLInjection-master\\" ascii
        $s2 = "reflective_dll.dll" fullword ascii
        $s3 = "DLL injection" fullword ascii
        $s4 = "_ReflectiveLoader@4" fullword ascii
        $s5 = "Reflective Dll Injection" fullword ascii

    condition:
        (uint16(0) == 0x5a4d and filesize < 200KB and (pe.imphash() == "59867122bcc8c959ad307ac2dd08af79" or pe.exports("_ReflectiveLoader@4") or 2 of them)) or (3 of them)
}

rule Reflective_DLL_Loader_Aug17_3
{
    meta:
        description = "Reflective DLL loader"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "Florian Roth"
        source = "https://github.com/Neo23x0/signature-base"
        original_name = "Reflective_DLL_Loader_Aug17_3"
        license = "GPL-3.0 (https://opensource.org/licenses/GPL-3.0)"

    strings:
        $s1 = "\\Release\\inject.pdb" fullword ascii
        $s2 = "!!! Failed to gather information on system processes! " fullword ascii
        $s3 = "reflective_dll.dll" fullword ascii
        $s4 = "[-] %s. Error=%d" fullword ascii
        $s5 = "\\Start Menu\\Programs\\reflective_dll.dll" ascii

    condition:
        (uint16(0) == 0x5a4d and filesize < 300KB and (pe.imphash() == "26ba48d3e3b964f75ff148b6679b42ec" or 2 of them)) or (3 of them)
}

rule Reflective_DLL_Loader_Aug17_4
{
    meta:
        description = "Reflective DLL loader"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "Florian Roth"
        source = "https://github.com/Neo23x0/signature-base"
        original_name = "Reflective_DLL_Loader_Aug17_4"
        license = "GPL-3.0 (https://opensource.org/licenses/GPL-3.0)"

    strings:
        $x1 = "<H1>&nbsp;>> >> >> Keylogger Installed - %s %s << << <<</H1>" fullword ascii
        $s1 = "<H3> ----- Running Process ----- </H3>" fullword ascii
        $s2 = "<H2>Operating system: %s<H2>" fullword ascii
        $s3 = "<H2>System32 dir:  %s</H2>" fullword ascii

    condition:
        (uint16(0) == 0x5a4d and filesize < 2000KB and 2 of them)
}

rule SneakyToooYou_Black_Loader
{
    meta:
        description = "Sneaky.toooyou loader"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $s1 = "[Sneaky.toooyou]::"
        $s2 = "[Microsoft.VisualBasic.Interaction]::CallByname([AppDomain]::CurrentDomain"
        $s3 = "[Microsoft.VisualBasic.CallType]::Method"
		$s4 = "[System.Text.Encoding]::UTF8.GetString([System.Convert]::ToInt32($_,2))"

    condition:
		vmray_target_class == "file"
		and all of them
}

rule Shellcode_Find_kernel32_PEB
{
    meta:
        description = "x86 code to find kernel32.dll using the PEB; possible shellcode"
        ref = "https://resources.infosecinstitute.com/pattern-based-approach-memory-shellcodes-detection/"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        // using InInitializationOrder list
        $s1 = {
            64 (a1 | 8b ??) 30 00 00 00  // mov <reg>, fs:[0x30]
            8b ?? 0c                     // mov <reg>, [<reg>+0xc]
            8b ?? 1c                     // mov <reg>, [<reg>+0x1c]
            [1-2]                        // mov <reg>, [<reg>] / lods
            8b ?? 08                     // mov <reg>, [<reg>+0x8]
        }
        // using InMemoryOrder list
        $s2 = {
            64 (a1 | 8b ??) 30 00 00 00  // mov <reg>, fs:[0x30]
            8b ?? 0c                     // mov <reg>, [<reg>+0xc]
            8b ?? 14                     // mov <reg>, [<reg>+0x14]
            [1-2]                        // mov <reg>, [<reg>] / lods
            [1-2]                        // mov <reg>, [<reg>] / lods
            8b ?? 10                     // mov <reg>, [<reg>+0x10]
        }

    condition:
        mime_type != "application/x-dosexec" and any of them
}

rule Shellcode_Find_kernel32_SEH
{
    meta:
        description = "x86 code to find kernel32.dll using SEH; possible shellcode"
        ref = "https://resources.infosecinstitute.com/pattern-based-approach-memory-shellcodes-detection/"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $s1 = {
            8B ?? 04        // mov <reg>, [<reg>+0x4]
            4?              // dec <reg>
            66 31 ??        // xor <reg>, <reg>
            66 81 3? 4D 5A  // cmp WORD PTR [<reg>], 0x5a4d
        }

    condition:
        mime_type != "application/x-dosexec" and $s1
}

rule Shellcode_Find_kernel32_TEB
{
    meta:
        description = "x86 code to find kernel32.dll using the TEB; possible shellcode"
        ref = "https://resources.infosecinstitute.com/pattern-based-approach-memory-shellcodes-detection/"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $s1 = {
            8b ?? e4        // mov <reg>, [reg-0x1c]
            4?              // dec <reg>
            66 31 ??        // xor <reg>, <reg>
            66 81 3? 4D 5A  // cmp WORD PTR [<reg>], 0x5a4d
        }

    condition:
        mime_type != "application/x-dosexec" and any of them
}

rule Shellcode_GetPC_fstenv
{
    meta:
        description = "x86 GetPC code using fstenv; possible shellcode"
        ref = "https://resources.infosecinstitute.com/pattern-based-approach-memory-shellcodes-detection/"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $s = {
            d9 74 24 f4                // fnstenv [esp-0xc]
            (58|59|5a|5b|5c|5d|5e|5f)  // pop <reg>
        }

    condition:
        mime_type != "application/x-dosexec" and $s
}

rule Shellcode_API_hashing
{
    meta:
        description = "x86 API hashing code often found in shellcode"
        ref = "https://www.fireeye.com/blog/threat-research/2012/11/precalculated-string-hashes-reverse-engineering-shellcode.html"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "Didier Stevens (https://DidierStevens.com)"
        source = "https://github.com/DidierStevens/DidierStevensSuite"
        original_name = "maldoc_API_hashing"
        license = "public domain"

    strings:
        $s = {
            ac        // lods al, BYTE PTR [esi]
            84 C0     // test al, al
            74 07     // je <end>
            C1 CF ??  // ror edi, <shift>
            01 C7     // add edi, eax
            EB F4     // jmp <loop>
        }

    condition:
        mime_type != "application/x-dosexec" and $s
}

rule Shellcode_NOP_sled_percent_enc {
    meta:
        description = "Percent-encoded NOP sled; possible shellcode"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $s1 = "%90%90%90%90%90%90%90%90"
        $s2 = "%u9090%u9090%u9090%u9090"

    condition:
        any of them
}

rule Shellcode_Loader
{
    meta:
        description = "Loader shellcode used by multiple malware families"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "VMRay Labs"

    strings:
        // E8 00 00 00 00       call    $+5
        // 5B                   pop     ebx
        // 81 EB 94 0E 78 00    sub     ebx, 780E94h
        // 81 EB 7D 4D EC 00    sub     ebx, 0EC4D7Dh
        $code01 = {E8 00 00 00 00 5B 81 EB ?? ?? ?? 00}

        // 56                   push    esi
        // 6A 06                push    6
        // 68 88 4E 0D 00       push    0D4E88h
        // 8D BB A5 09 78 00    lea     edi, [ebx+7809A5h]
        // FF D7                call    edi
        $code02 = {56 6A 06 68 88 4E 0D 00 8D BB ?? ?? ?? 00 FF D7}

        // 8A 10                mov     dl, [eax]
        // 80 CA 60             or      dl, 60h
        // 01 D3                add     ebx, edx
        // D1 E3                shl     ebx, 1
        // 03 45 10             add     eax, [ebp+arg_8]
        // 8A 08                mov     cl, [eax]
        // 84 C9                test    cl, cl
        // E0 EE                loopne  loc_1F018A
        // 31 C0                xor     eax, eax
        // 8B 4D 0C             mov     ecx, [ebp+arg_4]
        // 39 CB                cmp     ebx, ecx
        // 74 01                jz      short loc_1F01A6
        // 40                   inc     eax
        $code03 = {8A 10 80 CA 60 01 D3 D1 E3 03 45 10 8A 08 84 C9 E0 EE 31 C0 8B 4D 0C 39 CB 74 01 40}

    condition:
        vmray_target_class == "memory_dump"
        and filesize < 6KB
        and all of them
}

rule BenignYaraWhitelistSample
{
    meta:
        description = "Whitelisted, benign sample"
        vti_default_score = -1
        vti_documents_score = -1
        vti_scripts_score = -1
        vti_browser_score = -1
        vti_msi_score = -1
        vti_static_score = -1
        author = "VMRay Labs"

    strings:
        $s1 = "This is an internal test file:" fullword
        $s2 = "b41a526b8ea36d2b6a7ee1fcd988e7624b7c20bf385bbcd64d60fe5fa65bd76548cf96d60" fullword

    condition:
        mime_type == "text/plain"
        and filesize == 253
        and $s1 at 0
        and #s2 == 3
}

rule JS_Unicode_escaped_bytes
{
    meta:
        description = "JavaScript contains many unicode-escaped bytes; possible obfuscation"
        vti_default_score = 1
        vti_documents_score = 1
        vti_scripts_score = 1
        vti_browser_score = 1
        vti_msi_score = 1
        vti_static_score = 1
        author = "VMRay Labs"

    strings:
        $s1 = /(\\u[0-9a-fA-F]{4}){10}/
        $s2 = /(\\u[0-9a-fA-F]{4}){3}/

    condition:
        mime_type == "text/javascript"
        and ($s1 or #s2 > 5)
}

rule JS_Alphanum_text_blob
{
    meta:
        description = "JavaScript contains large alpha-numeric text blob; possible obfuscation"
        vti_default_score = 2
        vti_documents_score = 2
        vti_scripts_score = 2
        vti_browser_score = 1
        vti_msi_score = 2
        vti_static_score = 2
        author = "VMRay Labs"

    strings:
        $s1 = /='[a-z0-9]{200,}'/ nocase
        $s2 = /="[a-z0-9]{200,}"/ nocase

    condition:
        mime_type == "text/javascript" and any of them
}

rule Inter_Kit
{
    meta:
        description = "Inter Skimmer Kit"
        threat_name = "Inter Skimmer"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        author = "VMRay Labs"

    strings:
        $s_reg_1 = "/^(?:4[0-9]{12}(?:[0-9]{3})?)$/"
        $s_reg_2 = "/^(?:5[1-5][0-9]{14})$/"
        $s_reg_3 = "/^(?:3[47][0-9]{13})$/"
        $s_reg_4 = "/^(?:6(?:011|5[0-9][0-9])[0-9]{12})$/"
        $s_reg_5 = "/[^0-9-\\s]+/"
        $s_reg_6 = "/\\D/g"
        $s_flag = "\\x53\\x58\\x4e\\x57\\x59\\x57\\x78\\x70\\x5a\\x41\\x3d\\x3d" // isValid

    condition:
        vmray_target_class == "web_request"
        and all of them
}


rule CredentialStealer_Generic_Backdoor
{
    meta:
        description = "Strings that indicate password store access; possible credential stealer"
        classifications = "Spyware"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "Florian Roth"
        source = "https://github.com/Neo23x0/signature-base"
        original_name = "CredentialStealer_Generic_Backdoor"
        license = "GPL-3.0 (https://opensource.org/licenses/GPL-3.0)"

    strings:
        $s1 = "GetOperaLoginData" fullword ascii
        $s2 = "GetInternetExplorerCredentialsPasswords" fullword ascii
        $s3 = "%s\\Opera Software\\Opera Stable\\Login Data" fullword ascii
        $s4 = "select *  from moz_logins" fullword ascii
        $s5 = "%s\\Google\\Chrome\\User Data\\Default\\Login Data" fullword ascii
        $s6 = "Host.dll.Windows" fullword ascii
        $s7 = "GetInternetExplorerVaultPasswords" fullword ascii
        $s8 = "GetWindowsLiveMessengerPasswords" fullword ascii
        $s9 = "%s\\Chromium\\User Data\\Default\\Login Data" fullword ascii
        $s10 = "%s\\Opera\\Opera\\profile\\wand.dat" fullword ascii

    condition:
        (uint16(0) == 0x5a4d and 4 of them)
}

rule APLib_Compressed_PE {
    meta:
        description = "PE file compressed by APLib"
        vti_default_score = 2
        vti_documents_score = 4
        vti_scripts_score = 2
        vti_browser_score = 4
        vti_msi_score = 2
        vti_static_score = 2
        author = "VMRay Labs"

    strings:
       
        $ = {
            4D 38 5A 90 38 03 66 02 04 09 71 FF 81 B8 C2 91
            01 40 C2 15 C6 F8 09 1C 0E 1F BA F8 00 B4 09 CD
            21 B8 01 4C C0 0A 54 68 69 73 20 0E 70 72 6F 67
            67 61 6D 87 63 47 6E 1F 4F 74 E7 62 65 AF CF 75
            5F 98 69 06 44 4F 7E 53 03 6D 6F 64 65
            }
    condition:
        any of them
}

rule CryptOne_Packer
{
    meta:
        description = "Shellcode used by the CryptOne packer"
        threat_names = "CryptOne"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        // push  rbp
        // mov   ebp, esp
        // push  rcx
        // mov   dword [var_4h], 0
        // jmp   0x16
        // mov   eax, dword [var_4h]
        // add   eax, 4
        // mov   dword [var_4h], eax
        // mov   ecx, dword [var_4h]
        // cmp   ecx, dword [arg_ch]
        // jae   0x4c
        // mov   edx, dword [arg_8h]
        // add   edx, dword [var_4h]
        // mov   eax, dword [rdx]
        // add   eax, dword [var_4h]
        // mov   ecx, dword [arg_8h]
        // add   ecx, dword [var_4h]
        // mov   dword [rcx], eax
        // mov   edx, dword [var_4h]
        // add   edx, 0x3e9 ; 1001
        // mov   eax, dword [arg_8h]
        // add   eax, dword [var_4h]
        // xor   edx, dword [rax]
        // mov   ecx, dword [arg_8h]
        // add   ecx, dword [var_4h]
        // mov   dword [rcx], edx
        // jmp   0xd
        // mov   esp, ebp
        // pop   rbp
        // ret
        $decrypt_payload = { 55 8b ec 51 c7 45 fc 00 00 00 00 eb 09 8b 45 fc 83 c0 04 89 45 fc 8b 4d fc 3b 4d 0c 73 2e 8b 55 08 03 55 fc 8b 02 03 45 fc 8b 4d 08 03 4d fc 89 01 8b 55 fc 81 c2 ?? ?? 00 00 8b 45 08 03 45 fc 33 10 8b 4d 08 03 4d fc 89 11 eb c1 8b e5 5d c3 }

    condition:
        (
            vmray_target_class == "memory_dump"
        )
        and $decrypt_payload
}

rule Dotnet_ConnPacker
{
    meta:
        description = ".NET packer"
        threat_names = "Goobin"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $c1 = {18 8D ?? ?? ?? ?? 25 16 72 ?? ?? ?? ?? A2 25 17 72 ?? ?? ?? ?? A2 0? 16 0? 2B ?? 0? 0D 16 (13 ?? | ??) 2B ?? 09 (11 ?? | ??) 9A 13 ?? 11 ?? 28 ?? ?? ?? ?? 16 FE ??}
        $c2 = "https://www.google.com/" wide
        $c3 = "https://www.bing.com/" wide

    condition:
        (vmray_target_class == "memory_dump" and uint16(0) == 0x5A4D)
        and all of them
}

rule Packer_RedNet
{
    meta:
        description = "Packer used to distribute malware"
        threat_names = "RedNet"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $c01 = {
            19 19 19 19 19 19 19 19 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A
            1A 1A 1A 1A 1A 1A 1A 1A 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B
            1B 1B 1B 1B 1B 1B 1B 1C 00 00 00 00 01 00 00 00
        }
        $c02 = {
            23 00           // and     eax, [eax]
            2B 00           // sub     eax, [eax]
            33 00           // xor     eax, [eax]
            3B 00           // cmp     eax, [eax]
            43              // inc     ebx
        }
        $c03 = {
            C6 44 24 34 78  // mov     [esp+48h+var_14], 78h ; 'x'
            C6 44 24 35 61  // mov     [esp+48h+var_13], 61h ; 'a'
            88 54 24 3A     // mov     [esp+48h+var_E], dl
            C6 44 24 3E 66  // mov     [esp+48h+var_A], 66h ; 'f'
            C6 44 24 41 33  // mov     [esp+48h+var_7], 33h ; '3'
            C6 44 24 43 ??  // mov     [esp+48h+var_5], 53h ; 'S'
            C6 44 24 44 74  // mov     [esp+48h+var_4], 74h ; 't'
            88 54 24 46     // mov     [esp+48h+var_2], dl
            C6 44 24 40 ??  // mov     [esp+48h+var_8], 51h ; 'Q'
            C6 44 24 39 62  // mov     [esp+48h+var_F], 62h ; 'b'
            C7 44 24 10 01  // mov     [esp+48h+var_38], 1
            00 00 00
        }

        $s01 = "mscoree.dll" wide
        $s02 = "tBpBlBhBdB`B\\BXBTBPBLBHBDB@B<B8B4B0B,B(B$B B" wide ascii
        $s03 = "NoRemove"
        $s04 = "ForceRemove"

    condition:
        // Memory dump or file with PE header
        (
            vmray_target_class == "memory_dump"
            or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
        )
        and all of them
}

rule XBinder
{
    meta:
        description = "Packer used to distribute malware"
        threat_names = "XBinder"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s00 = "META-INF/MANIFEST.MF"
        $s01 = "AES.class"
        $classes = ".classPK"
        $res = /resources\/\w+PK/

    condition:
        vmray_target_class == "file"
        and uint32(0) == 0x04034B50
        and all of ($s*)
        and #classes == 2
        and #res == 3
}

private rule _Powershell
{
    meta:
        description = "Rule used to restrict evaluation of powershell analysis rules"
        author = "VMRay Labs"

    condition:
        vmray_target_class == "file"
        and (
            mime_type == "text/x-powershell"
            or mime_type == "application/x-vba-macros"
            or mime_type == "text/javascript"
            or mime_type == "text/plain"
        )
        and filesize < 10MB
}

rule PowerShell_Download_Commands
{
    meta:
        description = "PowerShell may attempt to download external content; possible dropper"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "VMRay Labs"

    strings:
        $cmdlet1 = "Invoke-WebRequest" fullword nocase
        $cmdlet2 = "Start-BitsTransfer" fullword nocase

        $arg1 = "-Uri" fullword nocase
        $arg2 = "-OutFile" fullword nocase
        $arg3 = "-Source" fullword nocase
        $arg4 = "-Destination" fullword nocase

        $webclient_cmd1 = "Net.WebClient" fullword nocase
        $webclient_cmd2 = "New-Object" fullword nocase
        $webclient_method1 = "DownloadFile" fullword nocase
        $webclient_method2 = "DownloadString" fullword nocase

    condition:
        (analysis_id == "pdf"
        or analysis_id == "office97"
        or analysis_id == "olecf"
        or analysis_id == "ooxml"
        or analysis_id == "rtf")
        and _Powershell
        and ((any of ($cmdlet*) and any of ($arg*)) or (all of ($webclient_cmd*) and any of ($webclient_method*)))
}

rule PowerShell_Execution_Commands
{
    meta:
        description = "PowerShell command execution detected"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "VMRay Labs"

    strings:
        $ps1 = "PowerShell" fullword nocase
        $ps2 = "powershell.exe" fullword nocase

        $ep1 = "-ep bypass" fullword nocase
        $ep2 = "-exec bypass" fullword nocase
        $ep3 = "-executionpolicy bypass" fullword nocase
        $ep4 = "-noprofile" fullword nocase
        $ep5 = "-nop" fullword nocase

        $win1 = "-win hidden" fullword nocase
        $win2 = "-windowsstyle hidden" fullword nocase
        $win3 = "-w hidden" fullword nocase

        $command = "-Command" fullword nocase
        $command_enc1 = "-enc" fullword nocase
        $command_enc2 = "-encodedcommand" fullword nocase
        $command_file1 = "-File" fullword nocase
        $command_file2 = "-PSConsoleFile" fullword nocase
        $command_inv1 = "Invoke-Command" fullword nocase
        $command_inv2 = "-scriptblock" fullword nocase
        $command_exp1 = "Invoke-Expression -command" fullword nocase
        $command_exp2 = "Invoke-Expression $" nocase
        $command_sh1 = "Shell.Application" fullword nocase
        $command_sh2 = "Start-Process" fullword nocase

    condition:
        _Powershell
        and (
            1 of ($ps*) and any of ($ep*) and any of ($win*) and any of ($command*)
        )
}

rule PowerShell_Registry_Commands
{
    meta:
        description = "PowerShell may attempt to read/write system registry"
        vti_default_score = 2
        vti_documents_score = 2
        vti_scripts_score = 2
        vti_browser_score = 2
        vti_msi_score = 2
        vti_static_score = 2
        author = "VMRay Labs"

    strings:
        $cmdlet1 = "Get-Item" fullword nocase
        $cmdlet2 = "Get-ItemProperty" fullword nocase
        $cmdlet3 = "New-Item" fullword nocase
        $cmdlet4 = "New-ItemProperty" fullword nocase
        $cmdlet5 = "Rename-Item" fullword nocase
        $cmdlet6 = "Rename-ItemProperty" fullword nocase
        $cmdlet7 = "Remove-Item" fullword nocase
        $cmdlet8 = "Remove-ItemProperty" fullword nocase
        $cmdlet9 = "Set-Item" fullword nocase
        $cmdlet10 = "Set-ItemProperty" fullword nocase

        $com1 = "WScript.Shell" fullword nocase
        $com2 = ".RegDelete" fullword nocase
        $com3 = ".RegRead" fullword nocase
        $com4 = ".RegWrite" fullword nocase

        $path1 = /(\"|')HKLM/ fullword nocase
        $path2 = /(\"|')HKCU/ fullword nocase
        $path3 = "Registry::HKEY_CURRENT_USER" fullword nocase
        $path4 = "Registry::HKEY_LOCAL_MACHINE" fullword nocase

    condition:
        _Powershell
        and (mime_type == "text/x-powershell" or mime_type == "application/x-vba-macros")
        and (
            (any of ($cmdlet*) and any of ($path*))
            or (2 of ($com*) and not mime_type == "application/x-vba-macros")
        )
}

rule PowerShell_Case_Anomaly
{
    meta:
        description = "Obfuscated PowerShell hacktools"
        ref = "https://twitter.com/danielhbohannon/status/905096106924761088"
        vti_default_score = 2
        vti_documents_score = 2
        vti_scripts_score = 2
        vti_browser_score = 2
        vti_msi_score = 2
        vti_static_score = 2
        author = "Florian Roth"
        source = "https://github.com/Neo23x0/signature-base"
        original_name = "PowerShell_Case_Anomaly"
        license = "GPL-3.0 (https://opensource.org/licenses/GPL-3.0)"

    strings:
        $s1 = "powershell" fullword nocase ascii wide
        $sr1 = /(powershell|Powershell|PowerShell|POWERSHELL|powerShell)/ fullword ascii wide
        $sn1 = "powershell" fullword ascii wide
        $sn2 = "Powershell" fullword ascii wide
        $sn3 = "PowerShell" fullword ascii wide
        $sn4 = "POWERSHELL" fullword ascii wide
        $sn5 = "powerShell" fullword ascii wide
        $a1 = "wershell -e " nocase wide ascii
        $an1 = "wershell -e " wide ascii
        $an2 = "werShell -e " wide ascii
        $k1 = "-noprofile" fullword nocase ascii wide
        $kn1 = "-noprofile" ascii wide
        $kn2 = "-NoProfile" ascii wide
        $kn3 = "-noProfile" ascii wide
        $kn4 = "-NOPROFILE" ascii wide
        $kn5 = "-Noprofile" ascii wide

    condition:
        _Powershell and ((#s1 < 3 and #sr1 > 0 and #s1 > #sr1) or ($s1 and not 1 of ($sn*)) or ($a1 and not 1 of ($an*)) or ($k1 and not 1 of ($kn*)))
}

rule PowerShell_Invoke_PSImage
{
    meta:
        description = "Command to execute PowerShell from string"
        ref = "https://github.com/peewpw/Invoke-PSImage"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "Florian Roth"
        source = "https://github.com/Neo23x0/signature-base"
        original_name = "Invoke_PSImage"
        license = "GPL-3.0 (https://opensource.org/licenses/GPL-3.0)"

    strings:
        $ = "IEX([System.Text.Encoding]::ASCII.GetString(" ascii wide
        $ = "System.Drawing.Bitmap((a Net.WebClient).OpenRead(" ascii wide
        $ = { 89 50 4E 47 0D 0A 1A 0A 00 00 00 0D 49 48 44 52
            00 00 04 E4 00 00 03 A0 08 06 00 00 00 9D AF A9
            E8 00 00 00 09 70 48 59 73 00 00 19 D6 00 00 19
            D6 01 18 D1 CA ED 00 00 00 07 74 49 4D 45 07 E1
            0C 0F 13 1E 36 89 C4 28 BF 00 00 00 07 74 45 58
            74 41 75 74 68 6F 72 00 A9 AE CC 48 00 00 00 0C
            74 45 58 74 44 65 73 63 72 69 70 74 69 6F 6E 00
            13 09 21 23 00 00 00 0A 74 45 58 74 43 6F 70 79
            72 69 67 68 74 00 AC 0F CC 3A 00 00 00 0E 74 45
            58 74 43 72 65 61 74 69 6F 6E 20 74 69 6D 65 00
            35 F7 0F }

    condition:
        _Powershell and 1 of them
}

rule RyanBorlandProtectorAttributes
{
    meta:
        description = "Ryan Borland Protector Attributes"
        vti_default_score = 1
        vti_documents_score = 1
        vti_scripts_score = 1
        vti_browser_score = 1
        vti_msi_score = 1
        vti_static_score = 1
        author = "VMRay Labs"

    strings:
        $s1 = "%Ryan-_-Borland_Protector Cracked v1.0" fullword

    condition:
        (
            vmray_target_class == "memory_dump"
            or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
        )
        and all of them
}

rule BabelObfuscatorAttributes
{
    meta:
        description = "Babel Obfuscator Attributes"
        vti_default_score = 1
        vti_documents_score = 1
        vti_scripts_score = 1
        vti_browser_score = 1
        vti_msi_score = 1
        vti_static_score = 1
        author = "VMRay Labs"

    strings:
        $s1 = "BabelObfuscatorAttribute" fullword

    condition:
        (
            vmray_target_class == "memory_dump"
            or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
        )
        and all of them
}

rule YanoObfuscatorAttributes
{
    meta:
        description = "Yano Obfuscator Attributes"
        vti_default_score = 1
        vti_documents_score = 1
        vti_scripts_score = 1
        vti_browser_score = 1
        vti_msi_score = 1
        vti_static_score = 1
        author = "VMRay Labs"

    strings:
        $s1 = "YanoAttribute" fullword

    condition:
        (
            vmray_target_class == "memory_dump"
            or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
        )
        and all of them
}

rule DNGuardObfuscatorAttributes
{
    meta:
        description = "DNGuard HVM Attributes"
        vti_default_score = 1
        vti_documents_score = 1
        vti_scripts_score = 1
        vti_browser_score = 1
        vti_msi_score = 1
        vti_static_score = 1
        author = "VMRay Labs"

    strings:
        $s1 = "ZYXDNGuarder" fullword

    condition:
        (
            vmray_target_class == "memory_dump"
            or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
        )
        and all of them
}

rule MaxtoCodeObfuscatorAttributes
{
    meta:
        description = "MaxtoCode Obfuscator Attributes"
        vti_default_score = 1
        vti_documents_score = 1
        vti_scripts_score = 1
        vti_browser_score = 1
        vti_msi_score = 1
        vti_static_score = 1
        author = "VMRay Labs"

    strings:
        $s1 = "MaxtoCodeAttribute" fullword

    condition:
        (
            vmray_target_class == "memory_dump"
            or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
        )
        and all of them
}

rule NETReactorObfuscatorAttributes
{
    meta:
        description = ".NET Reactor Obfuscator Attributes"
        vti_default_score = 1
        vti_documents_score = 1
        vti_scripts_score = 1
        vti_browser_score = 1
        vti_msi_score = 1
        vti_static_score = 1
        author = "VMRay Labs"

    strings:
        $s1 = ".NETReactorAttribute" fullword

    condition:
        (
            vmray_target_class == "memory_dump"
            or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
        )
        and all of them
}

rule MultipleNetObfuscatorAttributes
{
    meta:
        description = ".NET file contains multiple obfuscator attributes"
        vti_default_score = 2
        vti_documents_score = 2
        vti_scripts_score = 2
        vti_browser_score = 2
        vti_msi_score = 2
        vti_static_score = 2
        author = "VMRay Labs"

    strings:
        $s1 = "%Ryan-_-Borland_Protector Cracked v1.0" fullword
        $s2 = "BabelObfuscatorAttribute" fullword
        $s3 = "YanoAttribute" fullword
        $s4 = "ZYXDNGuarder" fullword //DNGuard HVM
        $s5 = ".NETReactorAttribute" fullword
        $s6 = "MaxtoCodeAttribute" fullword

    condition:
    (
        vmray_target_class == "memory_dump"
        or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
    )
    and 2 of them
}import "math"
import "pe"

rule rc4_init
{
    meta:
        description = "RC4 algorithm's key scheduling and PRGA"
        vti_default_score = 1
        vti_documents_score = 1
        vti_scripts_score = 1
        vti_browser_score = 1
        vti_msi_score = 1
        vti_static_score = 1
        author = "VMRay Labs"

    strings:
        $rc4_init = { 48 89 5C 24 08 48 89 6C 24 10 48 89 74 24 18 57 48 81 EC 00 01 00 00 45 33 C9 48 8D 04 24 48 8B F1 48 8D 1C 24 45 8B D9 48 2B F0 48 8B EA 4C 8B D1 BF 00 01 00 00 41 8B C3 44 88 1C 1E 99 41 FF C3 41 F7 F8 48 63 C2 8A 0C 28 88 0B 48 FF C3 44 3B DF 7C E2 4C 8D 04 24 49 8B D2 4D 2B C2 41 0F B6 04 10 44 0F B6 1A 44 03 C8 45 03 CB 41 81 E1 FF 00 00 80 7D 0D 41 FF C9 41 81 C9 00 FF FF FF 41 FF C1 49 63 C9 42 8A 04 11 88 02 48 FF C2 46 88 1C 11 48 83 EF 01 75 C5 4C 8D 9C 24 00 01 00 00 49 8B 5B 10 49 8B 6B 18 49 8B 73 20 49 8B E3 5F C3 }

    condition:
        (
            vmray_target_class == "memory_dump"
            or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
        )
        and all of them
}

rule rc4_decrypt
{
    meta:
        description = "RC4 algorithm's decryption routine"
        vti_default_score = 1
        vti_documents_score = 1
        vti_scripts_score = 1
        vti_browser_score = 1
        vti_msi_score = 1
        vti_static_score = 1
        author = "VMRay Labs"

    strings:
        $rc4_decrypt = { 48 89 5C 24 08 48 89 7C 24 10 45 33 D2 4D 63 C0 48 8B FA 4C 8B D9 45 8B CA 4D 85 C0 7E 5E 41 8D 42 01 25 FF 00 00 80 7D 09 FF C8 0D 00 FF FF FF FF C0 4C 63 D0 43 0F B6 1C 1A 44 03 CB 41 81 E1 FF 00 00 80 7D 0D 41 FF C9 41 81 C9 00 FF FF FF 41 FF C1 49 63 C9 42 8A 04 19 43 88 04 1A 42 88 1C 19 43 0F B6 0C 1A 48 03 CB 0F B6 C1 42 8A 0C 18 30 0F 48 FF C7 49 83 E8 01 75 A2 48 8B 5C 24 08 48 8B 7C 24 10 C3 }

    condition:
        (
            vmray_target_class == "memory_dump"
            or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
        )
        and all of them
}

rule SandboxProductID
{
    meta:
        description = "Sandbox detection via leaked Windows product IDs"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "VMRay Labs"

    strings:
        $ = "76487-640-1457236-23837" wide ascii
        $ = "76487-337-8429955-22614" wide ascii
        $ = "76487-644-3177037-23510" wide ascii
        $ = "76497-640-6308873-23835" wide ascii
        $ = "55274-640-2673064-23950" wide ascii
        $ = "76487-640-8834005-23195" wide ascii
        $ = "76487-640-0716662-23535" wide ascii
        $ = "76487-644-8648466-23106" wide ascii
        $ = "00426-293-8170032-85146" wide ascii
        $ = "76487-341-5883812-22420" wide ascii
        $ = "76487-OEM-0027453-63796" wide ascii

    condition:
        (
            vmray_target_class == "memory_dump"
            or vmray_target_class == "function_strings"
            or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
        )
        and any of them
}

rule VMDeviceStrings
{
    meta:
        description = "VM detection via known device names"
        vti_default_score = 3
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $s1 = "qemu"
        $s2 = "virtio"
        $s3 = "vmware"
        $s4 = "vbox"
        $s5 = "xen"
        $s6 = "vid_80ee"
        $s7 = "ven_1b36"

    condition:
        vmray_target_class == "function_strings"
        and 5 of them
}

rule VMProcessNames
{
    meta:
        description = "VM detection via known process names"
        vti_default_score = 3
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        // Qemu
        $s1  = "qemu-ga.exe"
        $s2  = "qga.exe"
        // Qemu SPICE
        $s3  = "vdagent.exe"
        $s4  = "vdservice.exe"
        // Any.Run
        $s5  = "windanr.exe"
        // VirtualBox
        $s6  = "vboxservice.exe"
        $s7  = "vboxtray.exe"
        $s8  = "vboxdisp.dll"
        $s9  = "vboxhook.dll"
        $s10 = "vboxmrxnp.dll"
        $s11 = "vboxogl.dll"
        $s12 = "vboxoglarrayspu.dll"
        $s13 = "vboxoglcrutil.dll"
        $s14 = "vboxoglerrorspu.dll"
        $s15 = "vboxoglfeedbackspu.dll"
        $s16 = "vboxoglpackspu.dll"
        $s17 = "vboxoglpassthroughspu.dll"
        $s18 = "vboxservice.exe"
        // VMWare
        $s19 = "vmtoolsd.exe"
        $s20 = "vmwaretray.exe"
        $s21 = "vmwareuser.exe"
        $s22 = "VGAuthService.exe"
        $s23 = "vmacthlp.exe"
        // Parallels
        $s24 = "prl_tools.exe"
        $s25 = "prl_cc.exe"
        // VirtualPC
        $s26 = "vmsrvc.exe"
        $s27 = "vmusrvc.exe"

    condition:
        vmray_target_class == "function_strings"
        and 6 of them
}

rule VMModuleNames
{
    meta:
        description = "VM detection via known module names"
        vti_default_score = 3
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $s1  = "vmci.s"
        $s2  = "vmusbm"
        $s3  = "vmmous"
        $s4  = "vm3dmp"
        $s5  = "vmrawd"
        $s6  = "vmmemc"
        $s7  = "vboxgu"
        $s8  = "vboxsf"
        $s9  = "vboxmo"
        $s10 = "vboxvi"
        $s11 = "vboxdi"
        $s12 = "vioser"

        // KVM
        $s13 = "balloon"
        $s14 = "netkvm"
        $s15 = "pvpanic"
        $s16 = "viofs"
        $s17 = "viogpudo"
        $s18 = "vioinput"
        $s19 = "viorng"
        $s20 = "vioscsi"
        $s21 = "viostor"
        // HyperV
        $s22 = "vmbushid"
        $s23 = "vmbus"
        $s24 = "vmgid"
        $s25 = "indirectkmd"
        $s26 = "hypervideo"
        $s27 = "hyperkbd"
        // VMWare
        $s28 = "vmnet"
        $s29 = "vmmouse"
        $s30 = "vmusb"
        $s31 = "vmhgfs"
        $s32 = "vmmemctl"
        $s33 = "vmx86"
        $s34 = "vmrawdsk"
        $s35 = "vmusbmouse"
        $s36 = "vmkdb"
        $s37 = "vmnetuserif"
        $s38 = "vmnetadapter"
        // VBox
        $s39 = "vboxmouse"
        $s40 = "vboxguest"
        $s41 = "vboxvideo"

    condition:
        vmray_target_class == "function_strings"
        and 8 of them
}

rule Killbot_Protection
{
    meta:
        description = "Killbot bot detection service"
        vti_default_score = 1
        vti_documents_score = 1
        vti_scripts_score = 1
        vti_browser_score = 1
        vti_msi_score = 1
        vti_static_score = 1
        author = "VMRay Labs"

    strings:
        $s1 = "const killbot"
        $s2 = "apiKey"
        $s3 = "botRedirection"
        $s4 = "https://files.killbot.org"

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule Killbot_ApiKeys
{
    meta:
        description = "Known API keys for Killbot bot detection service associated with phishing"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "VMRay Labs"

    strings:
        $apikey1 = "Dg7AqDjKVT4jK6Zb0gz4UKLrUdvUtJRyfAviuotJ87unr"
        $apikey2 = "L7705gv6P6_VCxO2jmpfeS3nYOUy7NpueU_FGta1KOYdI"
        $apikey3 = "R6-jhR55NbbqWE3wQZEt7UVfLD7PQDmuVsQ8CHD5KbKD4"
        $apikey4 = "bMIU64-sFcycv4MRtmkaJVwXzSpoGeDnSGOU_4LpXC91t"
        $apikey5 = "eFVAipb_2tkWqxhJ_yRxhOUQi6DkZ1BBCZv7haCrVwQn5"
        $apikey6 = "etewm7WxokrpqKZ9R9P2e_sl-tTLNsQmhO8PG0c2WYURM"
        $apikey7 = "sxwzHH7cyftPyEL2hUIA_Df68AKGd-1TlHtE0avBjSUox"
        $apikey8 = "hWPE33H2kolW8LZeQHVhkpAu2rbM1BdDVGutZE0AHXPRM"

    condition:
        Killbot_Protection
        and any of them
}


rule PosRegex
{   
    meta:
        description = "Usage of regex used by POS malware"
        vti_default_score = 2
        vti_documents_score = 2
        vti_scripts_score = 2
        vti_browser_score = 2
        vti_msi_score = 2
        author = "VMRay Labs"

    strings:
        $s_alina1 = "1[0-2])[0-9]"
        $s_alina2 = "([0-9]{13,19}=(1[2-9])(0[1-9]|1[0-2])[0-9]{3,50}\\?)"
        $s_alina3 = "((%?[Bb]?)[0-9]{13,19}\\^[A-Za-z\\s]{0,26}/[A-Za-z\\s]{0,26}\\^(1[2-9])(0[1-9]|1[0-2])[0-9\\s]{3,50}\\?)"
        $s_alina4 = "((%?[BbÂ´`]?)[0-9]{13,19}\\^[A-Za-z\\s]{0,26}/[A-Za-z\\s]{0,26}\\^(1[2-9])(0[1-9]|1[0-2])[0-9\\s]{3,50}\\?)"
        $s_decebal1 = "\\d{13,19}-\\d{7}\\w*\\?" wide ascii
        $s_decebal2 = "\\d{13,19}=\\d{7}\\w*\\?" wide ascii
        $s_rdasrv1 = "((b|B)[0-9]{13,19}\\^[A-Za-z\\s]{0,30}\\/[A-Za-z\\s]{0,30}\\^(0[7-9]|1[0-5])((0[1-9])|(1[0-2]))[0-9\\s]{3,50}[0-9]{1})"
        $s_rdasrv2 = "([0-9]{15,16}[D=](0[7-9]|1[0-5])((0[1-9])|(1[0-2]))[0-9]{8,30})"
        $s_vskimmer1 = "[3-9]{1}[0-9]{12,19}[D=\\u0061][0-9]{10,30}"
        $s_glitch1 = ";\\d{13,19}=\\d{7}\\w*\\?" wide ascii
        $s_glitch2 = "(%B)\\d{0,19}\\^[\\w\\s\\/]{2,26}\\^\\d{7}\\w*\\?;\\d{13,19}=\\d{7}\\w*\\?" wide ascii
        $s_generic1 = "(([0-9]{13,19}=)|([a-zA-Z\\s]{3}\\^))(0[7-9]|1[0-5])((0[1-9])|(1[0-2]))"
        $s_generic3 = "((b|B)(([0-9]{13,16})|([0-9]|\\s){13,25})\\^[A-Za-z\\s0-9]{0,30}\\/[A-Za-z\\s0-9]{0,30}\\^(0[7-9]|1[0-5])((0[1-9])|(1[0-2]))([0-9]|\\s){3,50})"
        $s_generic4 = "([0-9]{15,16}(D|=)(0[7-9]|1[0-5])((0[1-9])|(1[0-2]))[0-9]{8,30})"

    condition:
        (
            vmray_target_class == "memory_dump"
            or vmray_target_class == "function_strings"
            or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
        )
        and any of ($s*)
}

rule Phishkit_Anz_uzer
{
    meta:
        description = "Phishing page from Phishkit.Anz_uzer"
        classifications = "Phishing"
        threat_names = "Phishkit.Anz_uzer"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "console.log('uzer empty');"
        $s2 = "console.log('uzer correct');"
        $s3 = "var Username1 = $('#Username1').val();"
        $s4 = "console.log('uzer wrong');"
        $ajax1 = "$.ajax({"
        $ajax2 = "action.php?type=login',"
        $ajax3 = "data : $('#ibLogonForm').serialize(),"
        $ajax4 = "if(parsed_data.status == 'ok'){"
        $ajax5 = "location.href = \"Loading.php\""

    condition:
        vmray_target_class == "web_request"
        and 6 of them
}

rule Phishkit_Baby_Two
{
    meta:
        description = "Phishing page from Phishkit.Baby_Two"
        classifications = "Phishing"
        threat_names = "Phishkit.Baby_Two"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s01 = /<title>(&(#\d{2,3}|period);\.?)+<\/title>/
        $s02 = "<script src=\"./js/MyBabyTwo.js\"></script>"
        $s03 = /<input class=\"\w{2,20}\s\w{2,20} input logon-xs-toggle \" maxlength=\"16\" minlength=\"16\" id=\"cardnutwo\" placeholder=\"\" autocomplete=\"off\" type=\"text\" name=\"cardnutwo\" inputmode=\"numeric\"/
        $s04 = "<form id=\"cardtwo-form\" name=\"cardtwo-form\" method=\"POST\" autocomplete=\"off\" action=\"\">"
        $s05 ="div id=\"fuckyeah\" style=\"display:none;\"" wide ascii
        $s06 = "<input type=\"hidden\" value=\"\" name=\"cardtype\" id=\"cardtype\">"
        $s07 = /<div class=\"\w{2,20}\s\w{2,20} raised segment\" id=\"cardo\" style=\"max-width: \d{2,4}px!important; display:none;\">/
        $s08 = /<input class=\"\w{2,20}\s\w{2,20} input logon-xs-toggle \" id=\"password1\" placeholder=\"\" autocomplete=\"off\" type=\"password\" name=\"password1\" required=\"\" value=\"\"/
        $s09 = /<div class=\"\w{2,20} align-label-input floating-label__container pswd1\">/
        $s10 = "document.write(new Date().getFullYear())"

    condition:
        vmray_target_class == "web_request"
        and 8 of them
}

rule SocialFish_Instagram
{
    meta:
        description = "Instagram phishing page from Phishkit.SocialFish"
        classifications = "Phishing"
        threat_names = "Phishkit.SocialFish"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "this is the file to which the IP address will be written; name it your way."
        $s2 = "check ip from share internet"
        $s3 = "to check if ip is pass from proxy"
        $s4 = "$victim = \"Victim Public IP: \";"
        $s5 = "fwrite($fp, $victim);"
        $s6 = "fwrite($fp, $ipaddress);"
        $s7 = "<!-- saved from url=(0026)https://www.instagram.com/ -->"

    condition:
        vmray_target_class == "web_request"
        and 5 of them
}

rule SocialFish_Cryptocoinsniper
{
    meta:
        description = "Cryptocoinsniper phishing page from Phishkit.SocialFish"
        classifications = "Phishing"
        threat_names = "Phishkit.SocialFish"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "<!-- Mirrored from www.cryptocoinsniper.co/members/members/login by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 25 Jun 2018 15:28:35 GMT -->"
        $s2 = "<!-- Added by HTTrack --><meta http-equiv=\"content-type\" content=\"text/html;charset=UTF-8\" /><!-- /Added by HTTrack -->"
        $s3 = "name=\"site_login\" action=\"login.php\""

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule SocialFish_Gmail
{
    meta:
        description = "Gmail phishing page from Phishkit.SocialFish"
        classifications = "Phishing"
        threat_names = "Phishkit.SocialFish"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "<!-- I AM A FAKE PAGE | DO NOT TRUST ME -->"
        $s2 = "<form novalidate=\"\" id=\"gaia_loginform\" action=\"login.php\" method=\"post\">"
        $s3 = "<title>Gmail: Email from Google</title>"

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule SocialFish_Microsoft
{
    meta:
        description = "Microsoft phishing page from Phishkit.SocialFish"
        classifications = "Phishing"
        threat_names = "Phishkit.SocialFish"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "method=\"post\" target=\"_top\" autocomplete=\"off\" data-bind=\"autoSubmit: forceSubmit, attr: { action: postUrl }\" action=\"login.php\""
        $s2 = "href=\"./index_files/Converged_v21033.css\""
        $s3 = "src=\"./index_files/ellipsis_grey.svg\""
        $s4 = "<title>Sign in to your Microsoft account</title>"

        $orig = "<!-- Copyright (C) Microsoft Corporation. All rights reserved. -->"

    condition:
        vmray_target_class == "web_request"
        and all of ($s*)
        and not $orig
}

rule SocialFish_Netflix
{
    meta:
        description = "Netflix phishing page from Phishkit.SocialFish"
        classifications = "Phishing"
        threat_names = "Phishkit.SocialFish"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "<form class=\"login-form\" action=\"login.php\" method=\"post\""
        $s2 = "src=\"Netflix_files/none_002.js\""
        $s3 = "src=\"Netflix_files/FB-f-Logo__blue_57.png\""
        $s4 = "window.netflix = window.netflix"

        $orig = "<form method=\"post\" class=\"login-form\" action=\"\">"

    condition:
        vmray_target_class == "web_request"
        and all of ($s*)
        and not $orig
}

rule SocialFish_Origin
{
    meta:
        description = "EA Origin phishing page from Phishkit.SocialFish"
        classifications = "Phishing"
        threat_names = "Phishkit.SocialFish"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "src=\"SIGN%20IN_files/www-widgetapi.js\""
        $s2 = "<form id=\"login-with-email-form\" action=\"login.php\" method=\"post\">"
        $s3 = "<p class=\"otkinput-errormsg otkc otkform-group-help\">The phone number you entered does not belong to any account. Try"
        $s4 = "'contextPath' : \"https://signin.ea.com:443/p\","

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule SocialFish_Pinterest
{
    meta:
        description = "Pinterest phishing page from Phishkit.SocialFish"
        classifications = "Phishing"
        threat_names = "Phishkit.SocialFish"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "src=\"login_files/warm.js\""
        $s2 = "<script src=\"login_files/130492214192672\" async=\"\">"
        $s3 = "<form method=\"POST\" action=login.php novalidate=\"\">"
        $s4 = "<title>Pinterest</title>"

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule SocialFish_Protonmail
{
    meta:
        description = "Protonmail phishing page from Phishkit.SocialFish"
        classifications = "Phishing"
        threat_names = "Phishkit.SocialFish"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "<script src=\"index_files/vendorLazy.js\" async=\"\">"
        $s2 = "<form method=\"post\" id=\"pm_login\" name=\"loginForm\""
        $s3 = "autocomplete=\"on\" ng-submit=\"enterLoginPassword($event)\" action=\"login.php\" ng-show=\"twoFactor === 0\">"
        $s4 = "<title>Login | ProtonMail</title>"

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule SocialFish_Wordpress
{
    meta:
        description = "Wordpress phishing page from Phishkit.SocialFish"
        classifications = "Phishing"
        threat_names = "Phishkit.SocialFish"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "<form name=\"loginform\" id=\"loginform\" action=\"login.php\" method=\"post\">"
        $s2 = "<input name=\"redirect_to\" value=\"http://localhost/wp-admin/\" type=\"hidden\">"
        $s3 = "<link rel=\"stylesheet\" href=\"index_files/load-styles.css\""
        $s4 = "<title>Log In â WordPress</title>"

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule SocialFish_Yahoo
{
    meta:
        description = "Yahoo phishing page from Phishkit.SocialFish"
        classifications = "Phishing"
        threat_names = "Phishkit.SocialFish"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "<title>Yahoo -&nbsp;login</title>"
        $s2 = "src=\"yahoo_files/boot.js\""
        $s3 = "src=\"yahoo_files/g-r-min.js\""
        $s4 = "<form id=\"login-username-form\" form action=\"login.php\" method=\"post\" class=\"username-challenge \">"

        $orig = "<form id=\"login-username-form\" method=\"post\" class=\"pure-form\">"

    condition:
        vmray_target_class == "web_request"
        and all of ($s*)
        and not $orig
}

rule Phishkit_WappGroup
{
    meta:
        description = "Phishing page from Phishkit.WappGroup"
        classifications = "Phishing"
        threat_names = "Phishkit.WappGroup"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $wapp_invite1 = "WhatsApp Group Invite" // also present in original
        $wapp_invite2 = "title=\"Follow this link to join: " // also present in original
        $wapp_join1 = "<form action=\"check.php\" method=\"post\">"
        $wapp_join2 = "onclick=\"location.href='login.php';\""

        $s1 = "=\"img/v4/icon.png\""
        $s2 = "NOTE: CHANGING COPYRIGHT DOES NOT MAKE YOU AS A CODER."

        $orig = "href=\"https://chat.whatsapp.com/invite/\""

    condition:
        vmray_target_class == "web_request"
        and 1 of ($wapp_invite*)
        and 1 of ($wapp_join*)
        and 1 of ($s*)
        and not $orig
}

rule Phishkit_PostenCarder
{
    meta:
        description = "Phishing page from Phishkit.PostenCarder"
        classifications = "Phishing"
        threat_names = "Phishkit.PostenCarder"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $common1 = "=\"app.isRememberMeEnabled()\""
        $common2 = "id=\"Visa_securityCodeTitle\""
        $common3 = "id=\"MasterCard_cardNoTitle\""
        $common4 = "name=\"frm\" method=\"post\" action=\"submit.php\""
        $common5 = "Posten uten 3DSecure"
        $common6 = "Brukersted:"
        $common7 = "style=\"font-weight:bold;\">Ordrenummer:"
        $common8 = "type=\"button\" onclick=\"return IsEmpty();"
        $common9 = "<title>Posten.no</title>"
        $common10 = "src=\"./css/TopLedge_New.png\""

        $kit1 = "<label for=\"code\">Engangskode fra SMS:</label>"
        $kit2 = "href=\"./mastercard.php\""
        $kit3 = "href=\"./visa.php\""

    condition:
        vmray_target_class == "web_request"
        and 4 of ($common*)
        or (2 of ($common*) and 1 of ($kit*))
}

rule Phishkit_Pulse_Animated
{
    meta:
        description = "Phishing page from Phishkit.Pulse_Animated"
        classifications = "Phishing"
        threat_names = "Phishkit.Pulse_Animated"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s01 = "window.open(url_part+$(this).data('nn'), '_blank', 'location=yes,height=570,width=520,scrollbars=yes,status=yes');"
        $s02 = "window.location.replace(get_extra_data(2));"
        $s03 = "var url_part = get_extra_data(1);"

        $c01 = "wow pulse animated animated"

        $reg01 = /data-nn=\"(GMA|OUT|AOL|YAHOO|OFFICE|OTHER)\.html(\#|\?username\=|\?yid\=)/

    condition:
        vmray_target_class == "web_request"
        and (
            2 of ($s*)
            or $reg01
            or (1 of ($s*) and #c01 > 5)
        )
}

rule Phishkit_IFSix
{
    meta:
        description = "Phishing page from Phishkit.IFSix"
        classifications = "Phishing"
        threat_names = "Phishkit.IFSix"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $spar01 = "onclick=\"return IF6.hideCountdownLayer(this);\""
        $spar02 = "class=\"if6_teaserarea section"
        $spar03 = "class=\"if6_outer if6_footer"
        $spar04 = "if6_outer if6_contactstage hide500 hide900"
        $spar05 = /\/internetfiliale\.min\.\w{20,40}\.(css|js)/
        $spar06 = "onclick=\"return IF.checkFirstSubmit();\""
        $spar07 = "<body class=\"if6 templ-bankingpage"

        $neg01 = "$('body').removeClass('search_visible').toggleClass('login_visible');"

        $p01 = "<form action=\"index.php\" name=\"\" method=\"post\" accept-charset=\"UTF-8\" autocomplete=\"off\" novalidate=\"novalidate\" class=\"abschlussweiche\">"
        $p02 = "<form action=\"error.php\""
        $p03 = "doGTranslate('en|en');"
        $p04 = "<label for=\"password\" class=\"\">PIN<em>*</em>:</label>"
        $p05 = "&#83;&#112;&#97;&#114;&#107;&#97;&#115;&#115;&#101;"
        $p06 = "&#79;&#110;&#108;&#105;&#110;&#101;&#45;&#66;&#97;&#110;&#107;&#105;&#110;&#103;"
        $p07 = "href=\"deka-investment.php\""
        $p08 = "href=\"credit-card.php\""
        $p09 = "<div class=\"home\"><a href=\"#\" title=\"Sparkasse"
        $p10 = "<!--login-online-banking-->"
        $p11 = "<form action=\"sendinfo.php\""

    condition:
        vmray_target_class == "web_request"
        and ( 2 of ($spar*) and 2 of ($p*) and 0 of ($neg*))
}

rule Phishkit_FbLocked
{
    meta:
        description = "Phishing page from Phishkit.FbLocked"
        classifications = "Phishing"
        threat_names = "Phishkit.FbLocked"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "Facebook - Log In or Sign Up"
        $s2 = "action=\"wrk2.php\" method=\"post\""
        $s3 = "type=\"submit\" action=\"wrk.php"
        $s4 = "data-savepage-src=\"/common/referer_frame.php\""
        $s5 = "<meta name=\"savepage-url\" content="
        $s6 = "<meta name=\"savepage-date\" content="
        $s7 = "DON'T GET LOCKED OUT! Verify your primary email address"

    condition:
        vmray_target_class == "web_request"
        and 4 of them
}

rule BlackhatCoder_iPKO
{
    meta:
        description = "iPKO phishing page from Phishkit.BlackhatCoder"
        classifications = "Phishing"
        threat_names = "Phishkit.BlackhatCoder"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "$.post(\"../../sms/redirect.php\", { \"id\": id })"
        $s2 = "bank: 'ipko',"
        $s3 = "url: '/payment/',"
        $s4 = /<!-- saved from url=\([0-9]{4}\)https:\/\/www\.ipko\.pl/
        $s5 = "src=\"./login_files/saved_resource(1)\""
        $s6 = "src=\"./index_files/saved_resource(1)\""
        $s7 = "src=\"./banking_files/saved_resource(1)\""
        $s8 = "src=\"./password_files/saved_resource(1)\""
        $s9 = "action=\"/payment/\" method=\"post\""
        $s10 = "iPKO â bankowoÅÄ elektroniczna PKO Banku Polskiego"

    condition:
        vmray_target_class == "web_request"
        and 3 of them
}

rule BlackhatCoder_Alior
{
    meta:
        description = "Alior phishing page from Phishkit.BlackhatCoder"
        classifications = "Phishing"
        threat_names = "Phishkit.BlackhatCoder"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "<!-- saved from url=(0035)https://system.aliorbank.pl/sign-in -->"
        $s2 = "src=\"./index_files/alior-logo.svg\""
        $s3 = "src=\"./index_files/Alior.js\""
        $s4 = "<alert key=\"main\"><!----></alert>"

    condition:
        vmray_target_class == "web_request"
        and 3 of them
}

rule BlackhatCoder_ING
{
    meta:
        description = "ING phishing page from Phishkit.BlackhatCoder"
        classifications = "Phishing"
        threat_names = "Phishkit.BlackhatCoder"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "Moje ING | ING Bank ÅlÄski"
        $s2 = "method=POST action=\"/payment/\""
        $s3 = "<!-- saved from url=(0043)https://login.ingbank.pl/"
        $s4 = "href=\"./index_files/template(1).css\""
        $s5 = "href=\"./pwd_files/template(1).css\""
        $s6 = "ProszÄ wprowadziÄ kod autoryzacyjny, ktÃ³ry otrzymaÅeÅ z&nbsp;banku"
        $conf1 = "Page saved with SingleFile"
        $conf2 = "<form action=\"sendsms.php\" action=\"post\""

    condition:
        vmray_target_class == "web_request"
        and 3 of them
}

rule BlackhatCoder_mBank
{
    meta:
        description = "mBank phishing page from Phishkit.BlackhatCoder"
        classifications = "Phishing"
        threat_names = "Phishkit.BlackhatCoder"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "mBank - serwis transakcyjny mTransfer"
        $s2 = "Serwis mTransfer"
        $s3 = "<!-- saved from url="
        $s4 = "src=\"./confirm_files/mbank-logo"
        $s5 = "src=\"./banking_files/mbank-logo"
        $s6 = "src=\"./login_files/signin(1)\""
        $s7 = "<form id=\"sendsms\" action=\"/payment/\""
        $s8 = ">fcwndnzzud</div>"

    condition:
        vmray_target_class == "web_request"
        and 3 of them
}

rule BlackhatCoder_Millenium
{
    meta:
        description = "Millenium phishing page from Phishkit.BlackhatCoder"
        classifications = "Phishing"
        threat_names = "Phishkit.BlackhatCoder"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "<title>Logowanie - Bank Millennium</title>"
        $s2 = "src=\"img/Logo@1x.png\""
        $s3 = "TwÃ³j MilleKod</span>"
        $s4 = "<form action=\"/payment/\" id=\"LoginForm\""
        $s5 = "ÐÐ±ÑÐ°Ð±Ð°ÑÑÐ²Ð°ÐµÐ¼ Ð¾ÑÐ¿ÑÐ°Ð²ÐºÑ"
        $s6 = "MillekodOrAlias.text(login.val());"
        $s7 = "= $('[name=\"pesel\"]');"

    condition:
        vmray_target_class == "web_request"
        and 3 of them
}

rule BlackhatCoder_Pekao
{
    meta:
        description = "Pekao phishing page from Phishkit.BlackhatCoder"
        classifications = "Phishing"
        threat_names = "Phishkit.BlackhatCoder"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = /<!-- saved from url=\([0-9]{4}\)https:\/\/www\.platnosci\.pekao24\.pl/
        $s2 = "Bank Pekao SA - Pekao24"
        $s3 = "<form action=\"/payment/\" method=\"POST\""
        $s4 = "href=\"./login_files/vendor"
        $s5 = "href=\"./banking_files/vendor"
        $s6 = "href=\"./sms_files/vendor"

    condition:
        vmray_target_class == "web_request"
        and 3 of them
}

rule BlackhatCoder_Santander
{
    meta:
        description = "Santander phishing page from Phishkit.BlackhatCoder"
        classifications = "Phishing"
        threat_names = "Phishkit.BlackhatCoder"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "<!-- saved from url="
        $s2 = "<title>Logowanie do Przelew24</title>"
        $s3 = "src=\"./index_files/f(2).txt\""
        $s4 = "src=\"./index_files/blik-logo.svg\""

    condition:
        vmray_target_class == "web_request"
        and 3 of them
}

rule PageBase64Encoded
{
    meta:
        description = "Page loads base64 encoded content from URL"
        classifications = ""
        threat_names = ""
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $s01 = "<script type=\"text/javascript\" src=\"b64.js\"></script>"
        $s02 = "<script type=\"text/javascript\" src=\"api.js\"></script>"
        $s03 = "var hash = window.location.hash.slice(1);"
        $s04 = "var data = b64.decode(hash);"
        $s05 = "document.write(decodeURIComponent(data));"

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule Phishkit_DemoBox
{
    meta:
        description = "Phishing page from Phishkit.DemoBox"
        classifications = "Phishing"
        threat_names = "Phishkit.DemoBox"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s01 = "Roundcube Dev Team"
        $s02 = "link.href = 'https://www.google.com/s2/favicons?domain=' + total1 + '';"
        $s03 = "function ChangeFavicon()"
        $s04 = "/api/render?output=screenshot&viewport.isLandscape=true&viewport.width="

        $s05 = "const demo809 = urlParams809.get('domain');"
        $s06 = "const imageBox99 = urlParams99.get('domain');"
        $s07 = "const image = urlParams.get('domain')"

        $s08 = "document.getElementById('imageBox99').src = "
        $s09 = "document.getElementById('ipaddy').value = data.ip;"
        $s10 = "ipify"
        $s11 = "rcmail.gui_object('loginform', 'login-form');"
        $s12 = "rcmail.gui_object('message', 'messagestack');"
        $s13 = "var email = $('#username').val();"
        $s14 = "var password = $('#password').val();"
        $s15 = "document.getElementById(\"demo\").innerHTML = 5 + 6;"
        $s16 = "document.getElementById(\"demo\").innerHTML = demo;"
        $s17 = "document.getElementById('aggents').value = aggents"

        $b01 = "Roundcube Dev Team" base64
        $b02 = "link.href = 'https://www.google.com/s2/favicons?domain=' + total1 + '';" base64
        $b03 = "function ChangeFavicon()" base64
        $b04 = "/api/render?output=screenshot&viewport.isLandscape=true&viewport.width=" base64

        $b05 = "const demo809 = urlParams809.get('domain');" base64
        $b06 = "const imageBox99 = urlParams99.get('domain');" base64
        $b07 = "const image = urlParams.get('domain')" base64

        $b08 = "document.getElementById('imageBox99').src = " base64
        $b09 = "document.getElementById('ipaddy').value = data.ip;" base64
        $b10 = "ipify" base64
        $b11 = "rcmail.gui_object('loginform', 'login-form');" base64
        $b12 = "rcmail.gui_object('message', 'messagestack');" base64
        $b13 = "var email = $('#username').val();" base64
        $b14 = "var password = $('#password').val();" base64
        $b15 = "document.getElementById(\"demo\").innerHTML = 5 + 6;" base64
        $b16 = "document.getElementById(\"demo\").innerHTML = demo;" base64
        $b17 = "document.getElementById('aggents').value = aggents" base64

    condition:
        vmray_target_class == "web_request"
        and (12 of ($s*) or 12 of ($b*))
}

rule Phishkit_Bill_tj
{
    meta:
        description = "Phishing page from Phishkit.Bill_tj"
        classifications = "Phishing"
        threat_names = "Phishkit.Bill_tj"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $smbc01 = "Sumitomo Mitsui Card"
        $smbc02 = "Vpassã­ã°ã¤ã³"
        $smbc03 = "smbc-card.com"

        $first01 = "action=\"../smbc_coll.php"
        $first02 = "src=\"./smbcupdatebill_files/"
        $first03 = "smbcupdatebill_files/logo_smbc"

        $second01 = "action=\"../smbc_coll.php"
        $second02 = "smbcupdatebill2_files/logo_smbc"
        $second03 = "<script src=\"../js/luhmCheck.js\"></script>"
        $second04 = "<script src=\"../js/bankcard.js\"></script>"
        $second05 = "$(\"input[name='card1']\").blur(function()"
        $second06 = "if(!luhmCheck($(\"input[name='card1']\").val())"
        $second07 = "ããªããå¥åããéè¡ã«ã¼ãã®çªå·ãééã£ã¦ãã¾ã"
        $second08 = "/ccchecker.php?ccValue="

    condition:
        vmray_target_class == "web_request"
        and all of ($smbc*)
        and (all of ($first*) or all of ($second*))
}

rule Phishkit_Colcore
{
    meta:
        description = "Phishing page from Phishkit.Colcore"
        classifications = "Phishing"
        threat_names = "Phishkit.Colcore"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $smbc01 = "Sumitomo Mitsui Card"
        $smbc02 = "Vpassã­ã°ã¤ã³"
        $smbc03 = "smbc-card.com"

        $s01 = "action=\"../app/core.php\" method=\"post\""
        $s02 = "value=\"ã­ã°ã¤ã³\""
        $s03 = "name=\"icol1\" placeholder=\"IDãå¥åãã¦ãã ãã\""
        $s04 = "name=\"icol2\" placeholder=\"ãã¹ã¯ã¼ããå¥åãã¦ãã ãã\""
        $s05 = "var CryptoJS=CryptoJS"
        $s06 = "indexOf(\"/memx/multicard_login/LoginUpdate_index.html\")"
        $s07 = "<!-- LINE Tag Base Code -->"
        $s08 = "!-- Do Not Modify -->"

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule Phishkit_VPArt
{
    meta:
        description = "Phishing page from Phishkit.VPArt"
        classifications = "Phishing"
        threat_names = "Phishkit.VPArt"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $smbc01 = "&nbsp;Sumitomo&nbsp;Mitsui&nbsp;Card&nbsp;Co.,&nbsp;Ltd."
        $smbc02 = "Vpassã­ã°ã¤ã³"
        $smbc03 = "smbc-card.com"

        $s01 = "<meta name=\"google-play-app\" content=\"app-id=com.smbc_card.vpass\">"
        $s02 = "<!-- <head>åJS -->"
        $s03 = "<img src=\"https://www.smbc-card.com/responsive/img/logo_smbc_01.jpg\""
        $s04 = "<img src=\"https://www.smbc-card.com/responsive/img/logo_smbcgroup.jpg\""
        $s05 = "<img src=\"https://www.smbc-card.com/static/responsive/img/smbcline.png\""
        $s06 = "<form action=\"doSaveVpass.php\" name=\"bemarhwo\" id=\"bemarhwo\" method=\"post\">"
        $s07 = "doSaveVpass.php"
        $s08 = "name=\"usr\" placeholder=\"IDãå¥åãã¦ãã ãã\""
        $s09 = "name=\"psw\" placeholder=\"ãã¹ã¯ã¼ããå¥åãã¦ãã ãã\""
        $s10 = "<!-- ã·éç¨ãã·ã¹ãã æå ±ã¨ãªã¢ Don't move start -->"

    condition:
        vmray_target_class == "web_request"
        and all of ($smbc*) and 8 of ($s*)
}

rule Phishkit_FBVer
{
    meta:
        description = "Phishing page from Phishkit.FBVer"
        classifications = "Phishing"
        threat_names = "Phishkit.FBVer"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $form1 = "<form action=\"MK1.php\""
        $form2 = "<form action=\"MK2.php\""
        $form3 = "<form action=\"Re1.php\" method=\"POST\">"
        $form4 = "<form action=\"facebook-verification.php\" method=\"POST\">"
        $form5 = "<form action=\"res.php\""
        $form6 = "<form action=\"otw1.php\""
        $form7 = "<form action=\"rek.php\""

        $s1 = "function Form1_Validator(theForm)"
        $s2 = "if (isset($_SERVER[\"HTTP_CF_CONNECTING_IP\"])) {"
        $s3 = "$this->httpGet(\"https://killbot.org/api/v1/blocker?ip=\".$ip.\"&apikey=\".$this->apikey.\"&ua=\".urlencode($_SERVER['HTTP_USER_AGENT']).\"&url=\".urldecode($_SERVER['REQUEST_URI']));"
        $s4 = "<meta property=\"og:title\" content=\"Facebook Verification\"/>"
        $s5 = "<meta name=\"description\" content=\"Verification Page Support Live\" />"
        $s6 = "<title>Facebook Login</title>"

        $fav1 = "https://i.ibb.co/TwyKTPG/logo.png"
        $fav2 = "https://static.xx.fbcdn.net/rsrc.php/yD/r/d4ZIVX-5C-b.ico"
        $fav3 = "https://cdn2.iconfinder.com/data/icons/social-media-icon-set-6/94/facebook-512.png"

    condition:
        vmray_target_class == "web_request"
        and 1 of ($form*)
        and 2 of ($s*)
        and 1 of ($fav*)
}

private rule MakoiLima_Common
{
    strings:
        $s1 = "id=\"browser\">"
        $s2 = "id=\"ip_address\">"
        $s3 = "id=\"hostname\">"
        $s4 = "id=\"pais\">"
        $s5 = "id=\"ciudad\">"
        $s6 = "id=\"region\">"
        $s7 = "id=\"code_p\">"
        $s8 = "id=\"code_p_area\">"
        $s9 = "id=\"sis_ope\">"
        $s10 = "id=\"dispositivo\">"
        $s11 = "id=\"id_sistema\">"
        $s12 = "id=\"iddapp\">"
        $s13 = "id=\"cant_input\">"

        $s14 = "sistema:$(\"#id_sistema\").val(),"
        $s15 = "browser:$.trim($(\"#browser\").val()),"
        $s16 = "ip_address:$.trim($(\"#ip_address\").val()),"
        $s17 = "dispositivo:$.trim($(\"#dispositivo\").val()),"

    condition:
        vmray_target_class == "web_request"
        and 6 of them
}

rule MakoiLima_iCloud
{
    meta:
        description = "iCloud phishing page from Phishkit.MakoiLima"
        classifications = "Phishing"
        threat_names = "Phishkit.MakoiLima"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "document.oncontextmenu = function(){return false;}"
        $s2 = ".ocult{display: none !important;}"
        $s3 = "onkeyup=\"opc_felcha();\""
        $s4 = "onblur=\"act_flecha()\""
        $s5 = "onkeyup=\"vis_flec()\""
        $s6 = "onclick=\"close_x()\""
        $s7 = "{($checked)}=\"isRememberMeChecked\""
        $s8 = "/imagen/spinner2.gif"
        $s9 = "($inserted)=\"focus()\""
        $s10 = "onclick=\"clos()\""
        $s11 = "function miFuncion() {"
        $s12 = "<title>iCloud</title>"
        $s13 = "/imagen/r$__116.png"
        $s14 = "<script>window.history.back();</script>"

    condition:
        vmray_target_class == "web_request"
        and (
            (MakoiLima_Common and 3 of them)
            or 7 of them
        )
}

rule MakoiLima_Facebook
{
    meta:
        description = "Facebook phishing page from Phishkit.MakoiLima"
        classifications = "Phishing"
        threat_names = "Phishkit.MakoiLima"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "top.location.href = \"login/\"+$(\"#iddapp\").val();"
        $s2 = "href=\"img/O2aKM2iSbOw.png\""
        $s3 = "js/pBU_7sCFVI4.js"
        $s4 = "action=\"/login/device-based/validate-pin/?refid=8\""
        $s5 = "/login/device-based/edit/?uid="
        $s6 = "<title>Iniciar sesiÃ³n en Facebook</title>"

    condition:
        vmray_target_class == "web_request"
        and 5 of them
}

rule MakoiLima_Instagram
{
    meta:
        description = "Instagram phishing page from Phishkit.MakoiLima"
        classifications = "Phishing"
        threat_names = "Phishkit.MakoiLima"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "$('#loginForm').on('submit', function (event) {"
        $s2 = "$(\".s3f\").css(\"display\",\"block\");"
        $s3 = "$(\".Yx5HN\").remove();"
        $s4 = "location.href ='https://www.instagram.com/?hl=es';"
        $s5 = "$(\".i24fI\").click(function(){"

    condition:
        vmray_target_class == "web_request"
        and MakoiLima_Common
        and 4 of them
}

rule MakoiLima_Paypal
{
    meta:
        description = "PayPal phishing page from Phishkit.MakoiLima"
        classifications = "Phishing"
        threat_names = "Phishkit.MakoiLima"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "$('.form_submit').on('submit', function (event) {"
        $s2 = "url: host+\"validlog.php\","
        $s3 = "onclick=\"reg();\""
        $s4 = "location.href = 'https://www.paypal.com/pe/signin';"

    condition:
        vmray_target_class == "web_request"
        and MakoiLima_Common
        and all of them
}

rule Phishkit_sD43aB
{
    meta:
        description = "Phishing page from Phishkit.sD43aB"
        classifications = "Phishing"
        threat_names = "Phishkit.sD43aB"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $id = "<div id=\"sD43aB\""
        $s01 = "<meta name=\"robots\" content=\"noimageindex, nofollow, nosnippet, noindex, noarchive, nocache, notranslate, noyaca \">"
        $s02 = "<title>...</title>"
        $s03 = "<title>Slgn ln t0 y0ur Acc0unt</title>"
        $s04 = "full url goes here"
        $s05 = "<div id=\"spinner\" class=\"spinner\" style=\"display:none;\"><div></div><div></div><div></div><div></div></div>"
        $s06 = "<div id=\"tResdD\">"
        $s07 = "var email = window.location.hash.substr(1);"
        $s08 = "document.getElementsByTagName('head')[0].appendChild(link);"
        $s09 = "\"application/x-www-form-urlencoded\"),n.onreadystatechange=function(){4===n.readyState&&(se())};var t=\"user=\"+e+\"&pass=\"+a;n.send(t)}"
        $s10 = "$.post(url, {user:a,pass:b}, function()"

    condition:
        vmray_target_class == "web_request"
        and $id and 5 of ($s*)
}

rule Phishkit_Voicemail_div
{
    meta:
        description = "Phishing page from Phishkit.Voicemail_div"
        classifications = "Phishing"
        threat_names = "Phishkit.Voicemail_div"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "$(\"#div2\").animate({ left: 0, opacity: \"hide\" }, 0);"
        $s2 = "-- ////////////////////////div1 end/////////////////////// -->"
        $s3 = ">abc@abc.com</span>"
        $s4 = "Expand Your<br> Microsoft</span><br><br>"
        $s5 = "$(\"#load-text\").html(\"Fax Recovered\");"
        $s6 = "<title>Outlook | Login</title>"
        $s7 = "if (!base64regex.test("
        $s8 = "/////////////url"
        $s9 = ">to continue Outlook</span><br>"
        
    condition:
        vmray_target_class == "web_request"
        and 5 of them
}

private rule Phishkit_Xbalti_Signin
{
    strings:
        $s1 = "<title dir=\"ltr\">Amazon"
        $s2 = "<form name=\"signineml\" method=\"post\" id=\"signineml\""
        $s3 = "#zwimel {"
        $s4 = "{\"AUI_158613\":\"T1\",\"AUI_PCI_RISK_BANNER_210084\":\"C\"}"
        $s5 = "name=\"appActionToken\" value=\"tFcFShIeaDFWxVOmmb6ZEj2BOv0toj3D\">"
        $s6 = "<div id=\"zwimel\" class=\"zwimel\""

    condition:
        vmray_target_class == "web_request"
        and 4 of them
}

private rule Phishkit_Xbalti_JS
{
    strings:
        $x = "XBALTI"
        $s1 = "$(\"form[name='signineml']\")"
        $s2 = "$(\"#zwimel\").show();"
        $s3 = "send_vbv.php\", $(\"#formvbv\")"
        $s4 = "passadmin: \"Enter Your Fucking Password\""
        $s5 = "(\"href\", \"../homepage/success.php?Congratulations\")"
        $s6 = "(\"href\", \"../homepage/Card.php?Update_Your_Card\")"

    condition:
        vmray_target_class == "web_request"
        and 5 of them
}

private rule Phishkit_Xbalti_Update
{
    strings:
        $s1 = "<form name=\"billingform\" id=\"billingform\" method=\"POST\""
        $s2 = "<form name=\"formcard\" id=\"formcard\" method=\"POST\""
        $s3 = "id=\"zwimel\" class=\"zwimel\""
        $s4 = "//ä½¿ç¨maskæ¹æ³æ£æµä¿®æ¹æ ¼å¼"
        $s5 = "$('input[name=\"phonenumber\"]').mask('+0000000000000');"
        $s6 = "$('input[name=\"dob\"]').mask('00/00/0000');"
        $s7 = "$('input[name=\"exdate\"]').mask('00/0000');"
        $s8 = "<title dir=\"ltr\">ããªãã®ã¢ã«ã¦ã³ã</title>"
        $s9 = "<title dir=\"ltr\">Your Account</title>"
        $s10 = "id=\"cvv\" name=\"cvc\""

    condition:
        vmray_target_class == "web_request"
        and 5 of them
}

rule Phishkit_Xbalti
{
    meta:
        description = "Phishing page from Phishkit.Xbalti"
        classifications = "Phishing"
        threat_names = "Phishkit.Xbalti"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    condition:
        vmray_target_class == "web_request"
        and (
            Phishkit_Xbalti_Signin
            or Phishkit_Xbalti_JS
            or Phishkit_Xbalti_Update
        )
}

rule Phishkit_Kuzuluy_PayPal
{
    meta:
        description = "Phishing page from Phishkit.Kuzuluy"
        classifications = "Phishing"
        threat_names = "Phishkit.Kuzuluy"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $redirect01 = "location:./Reference/Ref-ID-"
        $redirect02 = "<META HTTP-EQUIV='refresh' content='0; URL="
        $redirect03 = ".php?country.x="

        $main01 = "document.write(unescape("
        $main02 = "HTML Encryption provided by Free SEO Tools from Pingler"
        $main03 = "profileRememberedEmail"
        $main04 = "backToInputEmailLink"
        $main05 = "login_emaildiv"
        $main06 = "login_passworddiv"
        $main07 = "Relogging"
        $main08 = "unifiedlogin"
        $main09 = "Spassword"
        $main10 = "createAccount"
        $main11 = "loginSignUpSeparator"
        $main12 = "checkingInfo"
        $main13 = "CheckLoginAndSend.php"
        $main14 = /cmd(%3D|=)_Restore_Startcount(%26|&)_Acess_Tooken/
        $main15 = "makeid"
        $main16 = "<title>ProsÃ­m Äakajte</title>"

        $idcheck01 = "card_002"
        $idcheck02 = "logout1"
        $idcheck03 = "#myModal"
        $idcheck04 = "secondaryMobile"
        $idcheck05 = "addCreditOrDebit"
        $idcheck06 = "ccNumber"
        $idcheck07 = "CardExpInput"
        $idcheck08 = "CardcvvID"

        $3dsecure01 = "Authentication.php"
        $3dsecure02 = "id=\"sendOtpsq_hidden\""
        $3dsecure03 = "document.getElementById(\"sendOtpsq"
        $3dsecure04 = "function checkOtpAndSq"
        $3dsecure05 = "/^[a-zA-Z0-9]+$/;"
        $3dsecure06 = "\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\""

    condition:
        vmray_target_class == "web_request" and
        (
            (
                filesize < 200 and
                (
                    $redirect01
                    or ( $redirect02 and $redirect03 in (@redirect02[1]..@redirect02[1]+100))
                )
            )
            or 10 of ($main*)
            or all of ($idcheck*)
            or all of ($3dsecure*)
        )
}

rule Phishkit_TwentyNine
{
    meta:
        description = "Phishing page from Phishkit.TwentyNine"
        classifications = "Phishing"
        threat_names = "Phishkit.TwentyNine"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s1 = "<!-- saved from url=(0042)https://squareup.com/login?lang_code=en-CA -->"
        $s2 = "https://cellyru.github.io/css-july21/login.css"
        $s3 = "<link rel=\"canonical\" href=\"https://squareup.com/login\">"
        $s4 = "('imageBox').src"
        $s5 = "('imageBox99').src "
        $s6 = "function ChangeFavicon()"
        $s7 = "'https://www.google.com/s2/favicons?domain=' + total1 + '';"
        $s8 = "/themes/twenty-nine.php"
        $s9 = "(?!gmail.com)(?!yahoo.com)(?!bugcrowdninja.com)(?!test.com)(?!hotmail.com)(?!yahoo.co.in)(?!aol.com)(?!abc.com)(?!xyz.com)(?!pqr.com)(?!rediffmail.com)(?!live.com)(?!outlook.com)(?!me.com)(?!msn.com)(?!ymail.com)"
        $s10 = "alert('Please Enter Company Email Address');"

    condition:
        vmray_target_class == "web_request"
        and 5 of them
}

rule AjaxPostCredentials
{
    meta:
        description = "Page sends password using Ajax"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $s01 = "$.ajax({"
        $s02 = /type:\s{0,10}('|\")POST('|\")/
        $s03 = /dataType:\s{0,10}('|\")JSON('|\")/
        $s04 = /password('|\")?:\s{0,10}(password|pwd)/
        $s05 = "/^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;"

        $i1 = "indexOf(\"@\");"
        $i2 = "indexOf('.'));"

    condition:
        vmray_target_class == "web_request"
        and @s01 < @s02
        and @s01 < @s03
        and (
            @s01 < @s04
            or @s05 < @s01
            or ($i1 and $i2)
        )
}

rule FieldsetModal
{
    meta:
        description = "Page uses fieldset to show a modal dialog"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $h01 = /(others|office|linkedin|microsoft|salesforce)\.html/
        $h02 = "onClick=\"this.href=this.href.split('?')[0]+'?id='+new Date().getTime()+Math.random()\""

        $s01 = "<title>Sign In</title>"
        $s02 = "<fieldset>"
        $s03 = "</fieldset>"

    condition:
        vmray_target_class == "web_request"
        and all of them
        and @s02 < @s03
        and for all i in (1..#h01) : (@h01[i] > @s02 and @h01[i] < @s03)
        and for all i in (1..#h02) : (@h02[i] > @s02 and @h01[i] < @s03)
}

rule Phishkit_ConForm
{
    meta:
        description = "Phishing page from Phishkit.ConForm"
        classifications = "Phishing"
        threat_names = "Phishkit.ConForm"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $subdomain = "window.SUBDOMAIN_BASE = 'square.site';"
        $f1 = "\"layout\":\"contact-us-1\""
        $f2 = "\"purpose\":\"contact-form\""
        $f3 = "\"type\":\"contact-form\""

        $fe1 = "\"field\":\"email\""
        $fe2 = "\"label\":\"Email"
        $fe3 = "\"placeholder\":\"Email"
        $fe4 = "\"type\":\"email\""
        $fe5 = "\"altLabel\":\"Email\""

        $fp1 = "\"field\":\"shortAnswer\""
        $fp2 = "\"field\":\"name\""
        $fp3 = "\"placeholder\":\"Pas"
        $fp4 = "\"label\":\"Pas"
        $fp5 = "\"placeholder\":\"pas"
        $fp6 = "\"label\":\"pas"

        $fa1 = "\"enableRecaptcha\":"
        $fa2 = "\"notificationEmail\":"
        $fa3 = "Sign in" nocase
        $fa4 = "Sign-in" nocase

    condition:
        vmray_target_class == "web_request"
        and $subdomain
        and @f1 < @f2
        and @f2 < @f3
        and for any of ($fe*): (@ > @f3)
        and for 2 of ($fp*): (@ > @f3)
        and for 2 of ($fa*): (@ > @f3)
}

rule Phishkit_LogPicker
{
    meta:
        description = "Phishing page from Phishkit.LogPicker"
        classifications = "Phishing"
        threat_names = "Phishkit.LogPicker"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s_01 = "PARAM CAME===>>"
        $s_02 = "PARAM CAME 2===>>"
        $s_03 = "PARAM CAME 3===>>"
        $s_04 = "domain ===>"
        $s_05 = "Gaming things"
        $s_06 = "loginFinalSubmit(username);"
        $s_07 = "Invalid password or connection timed out please try again"
        $s_08 = "nopass"
        $s_09 = "window.location.href=\\x27"
        $s_10 = "clearbit.php?d="
        $s_11 = "call.php?u="
        $s_12 = "function loginPickerDisplay"

        $s_msapi_1 = "EstsProperties"
        $s_msapi_2 = "UserTenantBranding"
        $s_msapi_3 = "BannerLogo"
        $s_msapi_4 = "Illustration"
        $s_msapi_5 = "FederationRedirectUrl"

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule Phishkit_Prosecone
{
    meta:
        description = "Phishing page from Phishkit.Prosecone"
        classifications = "Phishing"
        threat_names = "Phishkit.Prosecone"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s01 = "Sharing Link Validation"
        $s02 = "Verify Your Identity"
        $s03 = "You've received a secure file"
        $s04 = "To receive and download"
        $s05 = "enter specific professional email credentials"
        $s06 = "Wrong password! Please try again"
        $s07 = "That account doesn't exist. Enter a different account"
        $s08 = "Why do I have to do this?"
        $s09 = "shared this link with you is sharing with a secure link"

        $c01 = "/* global $ */"
        $c02 = "///new injection///"
        $c03 = "///url ai getting///"
        $c04 = "///url getting ai///"
        $c05 = "window.location.hash.substr(1)"
        $c06 = "window.location.replace(\"https://login.microsoftonline.com/common/login\")"

    condition:
        vmray_target_class == "web_request"
        and 6 of ($s*)
        and 3 of ($c*)
}

rule Phishkit_FamilyPet
{
    meta:
        description = "Phishing page from Phishkit.FamilyPet"
        classifications = "Phishing"
        threat_names = "Phishkit.FamilyPet"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s01 = "Signin Outlook WebApp Settings"
        $s02 = "&copy;2021 Microsoft"
        $s03 = ">Sign in</button>"
        $s04 = "The password you entered isn't correct. Try entering your correct password again."
        $s05 = "<span id=privateLabel aria-hidden=true>Private computer</span>"
        $s06 = "action=\"\" method=\"post\">"
        $s07 = "URLSearchParams(location.search).get('email');"
        $s08 = "URLSearchParams(location.search).get('error');"
        $s09 = "document.getElementById('pet')"
        $s10 = ".indexOf('@') + 1)"

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule Phishkit_Need
{
    meta:
        description = "Phishing page from Phishkit.Need"
        classifications = "Phishing"
        threat_names = "Phishkit.Need"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $r01 = "&nbsp;  &nbsp;  webmail Login"
        $r02 = "need.php"
        $r03 = "Secured Login session?"
        $r04 = "<title>WebMail </title>"

        $s01 = "img/favicons.png"
        $s02 = "img/opened-email-envelope.png"
        $s03 = "alt=\"Mailbox\""
        $s04 = "name=\"em\""
        $s05 = "name=\"ps\""
        $s06 = "remember-me"
        $s07 = "Privacy Policy"
        $s08 = "Copyright\xC2\xA9 2020"

    condition:
        vmray_target_class == "web_request"
        and all of ($r*)
        and 6 of ($s*)
}

rule Phishkit_Ellipsis
{
    meta:
        description = "Phishing page from Phishkit.Ellipsis"
        classifications = "Phishing"
        threat_names = "Phishkit.Ellipsis"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $r01 = "Function Disabled! Enter password to continue"
        $r02 = "action.php"
        $r03 = "card-body"
        $r04 = "card-title"
        $r05 = "ellipsis_white.svg"
        $r06 = "> Validation successful, you are now being redirected...."
        $r07 = "Sign in attempt timeout, verify your password"
        $r08 = "$(\"#div4\").show();"
        $r09 = "$(\"#myElem\").hide();"

        $s01 = "Microsoft Office Center"
        $s02 = "Arrow Backwards"
        $s03 = "Enter your account password."

    condition:
        vmray_target_class == "web_request"
        and 8 of ($r*)
        and all of ($s*)
}

rule Phishing_CaptchaSiteKeys
{
    meta:
        description = "Known captcha site keys associated with phishing"
        classifications = "Phishing"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "VMRay Labs"

    strings:
        $s01 = "6Ld_jjodAAAAAOy5KgC_xqaH8ZLf-EAZwkbDBOZm"
        $s02 = "6LeAvtAcAAAAAEtDoq_PrX0P-99KpYlMgPXn_pM1"
        $s03 = "6LfDaWscAAAAAFFgO6qqI64cFFZlLvC59c3jCU8w"
        $s04 = "6LeAskIdAAAAAHWmb5WAph9oTXXMosrTJM53IkB3"
        $s05 = "6Lc-zVMdAAAAAGx2YS4xxjKSS0ocZgR69aC5pG0-"
        $s06 = "6Lcn1iIdAAAAAOWBysRd39lQxrAz4sD_V0NRIXpt"
        $s07 = "6LcrNkIdAAAAADok-G4An_VjNlIk6z8obtlujQJz"
        $s08 = "6Ld6eFMdAAAAAP-dnpyVMtZmdKmonilD9hGLH_KB"
        $s09 = "6LdFtVMdAAAAAL7gRM3hgECSDqkPYaiXbU-uQX38"
        $s10 = "6LeJSycdAAAAAKisGo8fp6CAOvn_J0MDDUHL-eLk"
        $s11 = "6LdxVDgdAAAAAMlFwVhX-8iAS8SiAuRQqoE9fW79"
        $s12 = "6LelCWMdAAAAAA61EGmH_smy2YDebD9IVmaOA-6O"
        $s13 = "6LeR2CgfAAAAAHMWchxky6KqN77ZUal4Gq_hVLlt"
        $s14 = "6Levs98eAAAAADrF2_GuW5AybKMZvHt21LVLYcqk"
        $s15 = "6Lcf2-EhAAAAAAb4lCjGZLljSQMQ9lL7LxhkWGBN"

    condition:
        vmray_target_class == "web_request"
        and any of them
}

rule Phishing_CaptchaPage
{
    meta:
        description = "Captcha-only page commonly used for phishing"
        classifications = "Phishing"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "VMRay Labs"

    strings:
        $r01 = "g-recaptcha"
        $r02 = "data-sitekey"
        $r03 = "data-callback"

        $s01 = "my-auto"
        $s02 = "recaptchaCallback"
        $s03 = "document.getElementById(\"myForm\")"

        $t01 = "correctCaptcha"
        $t02 = "grecaptcha"
        $t03 = "g-recaptcha-response"
        $t04 = "location.hash.substr(1)"

        $f01_1 = "<form method=\"post\""
        $f01_2 = "action=\"main.php\""
        $f02_1 = "<form action=\"main.php#"
        $f02_2 = "method=\"post\" id=\"myForm\">"

    condition:
        vmray_target_class == "web_request"
        and all of ($r*)
        and (
            (
                all of ($s*)
                and 2 of ($f*)
            )
            or all of ($t*)
        )
}

rule Phishing_CaptchaPage_Demo
{
    meta:
        description = "Captcha demo page associated with phishing"
        classifications = "Phishing"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "VMRay Labs"

    strings:
        $s01 = "reCAPTCHA demo: Simple page"
        $s02 = "onloadCallback = function()"
        $s03 = "grecaptcha.render"
        $s04 = "html_element"
        $s05 = "sitekey"
        $s06 = "script src=\"https://www.google.com/recaptcha/api.js\""

        $f01 = "form action=\"\" method=\"post\"" nocase
        $f02 = "div id=\"html_element\""
        $f03 = "input type=\"submit\" name=\"submit\"" nocase

        $c01 = "human" nocase
        $c02 = "payroll" nocase

    condition:
        vmray_target_class == "web_request"
        and all of ($s*)
        and all of ($f*)
        and any of ($c*)
}

rule Phishkit_Modax
{
    meta:
        description = "Phishing page from Phishkit.Modax"
        classifications = "Phishing"
        threat_names = "Phishkit.Modax"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s01 = /href\=\"javascript:void\(0\)\"\ id\=\"(office365modal|aolmodal|outlookmodal|gmailmodal|yahoomodal|othermodal)\"/
        $s02 = "To read the document, please enter with the valid email credentials that this file was sent to."
        $s03 = "We'll never share your email with anyone else."
        $s04 = "<!-- Modal for gmail -->"
        $s05 = "#ajaxModal"

        $m01 = "#gmailmodal"
        $m02 = "#outlookmodal"
        $m03 = "#aolmodal"
        $m04 = "#office365modal"
        $m05 = "#yahoomodal"
        $m06 = "#othermodal"

        $p01 = "Sign in with Office365"
        $p02 = "Sign in with Outlook"
        $p03 = "Sign in Outlook Web App (OWA)"
        $p04 = "Sign in with Google GSuite"
        $p05 = "Sign in with Other Mail"

    condition:
        vmray_target_class == "web_request"
        and all of ($s*)
        and 4 of ($m*)
        and 2 of ($p*)
}

rule Phishkit_DigidBank
{
    meta:
        description = "Phishing page from Phishkit.DigidBank"
        classifications = "Phishing"
        threat_names = "Phishkit.DigidBank"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s01 = "Mijn Overheid | Belastingdienst"
        $s02 = "DigiD account"
        $s03 = "federalefinancien.site/content/marktplaats/"
        $s04 = "FOD FinanciÃ«n"
        $s05 = "mp-Card mp-Card--rounded BanksListMolecule"
        $s06 = "input hidden=\"\" id=\"bankselect\" name=\"tikkiebankselect\""
        $s07 = "Type bankrekening"
        $s08 = "var selectedbank = document.getElementById('selected-bank');"
        $s09 = "radioselected && tcsaccepted && selectedbank.innerText !="
        $bank_cmp = "selectedbank.innerText == "

    condition:
        vmray_target_class == "web_request"
        and all of ($s*) and #bank_cmp > 4
}

rule Phishing_ObfuscatedJS
{
    meta:
        description = "Phishing page containing obfuscated JavaScript"
        classification = "Phishing"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "VMRay Labs"

    strings:
        $s1 = "\\x66\\x75\\x6e\\x63\\x74\\x69\\x6f\\x6e\\x20\\x2a\\x5c\\x28\\x20\\x2a\\x5c\\x29"
        $s2 = "\\x72\\x65\\x74\\x75\\x72\\x6e\\x20\\x28\\x66\\x75\\x6e\\x63\\x74\\x69\\x6f\\x6e\\x28\\x29\\x20"
        $s3 = "\\x5c\\x2b\\x5c\\x2b\\x20\\x2a\\x28\\x3f\\x3a\\x5b\\x61\\x2d\\x7a\\x41\\x2d\\x5a\\x5f\\x24\\x5d\\x5b\\x30\\x2d\\x39\\x61\\x2d\\x7a\\x41\\x2d\\x5a\\x5f\\x24\\x5d\\x2a\\x29"
        $s4 = "\\x28\\x28\\x28\\x2e\\x2b\\x29\\x2b\\x29\\x2b\\x29\\x2b\\x24"
        $s5 = "\\x7b\\x7d\\x2e\\x63\\x6f\\x6e\\x73\\x74\\x72\\x75\\x63\\x74\\x6f\\x72\\x28\\x22\\x72\\x65\\x74\\x75\\x72\\x6e\\x20\\x74\\x68\\x69\\x73\\x22\\x29\\x28\\x20\\x29"

        $email = "<input id=\"testx\" name=\"email\" value="

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule Phishkit_HumaidApp
{
    meta:
        description = "Phishing page from Phishkit.HumaidApp"
        classifications = "Phishing"
        threat_names = "Phishkit.HumaidApp"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s01 = "WebApp | User:"
        $s02 = /input\[type\=(submit|password|email)\]/
        $s03 = "To continue, please verify your ID to prove You're Human"
        $s04 = "<form method=\"post\" action=\"./app1.php\">"
        $s05 = "name=\"passwd\""

    condition:
        vmray_target_class == "web_request"
        and all of them
}

rule Phishkit_Flexdash
{
    meta:
        description = "Phishing page from Phishkit.Flexdash"
        classifications = "Phishing"
        threat_names = "Phishkit.Flexdash"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $required01 = "Outlook WebApp"
        $required02 = "//c.s-microsoft.com/static/"
        $required03 = "display: -ms-flexbox;"
        $required04 = ".sidebar .owaLogoContainer"

        $s01 = "onclick=\"suc()\""
        $s02 = "#inputPassword"
        $s03 = "'window.location.href=\\x27https://www.office.com/?auth=2\\x27;'"
        $s04 = "'InÂ­correct\\x20PÐ°Â­sÂ­sÂ­wÐ¾Â­rd.."
        $s05 = "'{}.constructor(\\x22return\\x20this\\x22)(\\x20)'"
        $s06 = "'\\x5c+\\x5c+\\x20*(?:_0x(?:[a-f0-9]){4,6}|(?:\\x5cb|\\x5cd)[a-z0-9]{1,4}(?:\\x5cb|\\x5cd))'"
        $s07 = "new XMLHttpRequest()"
        $s08 = "$('.login-box')"
        $s09 = "setTimeout"
        $s10 = "'while\\x20(true)\\x20{}'"

    condition:
        vmray_target_class == "web_request"
        and all of ($required*) and 7 of ($s*)
}

rule XHRPostCredentials
{
    meta:
        description = "Page sends password using XMLHttpRequest"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
		$s01 = "const request = new XMLHttpRequest();"
        $s02 = "btoa(`${form.email.value}||${form.password.value}`);"
		$s03 = "const requestData = `data=${dex}`;"

    condition:
        vmray_target_class == "web_request"
        and @s01 < @s02
		and @s02 < @s03
}

private rule _VBA_macro
{
    meta:
        description = "Rule used to restrict evaluation of macro content analysis rules"
        author = "VMRay Labs"

    condition:
        mime_type == "application/x-vba-macros"
}

rule VBA_Obfuscation_ObjectName
{
    meta:
        description = "VBA initializes COM object from long variable name; possible obfuscation"
        vti_default_score = 2
        vti_documents_score = 2
        vti_scripts_score = 2
        vti_browser_score = 2
        vti_msi_score = 2
        vti_static_score = 2
        author = "VMRay Labs"

    strings:
        $ = /\bCreateObject\s*\(\s*[a-z_]{12,}\)/ nocase
        $ = /\bCreateObject\s*\(\s*\"[\w\.]+\"\s*[&+,]\s*\w+\s*[&+,]\s*\"[\w\.]+\"\s*\)/ nocase
        $ = /\bCreateObject\s*\(\s*\w{10,}([\s+&]*[a-z]+)*\)/ nocase
        $ = /\bCreateObject\s*\(\s*\w+\((\"?[\S ]+\"?([,+&]\s*)?)\)\)/ nocase

    condition:
        _VBA_macro and any of them
}

rule VBA_Create_File
{
    meta:
        description = "VBA macro contains file creation commands; possible dropper"
        vti_default_score = 2
        vti_documents_score = 2
        vti_scripts_score = 2
        vti_browser_score = 2
        vti_msi_score = 2
        vti_static_score = 2
        author = "VMRay Labs"

    strings:
        $ado = /\bCreateObject\s*\(\s*(\"ADODB\.Stream\")\s*\)/ nocase
        $ado_methods = /\b\w+\.(CopyTo|SaveToFile|Write(Line|Text)?)\s*[\w\.\"\\\-\/:,+~!@#$&%?()<>= ]+\W/ nocase

        $fso = /\bCreateObject\s*\(\s*(\"Scripting\.FileSystemObject\")\s*\)/ nocase
        $fso_methods = /\b\w+\.(CreateTextFile|Write(Line|Text)?)\s*[\w\.\"\\\-\/:,+~!@#$&%?()<>= ]+\W/ nocase

        $api = /\bCreateFile(A|W)?\s*\(?\"?\w+\"?(,\s*[\"\w&]+){6}\)/ nocase

        $bin1 = /\bOpen\s+\w+\s+For\s+Binary\s+(Access\s+\w+\s+)?As\s+#\d{1,3}/ nocase
        $bin2 = /\bPut\s+#\d{1,3},\s*\d+,\s*\w+/

    condition:
        _VBA_macro
        and (
            ($ado and $ado_methods)
            or ($fso and $fso_methods)
            or any of ($api*)
            or 2 of ($bin*)
            or (VBA_Obfuscation_ObjectName and ($ado_methods or $fso_methods))
        )
}

rule VBA_Download_Commands
{
    meta:
        description = "VBA macro may attempt to download external content; possible dropper"
        vti_default_score = 2
        vti_documents_score = 2
        vti_scripts_score = 2
        vti_browser_score = 2
        vti_msi_score = 2
        vti_static_score = 2
        author = "VMRay Labs"

    strings:
        $msxml = /\bCreateObject\s*\(\s*(\"Microsoft\.XMLHTTP\"|\"MSXML2\.XMLHTTP\"|\"MSXML2\.ServerXMLHTTP\.\d\.\d\"|\"WinHttp\.WinHttpRequest\.\d.\d\")\s*\)/ nocase
        $msxml_methods = /\b\w+\.(Open|Send|SetRequestHeader)\s*[\w\.\"\\\-\/:,+~!@#$&%?()<>= ]+\W/ nocase

        $api1 = "URLDownloadToFileA" fullword nocase

    condition:
        _VBA_macro
        and (
            ($msxml and $msxml_methods)
            or any of ($api*)
            or (VBA_Obfuscation_ObjectName and $msxml_methods)
        )
}

rule VBA_Execution_Commands
{
    meta:
        description = "VBA macro may execute files or system commands"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $api1 = /\bCreateProcessA?\b\s*\(?\"?[\w&]+\"?(,\s*[\"\w&]+){9}\)/
        $api2 = /\bShellExecuteA?\b\s*\(?[\"\w&]+(,\s*[\"\w&]+){5}\)?/ nocase
        $api3 = /\bWinExec\b\s+\(?[\\\w\"\. :~]+,\s*\d\)?/ nocase

    condition:
        _VBA_macro
        and (
            any of ($api*)
        )
}

rule VBA_Obfuscation_Base64_PEFile
{
    meta:
        description = "VBA contains base64-encoded PE signature; possible dropper"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "VMRay Labs"

    strings:
        $ = "TVqQAAMAAAAEAAAA//8AALgAAA"
        $ = "TVqQAAIAAAAEAA8A//8AALgAAA"
        $ = "TVqAAAEAAAAEABAAAAAAAAAAAA"
        $ = "TVoAAAAAAAAAAAAAAAAAAAAAAA"
        $ = "TVpTAQEAAAAEAAAA//8AALgAAAA"

    condition:
        _VBA_macro and any of them
}

rule VBA_Obfuscation_Chain_Funcs
{
    meta:
        description = "VBA contains numerous functions which only call another function; possible obfuscation"
        vti_default_score = 2
        vti_documents_score = 2
        vti_scripts_score = 2
        vti_browser_score = 2
        vti_msi_score = 2
        vti_static_score = 2
        author = "VMRay Labs"

    strings:
        $func_only_calls = /\b(Private|Public|Static)?\s*(Function|Sub)\s+\w+\(\)(\s*As\s*\w+)?(\s*As\s*\w+)?(\s+(Call\s*)?\w+(\s*\(?\s*\"\w+\"?\)?){1,2})+\s+End\s+(Function|Sub)/ nocase

    condition:
        _VBA_macro
        and #func_only_calls > 10
}

rule VBA_Obfuscation_Long_VarName
{
    meta:
        description = "VBA contains excessively long variable names; possible obfuscation"
        vti_default_score = 2
        vti_documents_score = 2
        vti_scripts_score = 2
        vti_browser_score = 2
        vti_msi_score = 2
        vti_static_score = 2
        author = "VMRay Labs"

    strings:
        $var1 = /Const [a-z]{30,}/ fullword nocase
        $var2 = /Dim [a-z]{30,}/ fullword nocase
        $var3 = /Set [a-z]{30,}/ fullword nocase

    condition:
        _VBA_macro and for any of ($var*) : ( # > 5 )
}

rule VBA_Process_Injection
{
    meta:
        description = "VBA macro may attempt to inject code into another process"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "VMRay Labs"

    strings:
        $ = "CreateRemoteThread" fullword nocase
        $ = "CreateThread" fullword nocase
        $ = "CreateToolhelp32Snapshot" fullword nocase
        $ = "LoadLibraryA" fullword nocase
        $ = "NtCreateThreadEx" fullword nocase
        $ = "NtUnmapViewOfSection" fullword nocase
        $ = "OpenProcess" fullword nocase
        $ = "QueueUserAPC" fullword nocase
        $ = "RtlCreateUserThread" fullword nocase
        $ = "RtlMoveMemory" fullword nocase
        $ = "SetThreadContext" fullword nocase
        $ = "SuspendThread" fullword nocase
        $ = "VirtualAlloc" fullword nocase
        $ = "VirtualAllocEx" fullword nocase
        $ = "VirtualProtect" fullword nocase
        $ = "WriteProcessMemory" fullword nocase
        $ = "ZwUnmapViewOfSection" fullword nocase

    condition:
        _VBA_macro and 3 of them
}

rule VBA_Time_Delay_Loops
{
    meta:
        description = "VBA macro utilizes time delay loops; possible impact upon dynamic analysis"
        vti_default_score = 1
        vti_documents_score = 1
        vti_scripts_score = 1
        vti_browser_score = 1
        vti_msi_score = 1
        vti_static_score = 1
        author = "VMRay Labs"

    strings:
        $do_until = /\bDo Until\s+\((Now|Time)(\(\))?\s*>=?\s*\w+\)/ nocase
        $loop_until = /\bDo\s+(\S+)?\s*DoEvents\s+(\S+)?\s*Loop Until\s+\w+\s*>?=\s*\w+/ nocase

    condition:
        _VBA_macro
        and (
            any of them
        )
}

rule VBA_Time_Delay_with_HighVal
{
    meta:
        description = "VBA macro utilizes long time delay functions; possible analysis counter-measure"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $sleep_func = /[^.']Sleep\s*\(?\s*\d{5,}(\s*\))?/ nocase
        $sleep_method = /\b(System\.Threading\.Thread\.|wscript\.)Sleep\s*(\(\s*)?\d{5,}\)?/ nocase

        $wait_dateadd = /\bApplication\.Wait\s+DateAdd\s*\(\s*(\"s\",\s*\d{2,}|\"[hm]\",\s*\d),\s*Now\s*(\(\))?\s*\)/ nocase
        $wait_timeserial_h = /\bApplication\.Wait\s+(\(\s*)?(Time\s*\+\s*)?TimeSerial\(\s*Hour\(Now(\(\))?\)\s*\+\s*\d+,\s*Minute\(Now(\(\))?\),\s*Second\(Now(\(\))?\)\)/ nocase
        $wait_timeserial_m = /\bApplication\.Wait\s+(\(\s*)?(Time\s*\+\s*)?TimeSerial\(\s*Hour\(Now(\(\))?\),\s*Minute\(Now(\(\))?\)\s*\+\s*\d+,\s*Second\(Now(\(\))?\)\)/ nocase
        $wait_timeserial_s = /\bApplication\.Wait\s+(\(\s*)?(Time\s*\+\s*)?TimeSerial\(\s*Hour\(Now(\(\))?\),\s*Minute\(Now(\(\))?\),\s*Second\(Now(\(\))?\)\s*\+\s*(0\d{2,}|[1-9][0-9]+)\s*\)/ nocase
        $wait_timestr = /\bApplication.Wait\s+(\(\s*)?\"(([1-9]|0[1-9]|[1-9][0-9]):\d{2}:\d{1,2}|\d{2}:(0[1-9]|[1-9][0-9]):\d{1,2}|\d{1,2}:\d{2}:[1-9][0-9])\"\)?/ nocase
        $wait_timeval = /\bApplication\.Wait\s+(\(\s*)?Now(\(\))?\s*\+\s*TimeValue\(\s*\"(([1-9]|0[1-9]|[1-9][0-9]):\d{2}:\d{1,2}|\d{2}:(0[1-9]|[1-9][0-9]):\d{1,2}|\d{1,2}:\d{2}:[1-9][0-9])\"\)\)?/ nocase

    condition:
        _VBA_macro
        and (
            any of them
        )
}

rule VBA_Time_Delay_with_Obfuscation
{
    meta:
        description = "VBA macro utilizes obfuscated time delay functions; possible analysis counter-measure"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $time_serial = /\bTimeSerial\(\s*[a-z]+,\s*[a-z]+,\s*\d+\s*\)/ nocase
        $time_value = /\bTimeValue\(\s*[a-z]+\(.+\)\)/ nocase

    condition:
        _VBA_macro
        and (
            any of them
        )
}

rule WScriptShell_Case_Anomaly
{
    meta:
        description = "Obfuscated wscript.shell commands"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "Florian Roth"
        source = "https://github.com/Neo23x0/signature-base"
        original_name = "WScriptShell_Case_Anomaly"
        license = "GPL-3.0 (https://opensource.org/licenses/GPL-3.0)"

    strings:
        $s1 = "WScript.Shell\").Run" nocase ascii wide
        $sn1 = "WScript.Shell\").Run" ascii wide
        $sn2 = "wscript.shell\").run" ascii wide
        $sn3 = "WSCRIPT.SHELL\").RUN" ascii wide
        $sn4 = "Wscript.Shell\").Run" ascii wide
        $sn5 = "WScript.Shell\").Run" ascii wide
        $sn6 = "WScript.shell\").Run" ascii wide

    condition:
        _VBA_macro and $s1 and not 1 of ($sn*)
}

rule ReflectiveLoader
{
    meta:
        description = "Reflective loader usage"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        source = "https://github.com/Neo23x0/signature-base"
        original_name = "ReflectiveLoader"
        license = "GPL-3.0 (https://opensource.org/licenses/GPL-3.0)"

    strings:
        $s1 = "ReflectiveLoader" fullword ascii
        $s2 = "ReflectivLoader.dll" fullword ascii
        $s3 = "?ReflectiveLoader@@" ascii

    condition:
        uint16(0) == 0x5a4d and (1 of them or pe.exports("ReflectiveLoader") or pe.exports("_ReflectiveLoader@4") or pe.exports("?ReflectiveLoader@@YGKPAX@Z"))
}

rule Reflective_DLL_Loader_Aug17_1
{
    meta:
        description = "Reflective DLL loader"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "Florian Roth"
        source = "https://github.com/Neo23x0/signature-base"
        original_name = "Reflective_DLL_Loader_Aug17_1"
        license = "GPL-3.0 (https://opensource.org/licenses/GPL-3.0)"

    strings:
        $x1 = "\\Release\\reflective_dll.pdb" ascii
        $x2 = "reflective_dll.x64.dll" fullword ascii
        $s3 = "DLL Injection" fullword ascii
        $s4 = "?ReflectiveLoader@@YA_KPEAX@Z" fullword ascii

    condition:
        (uint16(0) == 0x5a4d and filesize < 300KB and (pe.imphash() == "4bf489ae7d1e6575f5bb81ae4d10862f" or pe.exports("?ReflectiveLoader@@YA_KPEAX@Z") or (1 of ($x*) or 2 of them))) or (2 of them)
}

rule DLL_Injector_Lynx
{
    meta:
        description = "Lynx DLL injector"
        threat_names = "Lynx"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "Florian Roth"
        source = "https://github.com/Neo23x0/signature-base"
        original_name = "DLL_Injector_Lynx"
        license = "GPL-3.0 (https://opensource.org/licenses/GPL-3.0)"

    strings:
        $x1 = " -p <TARGET PROCESS NAME> | -u <DLL PAYLOAD> [--obfuscate]" fullword wide
        $x2 = "You've selected to inject into process: %s" fullword wide
        $x3 = "Lynx DLL Injector" fullword wide
        $x4 = "Reflective DLL Injector" fullword wide
        $x5 = "Failed write payload: %lu" fullword wide
        $x6 = "Failed to start payload: %lu" fullword wide
        $x7 = "Injecting payload..." fullword wide

    condition:
        (uint16(0) == 0x5a4d and filesize < 800KB and 1 of them) or (3 of them)
}

rule Reflective_DLL_Loader_Aug17_2
{
    meta:
        description = "Reflective DLL loader"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "Florian Roth"
        source = "https://github.com/Neo23x0/signature-base"
        original_name = "Reflective_DLL_Loader_Aug17_2"
        license = "GPL-3.0 (https://opensource.org/licenses/GPL-3.0)"

    strings:
        $x1 = "\\ReflectiveDLLInjection-master\\" ascii
        $s2 = "reflective_dll.dll" fullword ascii
        $s3 = "DLL injection" fullword ascii
        $s4 = "_ReflectiveLoader@4" fullword ascii
        $s5 = "Reflective Dll Injection" fullword ascii

    condition:
        (uint16(0) == 0x5a4d and filesize < 200KB and (pe.imphash() == "59867122bcc8c959ad307ac2dd08af79" or pe.exports("_ReflectiveLoader@4") or 2 of them)) or (3 of them)
}

rule Reflective_DLL_Loader_Aug17_3
{
    meta:
        description = "Reflective DLL loader"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "Florian Roth"
        source = "https://github.com/Neo23x0/signature-base"
        original_name = "Reflective_DLL_Loader_Aug17_3"
        license = "GPL-3.0 (https://opensource.org/licenses/GPL-3.0)"

    strings:
        $s1 = "\\Release\\inject.pdb" fullword ascii
        $s2 = "!!! Failed to gather information on system processes! " fullword ascii
        $s3 = "reflective_dll.dll" fullword ascii
        $s4 = "[-] %s. Error=%d" fullword ascii
        $s5 = "\\Start Menu\\Programs\\reflective_dll.dll" ascii

    condition:
        (uint16(0) == 0x5a4d and filesize < 300KB and (pe.imphash() == "26ba48d3e3b964f75ff148b6679b42ec" or 2 of them)) or (3 of them)
}

rule Reflective_DLL_Loader_Aug17_4
{
    meta:
        description = "Reflective DLL loader"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "Florian Roth"
        source = "https://github.com/Neo23x0/signature-base"
        original_name = "Reflective_DLL_Loader_Aug17_4"
        license = "GPL-3.0 (https://opensource.org/licenses/GPL-3.0)"

    strings:
        $x1 = "<H1>&nbsp;>> >> >> Keylogger Installed - %s %s << << <<</H1>" fullword ascii
        $s1 = "<H3> ----- Running Process ----- </H3>" fullword ascii
        $s2 = "<H2>Operating system: %s<H2>" fullword ascii
        $s3 = "<H2>System32 dir:  %s</H2>" fullword ascii

    condition:
        (uint16(0) == 0x5a4d and filesize < 2000KB and 2 of them)
}

rule SneakyToooYou_Black_Loader
{
    meta:
        description = "Sneaky.toooyou loader"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $s1 = "[Sneaky.toooyou]::"
        $s2 = "[Microsoft.VisualBasic.Interaction]::CallByname([AppDomain]::CurrentDomain"
        $s3 = "[Microsoft.VisualBasic.CallType]::Method"
		$s4 = "[System.Text.Encoding]::UTF8.GetString([System.Convert]::ToInt32($_,2))"

    condition:
		vmray_target_class == "file"
		and all of them
}

rule Shellcode_Find_kernel32_PEB
{
    meta:
        description = "x86 code to find kernel32.dll using the PEB; possible shellcode"
        ref = "https://resources.infosecinstitute.com/pattern-based-approach-memory-shellcodes-detection/"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        // using InInitializationOrder list
        $s1 = {
            64 (a1 | 8b ??) 30 00 00 00  // mov <reg>, fs:[0x30]
            8b ?? 0c                     // mov <reg>, [<reg>+0xc]
            8b ?? 1c                     // mov <reg>, [<reg>+0x1c]
            [1-2]                        // mov <reg>, [<reg>] / lods
            8b ?? 08                     // mov <reg>, [<reg>+0x8]
        }
        // using InMemoryOrder list
        $s2 = {
            64 (a1 | 8b ??) 30 00 00 00  // mov <reg>, fs:[0x30]
            8b ?? 0c                     // mov <reg>, [<reg>+0xc]
            8b ?? 14                     // mov <reg>, [<reg>+0x14]
            [1-2]                        // mov <reg>, [<reg>] / lods
            [1-2]                        // mov <reg>, [<reg>] / lods
            8b ?? 10                     // mov <reg>, [<reg>+0x10]
        }

    condition:
        mime_type != "application/x-dosexec" and any of them
}

rule Shellcode_Find_kernel32_SEH
{
    meta:
        description = "x86 code to find kernel32.dll using SEH; possible shellcode"
        ref = "https://resources.infosecinstitute.com/pattern-based-approach-memory-shellcodes-detection/"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $s1 = {
            8B ?? 04        // mov <reg>, [<reg>+0x4]
            4?              // dec <reg>
            66 31 ??        // xor <reg>, <reg>
            66 81 3? 4D 5A  // cmp WORD PTR [<reg>], 0x5a4d
        }

    condition:
        mime_type != "application/x-dosexec" and $s1
}

rule Shellcode_Find_kernel32_TEB
{
    meta:
        description = "x86 code to find kernel32.dll using the TEB; possible shellcode"
        ref = "https://resources.infosecinstitute.com/pattern-based-approach-memory-shellcodes-detection/"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $s1 = {
            8b ?? e4        // mov <reg>, [reg-0x1c]
            4?              // dec <reg>
            66 31 ??        // xor <reg>, <reg>
            66 81 3? 4D 5A  // cmp WORD PTR [<reg>], 0x5a4d
        }

    condition:
        mime_type != "application/x-dosexec" and any of them
}

rule Shellcode_GetPC_fstenv
{
    meta:
        description = "x86 GetPC code using fstenv; possible shellcode"
        ref = "https://resources.infosecinstitute.com/pattern-based-approach-memory-shellcodes-detection/"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $s = {
            d9 74 24 f4                // fnstenv [esp-0xc]
            (58|59|5a|5b|5c|5d|5e|5f)  // pop <reg>
        }

    condition:
        mime_type != "application/x-dosexec" and $s
}

rule Shellcode_API_hashing
{
    meta:
        description = "x86 API hashing code often found in shellcode"
        ref = "https://www.fireeye.com/blog/threat-research/2012/11/precalculated-string-hashes-reverse-engineering-shellcode.html"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "Didier Stevens (https://DidierStevens.com)"
        source = "https://github.com/DidierStevens/DidierStevensSuite"
        original_name = "maldoc_API_hashing"
        license = "public domain"

    strings:
        $s = {
            ac        // lods al, BYTE PTR [esi]
            84 C0     // test al, al
            74 07     // je <end>
            C1 CF ??  // ror edi, <shift>
            01 C7     // add edi, eax
            EB F4     // jmp <loop>
        }

    condition:
        mime_type != "application/x-dosexec" and $s
}

rule Shellcode_NOP_sled_percent_enc {
    meta:
        description = "Percent-encoded NOP sled; possible shellcode"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "VMRay Labs"

    strings:
        $s1 = "%90%90%90%90%90%90%90%90"
        $s2 = "%u9090%u9090%u9090%u9090"

    condition:
        any of them
}

rule Shellcode_Loader
{
    meta:
        description = "Loader shellcode used by multiple malware families"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "VMRay Labs"

    strings:
        // E8 00 00 00 00       call    $+5
        // 5B                   pop     ebx
        // 81 EB 94 0E 78 00    sub     ebx, 780E94h
        // 81 EB 7D 4D EC 00    sub     ebx, 0EC4D7Dh
        $code01 = {E8 00 00 00 00 5B 81 EB ?? ?? ?? 00}

        // 56                   push    esi
        // 6A 06                push    6
        // 68 88 4E 0D 00       push    0D4E88h
        // 8D BB A5 09 78 00    lea     edi, [ebx+7809A5h]
        // FF D7                call    edi
        $code02 = {56 6A 06 68 88 4E 0D 00 8D BB ?? ?? ?? 00 FF D7}

        // 8A 10                mov     dl, [eax]
        // 80 CA 60             or      dl, 60h
        // 01 D3                add     ebx, edx
        // D1 E3                shl     ebx, 1
        // 03 45 10             add     eax, [ebp+arg_8]
        // 8A 08                mov     cl, [eax]
        // 84 C9                test    cl, cl
        // E0 EE                loopne  loc_1F018A
        // 31 C0                xor     eax, eax
        // 8B 4D 0C             mov     ecx, [ebp+arg_4]
        // 39 CB                cmp     ebx, ecx
        // 74 01                jz      short loc_1F01A6
        // 40                   inc     eax
        $code03 = {8A 10 80 CA 60 01 D3 D1 E3 03 45 10 8A 08 84 C9 E0 EE 31 C0 8B 4D 0C 39 CB 74 01 40}

    condition:
        vmray_target_class == "memory_dump"
        and filesize < 6KB
        and all of them
}

rule BenignYaraWhitelistSample
{
    meta:
        description = "Whitelisted, benign sample"
        vti_default_score = -1
        vti_documents_score = -1
        vti_scripts_score = -1
        vti_browser_score = -1
        vti_msi_score = -1
        vti_static_score = -1
        author = "VMRay Labs"

    strings:
        $s1 = "This is an internal test file:" fullword
        $s2 = "b41a526b8ea36d2b6a7ee1fcd988e7624b7c20bf385bbcd64d60fe5fa65bd76548cf96d60" fullword

    condition:
        mime_type == "text/plain"
        and filesize == 253
        and $s1 at 0
        and #s2 == 3
}

rule JS_Unicode_escaped_bytes
{
    meta:
        description = "JavaScript contains many unicode-escaped bytes; possible obfuscation"
        vti_default_score = 1
        vti_documents_score = 1
        vti_scripts_score = 1
        vti_browser_score = 1
        vti_msi_score = 1
        vti_static_score = 1
        author = "VMRay Labs"

    strings:
        $s1 = /(\\u[0-9a-fA-F]{4}){10}/
        $s2 = /(\\u[0-9a-fA-F]{4}){3}/

    condition:
        mime_type == "text/javascript"
        and ($s1 or #s2 > 5)
}

rule JS_Alphanum_text_blob
{
    meta:
        description = "JavaScript contains large alpha-numeric text blob; possible obfuscation"
        vti_default_score = 2
        vti_documents_score = 2
        vti_scripts_score = 2
        vti_browser_score = 1
        vti_msi_score = 2
        vti_static_score = 2
        author = "VMRay Labs"

    strings:
        $s1 = /='[a-z0-9]{200,}'/ nocase
        $s2 = /="[a-z0-9]{200,}"/ nocase

    condition:
        mime_type == "text/javascript" and any of them
}

rule Inter_Kit
{
    meta:
        description = "Inter Skimmer Kit"
        threat_name = "Inter Skimmer"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        author = "VMRay Labs"

    strings:
        $s_reg_1 = "/^(?:4[0-9]{12}(?:[0-9]{3})?)$/"
        $s_reg_2 = "/^(?:5[1-5][0-9]{14})$/"
        $s_reg_3 = "/^(?:3[47][0-9]{13})$/"
        $s_reg_4 = "/^(?:6(?:011|5[0-9][0-9])[0-9]{12})$/"
        $s_reg_5 = "/[^0-9-\\s]+/"
        $s_reg_6 = "/\\D/g"
        $s_flag = "\\x53\\x58\\x4e\\x57\\x59\\x57\\x78\\x70\\x5a\\x41\\x3d\\x3d" // isValid

    condition:
        vmray_target_class == "web_request"
        and all of them
}


rule CredentialStealer_Generic_Backdoor
{
    meta:
        description = "Strings that indicate password store access; possible credential stealer"
        classifications = "Spyware"
        vti_default_score = 3
        vti_documents_score = 3
        vti_scripts_score = 3
        vti_browser_score = 3
        vti_msi_score = 3
        vti_static_score = 3
        author = "Florian Roth"
        source = "https://github.com/Neo23x0/signature-base"
        original_name = "CredentialStealer_Generic_Backdoor"
        license = "GPL-3.0 (https://opensource.org/licenses/GPL-3.0)"

    strings:
        $s1 = "GetOperaLoginData" fullword ascii
        $s2 = "GetInternetExplorerCredentialsPasswords" fullword ascii
        $s3 = "%s\\Opera Software\\Opera Stable\\Login Data" fullword ascii
        $s4 = "select *  from moz_logins" fullword ascii
        $s5 = "%s\\Google\\Chrome\\User Data\\Default\\Login Data" fullword ascii
        $s6 = "Host.dll.Windows" fullword ascii
        $s7 = "GetInternetExplorerVaultPasswords" fullword ascii
        $s8 = "GetWindowsLiveMessengerPasswords" fullword ascii
        $s9 = "%s\\Chromium\\User Data\\Default\\Login Data" fullword ascii
        $s10 = "%s\\Opera\\Opera\\profile\\wand.dat" fullword ascii

    condition:
        (uint16(0) == 0x5a4d and 4 of them)
}

rule APLib_Compressed_PE {
    meta:
        description = "PE file compressed by APLib"
        vti_default_score = 2
        vti_documents_score = 4
        vti_scripts_score = 2
        vti_browser_score = 4
        vti_msi_score = 2
        vti_static_score = 2
        author = "VMRay Labs"

    strings:
       
        $ = {
            4D 38 5A 90 38 03 66 02 04 09 71 FF 81 B8 C2 91
            01 40 C2 15 C6 F8 09 1C 0E 1F BA F8 00 B4 09 CD
            21 B8 01 4C C0 0A 54 68 69 73 20 0E 70 72 6F 67
            67 61 6D 87 63 47 6E 1F 4F 74 E7 62 65 AF CF 75
            5F 98 69 06 44 4F 7E 53 03 6D 6F 64 65
            }
    condition:
        any of them
}

rule CryptOne_Packer
{
    meta:
        description = "Shellcode used by the CryptOne packer"
        threat_names = "CryptOne"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        // push  rbp
        // mov   ebp, esp
        // push  rcx
        // mov   dword [var_4h], 0
        // jmp   0x16
        // mov   eax, dword [var_4h]
        // add   eax, 4
        // mov   dword [var_4h], eax
        // mov   ecx, dword [var_4h]
        // cmp   ecx, dword [arg_ch]
        // jae   0x4c
        // mov   edx, dword [arg_8h]
        // add   edx, dword [var_4h]
        // mov   eax, dword [rdx]
        // add   eax, dword [var_4h]
        // mov   ecx, dword [arg_8h]
        // add   ecx, dword [var_4h]
        // mov   dword [rcx], eax
        // mov   edx, dword [var_4h]
        // add   edx, 0x3e9 ; 1001
        // mov   eax, dword [arg_8h]
        // add   eax, dword [var_4h]
        // xor   edx, dword [rax]
        // mov   ecx, dword [arg_8h]
        // add   ecx, dword [var_4h]
        // mov   dword [rcx], edx
        // jmp   0xd
        // mov   esp, ebp
        // pop   rbp
        // ret
        $decrypt_payload = { 55 8b ec 51 c7 45 fc 00 00 00 00 eb 09 8b 45 fc 83 c0 04 89 45 fc 8b 4d fc 3b 4d 0c 73 2e 8b 55 08 03 55 fc 8b 02 03 45 fc 8b 4d 08 03 4d fc 89 01 8b 55 fc 81 c2 ?? ?? 00 00 8b 45 08 03 45 fc 33 10 8b 4d 08 03 4d fc 89 11 eb c1 8b e5 5d c3 }

    condition:
        (
            vmray_target_class == "memory_dump"
        )
        and $decrypt_payload
}

rule Dotnet_ConnPacker
{
    meta:
        description = ".NET packer"
        threat_names = "Goobin"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $c1 = {18 8D ?? ?? ?? ?? 25 16 72 ?? ?? ?? ?? A2 25 17 72 ?? ?? ?? ?? A2 0? 16 0? 2B ?? 0? 0D 16 (13 ?? | ??) 2B ?? 09 (11 ?? | ??) 9A 13 ?? 11 ?? 28 ?? ?? ?? ?? 16 FE ??}
        $c2 = "https://www.google.com/" wide
        $c3 = "https://www.bing.com/" wide

    condition:
        (vmray_target_class == "memory_dump" and uint16(0) == 0x5A4D)
        and all of them
}

rule Packer_RedNet
{
    meta:
        description = "Packer used to distribute malware"
        threat_names = "RedNet"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $c01 = {
            19 19 19 19 19 19 19 19 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A 1A
            1A 1A 1A 1A 1A 1A 1A 1A 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B 1B
            1B 1B 1B 1B 1B 1B 1B 1C 00 00 00 00 01 00 00 00
        }
        $c02 = {
            23 00           // and     eax, [eax]
            2B 00           // sub     eax, [eax]
            33 00           // xor     eax, [eax]
            3B 00           // cmp     eax, [eax]
            43              // inc     ebx
        }
        $c03 = {
            C6 44 24 34 78  // mov     [esp+48h+var_14], 78h ; 'x'
            C6 44 24 35 61  // mov     [esp+48h+var_13], 61h ; 'a'
            88 54 24 3A     // mov     [esp+48h+var_E], dl
            C6 44 24 3E 66  // mov     [esp+48h+var_A], 66h ; 'f'
            C6 44 24 41 33  // mov     [esp+48h+var_7], 33h ; '3'
            C6 44 24 43 ??  // mov     [esp+48h+var_5], 53h ; 'S'
            C6 44 24 44 74  // mov     [esp+48h+var_4], 74h ; 't'
            88 54 24 46     // mov     [esp+48h+var_2], dl
            C6 44 24 40 ??  // mov     [esp+48h+var_8], 51h ; 'Q'
            C6 44 24 39 62  // mov     [esp+48h+var_F], 62h ; 'b'
            C7 44 24 10 01  // mov     [esp+48h+var_38], 1
            00 00 00
        }

        $s01 = "mscoree.dll" wide
        $s02 = "tBpBlBhBdB`B\\BXBTBPBLBHBDB@B<B8B4B0B,B(B$B B" wide ascii
        $s03 = "NoRemove"
        $s04 = "ForceRemove"

    condition:
        // Memory dump or file with PE header
        (
            vmray_target_class == "memory_dump"
            or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
        )
        and all of them
}

rule XBinder
{
    meta:
        description = "Packer used to distribute malware"
        threat_names = "XBinder"
        vti_default_score = 5
        vti_documents_score = 5
        vti_scripts_score = 5
        vti_browser_score = 5
        vti_msi_score = 5
        vti_static_score = 5
        author = "VMRay Labs"

    strings:
        $s00 = "META-INF/MANIFEST.MF"
        $s01 = "AES.class"
        $classes = ".classPK"
        $res = /resources\/\w+PK/

    condition:
        vmray_target_class == "file"
        and uint32(0) == 0x04034B50
        and all of ($s*)
        and #classes == 2
        and #res == 3
}

private rule _Powershell
{
    meta:
        description = "Rule used to restrict evaluation of powershell analysis rules"
        author = "VMRay Labs"

    condition:
        vmray_target_class == "file"
        and (
            mime_type == "text/x-powershell"
            or mime_type == "application/x-vba-macros"
            or mime_type == "text/javascript"
            or mime_type == "text/plain"
        )
        and filesize < 10MB
}

rule PowerShell_Download_Commands
{
    meta:
        description = "PowerShell may attempt to download external content; possible dropper"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "VMRay Labs"

    strings:
        $cmdlet1 = "Invoke-WebRequest" fullword nocase
        $cmdlet2 = "Start-BitsTransfer" fullword nocase

        $arg1 = "-Uri" fullword nocase
        $arg2 = "-OutFile" fullword nocase
        $arg3 = "-Source" fullword nocase
        $arg4 = "-Destination" fullword nocase

        $webclient_cmd1 = "Net.WebClient" fullword nocase
        $webclient_cmd2 = "New-Object" fullword nocase
        $webclient_method1 = "DownloadFile" fullword nocase
        $webclient_method2 = "DownloadString" fullword nocase

    condition:
        (analysis_id == "pdf"
        or analysis_id == "office97"
        or analysis_id == "olecf"
        or analysis_id == "ooxml"
        or analysis_id == "rtf")
        and _Powershell
        and ((any of ($cmdlet*) and any of ($arg*)) or (all of ($webclient_cmd*) and any of ($webclient_method*)))
}

rule PowerShell_Execution_Commands
{
    meta:
        description = "PowerShell command execution detected"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "VMRay Labs"

    strings:
        $ps1 = "PowerShell" fullword nocase
        $ps2 = "powershell.exe" fullword nocase

        $ep1 = "-ep bypass" fullword nocase
        $ep2 = "-exec bypass" fullword nocase
        $ep3 = "-executionpolicy bypass" fullword nocase
        $ep4 = "-noprofile" fullword nocase
        $ep5 = "-nop" fullword nocase

        $win1 = "-win hidden" fullword nocase
        $win2 = "-windowsstyle hidden" fullword nocase
        $win3 = "-w hidden" fullword nocase

        $command = "-Command" fullword nocase
        $command_enc1 = "-enc" fullword nocase
        $command_enc2 = "-encodedcommand" fullword nocase
        $command_file1 = "-File" fullword nocase
        $command_file2 = "-PSConsoleFile" fullword nocase
        $command_inv1 = "Invoke-Command" fullword nocase
        $command_inv2 = "-scriptblock" fullword nocase
        $command_exp1 = "Invoke-Expression -command" fullword nocase
        $command_exp2 = "Invoke-Expression $" nocase
        $command_sh1 = "Shell.Application" fullword nocase
        $command_sh2 = "Start-Process" fullword nocase

    condition:
        _Powershell
        and (
            1 of ($ps*) and any of ($ep*) and any of ($win*) and any of ($command*)
        )
}

rule PowerShell_Registry_Commands
{
    meta:
        description = "PowerShell may attempt to read/write system registry"
        vti_default_score = 2
        vti_documents_score = 2
        vti_scripts_score = 2
        vti_browser_score = 2
        vti_msi_score = 2
        vti_static_score = 2
        author = "VMRay Labs"

    strings:
        $cmdlet1 = "Get-Item" fullword nocase
        $cmdlet2 = "Get-ItemProperty" fullword nocase
        $cmdlet3 = "New-Item" fullword nocase
        $cmdlet4 = "New-ItemProperty" fullword nocase
        $cmdlet5 = "Rename-Item" fullword nocase
        $cmdlet6 = "Rename-ItemProperty" fullword nocase
        $cmdlet7 = "Remove-Item" fullword nocase
        $cmdlet8 = "Remove-ItemProperty" fullword nocase
        $cmdlet9 = "Set-Item" fullword nocase
        $cmdlet10 = "Set-ItemProperty" fullword nocase

        $com1 = "WScript.Shell" fullword nocase
        $com2 = ".RegDelete" fullword nocase
        $com3 = ".RegRead" fullword nocase
        $com4 = ".RegWrite" fullword nocase

        $path1 = /(\"|')HKLM/ fullword nocase
        $path2 = /(\"|')HKCU/ fullword nocase
        $path3 = "Registry::HKEY_CURRENT_USER" fullword nocase
        $path4 = "Registry::HKEY_LOCAL_MACHINE" fullword nocase

    condition:
        _Powershell
        and (mime_type == "text/x-powershell" or mime_type == "application/x-vba-macros")
        and (
            (any of ($cmdlet*) and any of ($path*))
            or (2 of ($com*) and not mime_type == "application/x-vba-macros")
        )
}

rule PowerShell_Case_Anomaly
{
    meta:
        description = "Obfuscated PowerShell hacktools"
        ref = "https://twitter.com/danielhbohannon/status/905096106924761088"
        vti_default_score = 2
        vti_documents_score = 2
        vti_scripts_score = 2
        vti_browser_score = 2
        vti_msi_score = 2
        vti_static_score = 2
        author = "Florian Roth"
        source = "https://github.com/Neo23x0/signature-base"
        original_name = "PowerShell_Case_Anomaly"
        license = "GPL-3.0 (https://opensource.org/licenses/GPL-3.0)"

    strings:
        $s1 = "powershell" fullword nocase ascii wide
        $sr1 = /(powershell|Powershell|PowerShell|POWERSHELL|powerShell)/ fullword ascii wide
        $sn1 = "powershell" fullword ascii wide
        $sn2 = "Powershell" fullword ascii wide
        $sn3 = "PowerShell" fullword ascii wide
        $sn4 = "POWERSHELL" fullword ascii wide
        $sn5 = "powerShell" fullword ascii wide
        $a1 = "wershell -e " nocase wide ascii
        $an1 = "wershell -e " wide ascii
        $an2 = "werShell -e " wide ascii
        $k1 = "-noprofile" fullword nocase ascii wide
        $kn1 = "-noprofile" ascii wide
        $kn2 = "-NoProfile" ascii wide
        $kn3 = "-noProfile" ascii wide
        $kn4 = "-NOPROFILE" ascii wide
        $kn5 = "-Noprofile" ascii wide

    condition:
        _Powershell and ((#s1 < 3 and #sr1 > 0 and #s1 > #sr1) or ($s1 and not 1 of ($sn*)) or ($a1 and not 1 of ($an*)) or ($k1 and not 1 of ($kn*)))
}

rule PowerShell_Invoke_PSImage
{
    meta:
        description = "Command to execute PowerShell from string"
        ref = "https://github.com/peewpw/Invoke-PSImage"
        vti_default_score = 4
        vti_documents_score = 4
        vti_scripts_score = 4
        vti_browser_score = 4
        vti_msi_score = 4
        vti_static_score = 4
        author = "Florian Roth"
        source = "https://github.com/Neo23x0/signature-base"
        original_name = "Invoke_PSImage"
        license = "GPL-3.0 (https://opensource.org/licenses/GPL-3.0)"

    strings:
        $ = "IEX([System.Text.Encoding]::ASCII.GetString(" ascii wide
        $ = "System.Drawing.Bitmap((a Net.WebClient).OpenRead(" ascii wide
        $ = { 89 50 4E 47 0D 0A 1A 0A 00 00 00 0D 49 48 44 52
            00 00 04 E4 00 00 03 A0 08 06 00 00 00 9D AF A9
            E8 00 00 00 09 70 48 59 73 00 00 19 D6 00 00 19
            D6 01 18 D1 CA ED 00 00 00 07 74 49 4D 45 07 E1
            0C 0F 13 1E 36 89 C4 28 BF 00 00 00 07 74 45 58
            74 41 75 74 68 6F 72 00 A9 AE CC 48 00 00 00 0C
            74 45 58 74 44 65 73 63 72 69 70 74 69 6F 6E 00
            13 09 21 23 00 00 00 0A 74 45 58 74 43 6F 70 79
            72 69 67 68 74 00 AC 0F CC 3A 00 00 00 0E 74 45
            58 74 43 72 65 61 74 69 6F 6E 20 74 69 6D 65 00
            35 F7 0F }

    condition:
        _Powershell and 1 of them
}

rule RyanBorlandProtectorAttributes
{
    meta:
        description = "Ryan Borland Protector Attributes"
        vti_default_score = 1
        vti_documents_score = 1
        vti_scripts_score = 1
        vti_browser_score = 1
        vti_msi_score = 1
        vti_static_score = 1
        author = "VMRay Labs"

    strings:
        $s1 = "%Ryan-_-Borland_Protector Cracked v1.0" fullword

    condition:
        (
            vmray_target_class == "memory_dump"
            or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
        )
        and all of them
}

rule BabelObfuscatorAttributes
{
    meta:
        description = "Babel Obfuscator Attributes"
        vti_default_score = 1
        vti_documents_score = 1
        vti_scripts_score = 1
        vti_browser_score = 1
        vti_msi_score = 1
        vti_static_score = 1
        author = "VMRay Labs"

    strings:
        $s1 = "BabelObfuscatorAttribute" fullword

    condition:
        (
            vmray_target_class == "memory_dump"
            or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
        )
        and all of them
}

rule YanoObfuscatorAttributes
{
    meta:
        description = "Yano Obfuscator Attributes"
        vti_default_score = 1
        vti_documents_score = 1
        vti_scripts_score = 1
        vti_browser_score = 1
        vti_msi_score = 1
        vti_static_score = 1
        author = "VMRay Labs"

    strings:
        $s1 = "YanoAttribute" fullword

    condition:
        (
            vmray_target_class == "memory_dump"
            or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
        )
        and all of them
}

rule DNGuardObfuscatorAttributes
{
    meta:
        description = "DNGuard HVM Attributes"
        vti_default_score = 1
        vti_documents_score = 1
        vti_scripts_score = 1
        vti_browser_score = 1
        vti_msi_score = 1
        vti_static_score = 1
        author = "VMRay Labs"

    strings:
        $s1 = "ZYXDNGuarder" fullword

    condition:
        (
            vmray_target_class == "memory_dump"
            or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
        )
        and all of them
}

rule MaxtoCodeObfuscatorAttributes
{
    meta:
        description = "MaxtoCode Obfuscator Attributes"
        vti_default_score = 1
        vti_documents_score = 1
        vti_scripts_score = 1
        vti_browser_score = 1
        vti_msi_score = 1
        vti_static_score = 1
        author = "VMRay Labs"

    strings:
        $s1 = "MaxtoCodeAttribute" fullword

    condition:
        (
            vmray_target_class == "memory_dump"
            or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
        )
        and all of them
}

rule NETReactorObfuscatorAttributes
{
    meta:
        description = ".NET Reactor Obfuscator Attributes"
        vti_default_score = 1
        vti_documents_score = 1
        vti_scripts_score = 1
        vti_browser_score = 1
        vti_msi_score = 1
        vti_static_score = 1
        author = "VMRay Labs"

    strings:
        $s1 = ".NETReactorAttribute" fullword

    condition:
        (
            vmray_target_class == "memory_dump"
            or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
        )
        and all of them
}

rule MultipleNetObfuscatorAttributes
{
    meta:
        description = ".NET file contains multiple obfuscator attributes"
        vti_default_score = 2
        vti_documents_score = 2
        vti_scripts_score = 2
        vti_browser_score = 2
        vti_msi_score = 2
        vti_static_score = 2
        author = "VMRay Labs"

    strings:
        $s1 = "%Ryan-_-Borland_Protector Cracked v1.0" fullword
        $s2 = "BabelObfuscatorAttribute" fullword
        $s3 = "YanoAttribute" fullword
        $s4 = "ZYXDNGuarder" fullword //DNGuard HVM
        $s5 = ".NETReactorAttribute" fullword
        $s6 = "MaxtoCodeAttribute" fullword

    condition:
    (
        vmray_target_class == "memory_dump"
        or (uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550)
    )
    and 2 of them
}